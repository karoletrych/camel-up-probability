{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./.fable/fable-library.2.3.12/Util.js","webpack:///./.fable/fable-library.2.3.12/Types.js","webpack:///./.fable/fable-library.2.3.12/Reflection.js","webpack:///./.fable/fable-library.2.3.12/Option.js","webpack:///./.fable/fable-library.2.3.12/Int32.js","webpack:///./.fable/fable-library.2.3.12/Long.js","webpack:///./.fable/fable-library.2.3.12/Seq.js","webpack:///./.fable/fable-library.2.3.12/Date.js","webpack:///./.fable/fable-library.2.3.12/RegExp.js","webpack:///./.fable/fable-library.2.3.12/String.js","webpack:///./.fable/fable-library.2.3.12/Map.js","webpack:///./.fable/fable-library.2.3.12/Set.js","webpack:///./.fable/fable-library.2.3.12/Array.js","webpack:///./.fable/fable-library.2.3.12/List.js","webpack:///.fable/Fable.React.4.1.3/Fable.Helpers.React.fs","webpack:///src/Info/View.fs","webpack:///src/Common/Common.fs","webpack:///src/Home/View.fs","webpack:///src/Navbar/View.fs","webpack:///./.fable/fable-library.2.3.12/lib/big.js","webpack:///./.fable/fable-library.2.3.12/Decimal.js","webpack:///.fable/Fable.Elmish.Browser.2.1.0/prelude.fs","webpack:///./.fable/fable-library.2.3.12/BigInt/n.js","webpack:///./.fable/fable-library.2.3.12/BigInt/z.js","webpack:///./.fable/fable-library.2.3.12/BigInt.js","webpack:///./.fable/fable-library.2.3.12/DateOffset.js","webpack:///.fable/Fable.Elmish.Browser.2.1.0/parser.fs","webpack:///./.fable/fable-library.2.3.12/AsyncBuilder.js","webpack:///./.fable/fable-library.2.3.12/Async.js","webpack:///.fable/Fable.Elmish.2.0.3/cmd.fs","webpack:///.fable/Fable.Elmish.React.2.1.0/common.fs","webpack:///./.fable/fable-library.2.3.12/MailboxProcessor.js","webpack:///.fable/Fable.Elmish.2.0.3/program.fs","webpack:///.fable/Fable.Elmish.Browser.2.1.0/navigation.fs","webpack:///src/Home/State.fs","webpack:///src/Domain/MoveCamel.fs","webpack:///src/App.fs","webpack:///.fable/Fable.Elmish.React.2.1.0/react.fs"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isDisposable","x","Dispose","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","toString","ObjectRef","_classCallCheck","this","_createClass","idMap","has","set","count","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","_typeof","GetHashCode","isArray","ar","Array","String","ArrayBuffer","isView","equalArraysWith","y","eq","equalArrays","equals","Equals","Date","compareDates","xtime","ytime","getTime","comparePrimitives","compareArraysWith","comp","compareArrays","compare","CompareTo","WeakMap","CaseRules","None","LowerFirst","changeCase","str","caseRule","charAt","toLowerCase","createObj","fields","fail","kvPair","Error","definedCaseRule","arguments","undefined","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","iterator","next","done","toJSON","err","return","CURRIED_KEY","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","partialApply","args","concat","mapCurriedArgs","fn","mappings","arg","mapArg","idx","mapping","expectedArity","actualArity","res","sameType","getPrototypeOf","constructor","declare","cons","superClass","subClass","writable","configurable","inherits","SystemObject","compareList","self","other","tail","head","List","Union","tag","_len","_key","recordToJson","record","getFieldNames","keys","recordEquals","thisNames","recordCompare","Record","_this","map","k","join","id","identityHash","from","cur","tmp","_this2","_this3","contents","Exception","msg","stack","message","getFSharpExceptionFieldNames","filter","FSharpException","_this4","fieldNames","_this5","arg1","arg2","arg3","CaseInfo","declaringType","Reflection_classCallCheck","TypeInfo","fullname","generics","cases","fullName","getGenerics","t1","t2","union","tuple","_len2","_key2","list","generic","obj","string","float64","info","lastIndexOf","substr","gen","endsWith","isGenericType","getGenericTypeDefinition","getUnionCases","getRecordElements","isTuple","startsWith","makeUnion","uci","values","expectedLength","_construct","_toConsumableArray","makeRecord","_ref","_slicedToArray","assign","Some","Option_classCallCheck","some","acceptNull","defaultArg","defaultValue","field","Result","mapOk","NumberStyles","getRange","unsigned","bitsize","isValid","style","exec","replace","_res","Int32_slicedToArray","prefix","digits","getInvalidDigits","AllowHexSpecifier","getRadix","test","regexMatch","_regexMatch","sign","validResponse","parse","v","Number","parseInt","isNaN","_getRange2","umin","umax","_getRange4","min","max","op_UnaryNegation_Int32","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","op_UnaryNegation","TWO_PWR_32_DBL","fromInteger","xh","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","indexOf","substring","radixToPower","size","op_Addition","op_Multiply","isNegative","maxValue","getMaxValue","padStart","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","radixLong","div","op_Division","rem1","op_Subtraction","rem","remDiv","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","op_LogicalNot","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","numBits","op_RightShiftUnsigned","op_LeftShift","op_RightShift","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","op_Modulus","rem_u","rem_s","op_BitwiseAnd","fromBytes","bytes","le","fromBytesLE","fromBytesBE","Enumerator","iter","Seq_classCallCheck","current","getEnumerator","toIterator","en","MoveNext","Current","xs","delay","output","unfold","innerIter","hasFinished","collect","_defineProperty","fold","acc","iterate","_","rangeNumber","first","step","last","fst","offsetRegex","DateTime","minValue","parseRaw","baseDate","timeInSeconds","timeParts","split","parseFloat","toUpperCase","getUTCFullYear","getUTCMonth","getUTCDate","offsetParts","offsetInMinutes","getFullYear","getMonth","getDate","detectUTC","pattern","options","flags","RegExp","escape","isMatch","reg","lastIndex","match","fsFormatRegExp","guidRegex","toHex","longToString","longFromBytes","hi","lo","toBytesLE","toBytesBE","printf","input","cont","createPrinter","strCopy","_i","_args","formatOnce","toConsole","console","toText","str2","rep","pad","precision","format","toFixed","toPrecision","toExponential","plusPrefix","ch","padLeft","abs","delimiter","_len4","_key4","validateGuid","doNotThrow","trimmedAndLowered","_len5","chars","_key5","trim","isRight","MapTree$00602","MapTreeModule$$$empty","MapTreeModule$$$height","_arg1","MapTreeModule$$$mk","l$$1","r$$1","matchValue","hl","hr","MapTreeModule$$$rebalance","k$$1","v$$1","t1h","t2h","t2v","t2r","t2l","t2k","t2lv","t2lr","t2ll","t2lk","t1v","t1r","t1l","t1k","t1rv","t1rr","t1rl","t1rk","MapTreeModule$$$add","comparer","k$$2","v$$2","m$$3","k2","Compare","v2","r$$2","l$$2","k2$$1","h$$1","c$$1","MapTreeModule$$$find","comparer$$1","k$$3","m$$4","v2$$1","k2$$2","v2$$2","r$$3","l$$3","k2$$3","c$$3","MapTreeModule$$$ofSeq","comparer$$16","c$$9","ie","comparer$$14","acc$$10","patternInput$$2","$acc$$10$$77","$comparer$$14$$76","$e$$78","MapTreeModule$$$mkFromEnumerator","MapTreeModule$002EMapIterator$00602","started","MapTreeModule$$$collapseLHS","$stack$$81","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$$$current","i$$2","matchValue$$4","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$$$mkIEnumerator","s$$7","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","i$$3","matchValue$$5","MapTreeModule$$$moveNext","Reset","FSharpMap","comparer$$17","tree","FSharpMap$$$$002Ector$$58ADD115","FSharpMap$$get_Tree","__$$5","find","k$$35","m$$25","k$$29","__$$8","ofList","l$$22","comparer$$18","comparer$$13","l$$20","fold$$1","acc$$9","tupledArg","ofSeq","l$$23","comparer$$19","Map_toConsumableArray","map$$1","kv","combineHash","x$$16","y$$3","res$$3","e$$1","activePatternResult3097","that","m2","res$$4","finished","e1","e2","matchValue$$7","kvp1","kvp2","c$$10","SetTree$00601","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","SetTreeModule$002ESetIterator$00601","SetTreeModule$$$collapseLHS","$stack$$49","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$$$current","matchValue$$6","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$$$mkIEnumerator","s$$15","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$compare","s1","s2","matchValue$$9","l1","l2","SetTreeModule$$$compareStacks","$target$$52","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","matchValue$$8","c$$7","c$$8","$l2$$59","$l2$$61","i$$1","SetTreeModule$$$moveNext","FSharpSet","comparer$$22","FSharpSet$$get_Comparer","__$$4","FSharpSet$$get_Tree","f$$1","source$$1","cons$$2","len$$1","target$$2","i$$4","x$$1","indexed","source$$2","len$$4","target$$3","i$$11","initialize","count$$8","initializer","cons$$15","result$$6","i$$15","foldBack2","f$$9","array1$$11","array2$$11","state$$17","folder$$12","array1$$10","array2$$10","state$$16","acc$$8","size$$1","i$$46","foldBackIndexed2","_arg1$$1","x$$21","y$$8","source$$9","cons$$32","foldIndexed","state","xs$$7","$arg$$7","$arg$$8","$arg$$9","$arg$$10","_arg1$$5","xs$$6","foldIndexedAux","$arg$$14","$arg$$15","$arg$$16","f$$2","state$$1","xs$$8","reverse","xs$$9","acc$$1","x$$6","xs$$12","acc$$3","x$$9","append","xs$$28","ys$$10","x$$15","f$$15","xs$$29","collect$$1","f$$16","xs$$31","acc$$11","mapIndexed","f$$17","xs$$33","acc$$12","x$$17","f$$24","xs$$46","unitVar0","x$$24","ofArray","xs$$50","col","res$$1","i$$9","tryPickIndexed","f$$29","xs$$52","$arg$$100","$arg$$101","$arg$$102","tryPickIndexedAux","f$$28","i$$10","_arg1$$9","xs$$51","findIndex","f$$40","xs$$67","f$$38","i$$12","x$$35","f$$42","xs$$71","acc$$17","x$$37","contains","xs$$76","rest","loop$$1","takeSplitAux","error","i$$21","acc$$25","xs$$117","matchValue$$12","xs$$118","splitAt","i$$30","xs$$125","$target$$186","i$$33","xs$$127","matchValue$$15","xs$$126","where","predicate$$2","xs$$138","Set_toConsumableArray","x$$22","y$$4","that$$1","classes","Props$002EHTMLAttr","List_fold","complete","initProps","react","ReactiveComponents$002EState$00601","init","props","model","ReactiveComponents$002EModel$00602","children","view","newState","update","setState","_arg2","page","Constants$$$fieldsCount","fieldWidth","fieldHeight","plateMargin","coordsMapping","List_ofArray","Camel","ev","preventDefault","target","dataTransfer","setData","dicesLeft","dispatch","top","left","width","height","background","position","display","flexDirection","onClick","Msg","className","View_toConsumableArray","List_map","dice","Props$002EDOMAttr","backgroundColor","camelColor","fieldContents","List_collect","plate","fieldIndex","patternInput","Map_find","text","dragStart","allowDrop","camels","drop","$target$$6","camel$$1","targetCamel$$1","tryParseCamelFromId","getData","camel","targetCamel","DropPlace","List_mapIndexed","camelIndex","toLocaleLowerCase","camelWidth","camelHeight","border","cursor","List_reverse","x$$18","i$$22","xs$$119","$target$$182","i$$25","xs$$120","matchValue$$13","List_take","Map","List_append","RegExp_match","draggedItemId","camelId","isMinusPlate","Plate","plateIndex","coord","strokeWidth","stroke","alignItems","justifyContent","List_ofSeq","boardCenterView","DicesLeft","title","chances","marginLeft","fontSize","View_root","classy","href","faClass","txt","navButtons","Navbar_View_root","P","cmp","DP","RM","MAX_DP","NE","PE","NAME","INVALID","INVALID_DP","INVALID_RM","UNDEFINED","NUMERIC","nl","search","round","Big","dp","rm","more","xc","unshift","pop","stringify","z","isneg","yc","a","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","add","one","sqrt","half","sd","valueOf","_Big_","normalize","version","Decimal","get_Zero","_tryParse2","Decimal_slicedToArray","_a","tryParse","ok","space","forceCamelCase","JSON","replacement","BigNat","bound","BigNatModule$002EFFT$$$pow32","BigNatModule$002EFFT$$$maxTwoPower","Int32Array","BigNatModule$$$bound","n$$10","BigNatModule$$$coeff","n$$12","i$$5","BigNatModule$$$coeff64","n$$13","i$$6","BigNatModule$$$setCoeff","n$$14","i$$7","v$$4","BigNatModule$$$pow64","x$$23","n$$15","$n$$15$$11","BigNatModule$$$pow32","n$$16","BigNatModule$$$maxInt","b$$2","BigNatModule$$$baseBits","BigNatModule$$$baseN","BigNatModule$$$baseMask","BigNatModule$$$baseNi64","BigNatModule$$$baseMaski64","BigNatModule$$$divbase","x$$25","BigNatModule$$$modbase","x$$26","BigNatModule$$$createN","b$$4","BigNatModule$$$normN","n$$18","bound$$1","na","findLeastBound","BigNatModule$$$boundInt","BigNatModule$$$boundInt64","BigNatModule$$$embed","x$$28","x$$29","BigNatModule$$$one","BigNatModule$$$zero","BigNatModule$$$degree","n$$24","BigNatModule$$$add","p$$1","q$$1","rbound","r$$6","i$$16","n$$25","r$$5","x$$32","BigNatModule$$$addP","BigNatModule$$$isZero","p$$4","BigNatModule$$$equal","p$$7","q$$4","pa","qa","check","BigNatModule$$$compare","p$$9","q$$6","pa$$2","qa$$2","i$$24","check$$2","BigNatModule$$$lt","p$$10","q$$7","BigNatModule$$$mulSchoolBookCarry","r$$12","k$$4","rak$$1","$k$$4$$43","BigNatModule$$$mulSchoolBookOneSmall","p$$16","q$$12","bp","r$$13","q$$13","i$$28","rak$$2","BigNatModule$$$mulSchoolBook","p$$18","q$$15","p$$15","q$$11","r$$11","rak","pSmall","qSmall","p$$17","q$$14","r$$14","ra","pa$$3","qa$$3","i$$29","pai$$1","k$$5","j$$1","qaj","rak$$3","BigNatModule$$$mulSchoolBookNeitherSmall","BigNatModule$002Eencoding","arg4","arg5","arg6","arg7","bigL","twoToBigL","bigK","bigN","splits","BigNatModule$$$mkEncoding","k$$6","bigK$$2","BigNatModule$$$table","i$$32","i$$34","BigNatModule$$$mul","p$$20","q$$17","BigNatModule$$$scaleSubInPlace","x$$57","a$$5","n$$30","xres","patternInput$$3","j$$4","z$$7","zLo","zHi","BigNatModule$$$scaleAddInPlace","x$$62","f$$3","a$$8","n$$32","xres$$1","patternInput$$4","patternInput$$5","f$$4","j$$5","z$$8","zLo$$1","zHi$$1","BigNatModule$$$removeFactor","x$$67","a$$11","n$$34","patternInput$$6","f$$6","p$$8","pn","q$$5","qn","patternInput$$7","pa$$1","qa$$1","i$$23","pai","qai","check$$1","BigNatModule$$$divmod","b$$7","a$$12","x$$68","x$$27","array$$29","d$$6","p$$21","m$$2","n$$35","f$$7","BigNatModule$$$ofInt32","n$$41","BigNatModule$$$ofInt64","n$$42","x$$30","x$$31","r$$4","BigNatModule$$$embed64","BigNatModule$$$toString","n$$45","degn","prior$$2","prior","k$$11","ten2k","$k$$11$$64","$ten2k$$65","route","digits$$4","isLeading","n$$46","_arg1$$3","ten2k$$1","prior$$1","patternInput$$13","digits$$2","n$$47","n$$19","BigNatModule$$$eval32","n_toConsumableArray","BigNatModule$$$ofString","isNullOrEmpty","ten","acc$$5","i$$50","d$$7","$i$$50$$67","build","BigNatModule$$$isSmall","n$$48","BigNatModule$$$getSmall","n$$49","BigInteger","signInt","BigInteger$$$$002Ector$$Z2BE94A1","BigInteger$$$nat$$Z67CCE57D","n$$1","BigNatModule$0024$0024$0024isSmall","BigNatModule$0024$0024$0024getSmall","smallLim","smallPosTab","BigInteger$$$posn$$Z67CCE57D","n$$3","BigInteger$$$negn$$Z67CCE57D","n$$4","BigInteger$$get_SignInt","BigInteger$$get_V","x$$2","BigInteger$$$op_Equality$$56F059C0","x$$3","BigNatModule$0024$0024$0024equal","BigNatModule$0024$0024$0024isZero","BigInteger$$$op_LessThan$$56F059C0","x$$5","y$$2","matchValue$$1","BigNatModule$0024$0024$0024lt","BigInteger$$$$002Ector$$Z524259A4","n$$6","BigNatModule$0024$0024$0024ofInt32","BigNatModule$0024$0024$0024ofInt64","BigInteger$$$$002Ector$$Z524259C1","n$$7","BigNatModule$0024$0024$0024add","BigNatModule$0024$0024$0024one","BigInteger$$$get_One","BigInteger$$$get_Two","two","BigInteger$$$get_Zero","zero","BigInteger$$$Parse$$Z721C83C5","text$$1","BigNatModule$0024$0024$0024ofString","BigNatModule$0024$0024$0024toString","n$$17","res$$2","i$$8","BigNatModule$0024$0024$0024hash","obj$$1","n$$5","nn","BigInteger$0024$0024$0024get_Zero","BigInteger$0024$0024$0024get_One","BigInteger$0024$0024$0024get_Two","DateTimeOffset","newLine","path","reason","genericMsg","fieldName","messages","Decode_toConsumableArray","decoder","DecoderException","success","clo1","arg10","Option_Result","Data0","decodeValueError","errorToString","SyntaxError","Long_tryParse","ErrorReason","BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1","BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4","BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5","_err","Date_tryParse","currentPath","fieldValue","requestedIndex","vArray","unwrap","source$$10","len$$20","target$$7","i$$51","Array_toList","Array_map","cb","decoderInfos","folder$$8","$target$$35","optional","array$$101","state$$12","reduceRight","delegateArg0$$4","delegateArg1$$4","decoders","Array_foldBack2","isCamelCase","predicate$$13","Reflection_name","Array_ofList","mixedArray","fi","autoDecoder","getUnionCaseFields","isOptional","autoObject","FieldType","isUnion","Reflection_isArray","array","getTupleElements","d1","$target$$53","error$$10","option","decoder1","decoder2","andThen","v1","( arg10@ )","( arg20@ )","succeed","index","er","autoDecodeRecordsAndUnions","Decimal_parse","ex","decimal","int64","uint32","Long_parse","uint64","bigint","datetime","offsetMatch","DateOffset_tryParse","datetimeOffset","guid","( arg00@ )","resolver","ResolveType","command","json","Auto$$$toString$$Z17AB748","Request","random","newGuid","Promise","resolve","reject","messageChannel","MessageChannel","port1","onmessage","generateDecoder","Auto$$$unsafeFromString$$Z4741753B","ResponseContent","worker","serializeCommand","postMessage","port2","navigator","serviceWorker","controller","$x$$1","visited","unvisited","State$00601","inner","mkState","subValue","parser","url","states","parseHelp","$target$$16","segments","splitUrl","segment","comparer$$12","array1$$6","array2$$6","i$$43","result$$13","length1","length2","compareWith","$target$$1","prelude_tuple","ofFunc","decodeURI","querystring","Seq_map","toKeyValuePair","CancellationToken","cancelled","AsyncBuilder_classCallCheck","_id","_cancelled","_listeners","AsyncBuilder_createClass","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","listener","AsyncBuilder_slicedToArray","delete","$","addListener","removeListener","OperationCanceledError","_Error","_getPrototypeOf","setPrototypeOf","_assertThisInitialized","_inherits","_wrapNativeSuper","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","onError","protectedBind","computation","binder","onSuccess","protectedReturn","singleton","AsyncBuilder","computation1","computation2","Bind","generator","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","emptyContinuation","defaultCancellationToken","fromContinuations","startImmediate","cancellationToken","startWithContinuations","start","continuation","exceptionContinuation","cancellationContinuation","cmd","List_iterate","g","$arg$$2","$arg$$1","cmds","lists","state$$3","xs$$14","acc$$4","x$$10","task","ofSuccess","ofError","then","QueueCell","MailboxProcessor_classCallCheck","MailboxQueue","itCell","firstAndLast","MailboxProcessor","__processEvents","tryGet","post","mbox","program","inbox","MailboxProcessor_start","mb","loop","AsyncBuilder_singleton","conts","arg00","Cmd$$$exec","ReturnFrom","subscribe","Cmd$$$none","lastLocation","onChangeRef","location","Navigable$00601","addEventListener","newEl","source","cons$$1","target$$1","delegateArg0","delegateArg1","Array_mapIndexed","allCamels","initialMap","Array_initialize","Types_Field","initialState","Model","array$$93","Array_head","chooser$$2","$target$$3","List_contains","array$$70","Array_indexed","cons$$30","value$$10","x$$4","stageCommand","Command","CalculateStageWinChancesCommand","raceCommand","CalculateRaceWinChancesCommand","Cmd$$$batch","Cmd$$$ofPromise","postMsg","droppedCamel","place","newMap","findCamelStack","oldStackUpdated","List_where","newField","setElement","StageWinChances","RaceWinChances","createCalculationCmd","targetCamelPosition","List_findIndex","updatedOldStack","updatedTargetStack","List_splitAt","insertElement","newDicesLeft","roll","rollNumber","Count","$target$$4","camelMapIndex","camelStack","camelStackIndex","fieldToLeave","newCamelMapIndex","mapWithRemovedCamels","newCamelStack","applyRoll","DiceRoll","handleCamelDropped","parsers","parser_map","Page","parser_s","parser_oneOf","newUrl","Types_Model","Home","toHash","CurrentPage","history","replaceState","urlUpdate","onLocationChange","equal","Components$002ELazyView$00601","LazyProps$00601","label","currentPage","classList","menuItem","pageHtml","menu","Types_Msg","boardView","chancesView","draggable","onDragStart","nextProps","_nextState","render","register","registration","runWith","placeholderId","lazyView2With","Common$$$lazyView2With","lastRequest","Program$00604","cancelAnimationFrame","requestAnimationFrame","react_dom","document","getElementById","Program$$$withReact","hash","parseParams","parseHash","pageParser","State_urlUpdate","Cmd$$$map","arg0","State_update","root","prelude_onError","userMsg"],"mappings":"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","file":"app.f6e6ad214c5cc321487f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/camel-up-probability/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([114,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// tslint:disable:ban-types\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nexport function extend(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Object.keys(source)) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        }\n    }\n    return target;\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (typeof comparer.Compare === \"function\") {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\n// TODO: Move these three methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (typeof x.GetHashCode === \"function\") {\n                return x.GetHashCode();\n            }\n            else if (isArray(x)) {\n                const ar = x;\n                const len = ar.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(ar[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nexport function isArray(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\n// export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (typeof x.Equals === \"function\") {\n        return x.Equals(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return false;\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nexport function compareObjects(x, y) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (typeof x.CompareTo === \"function\") {\n        return x.CompareTo(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && compareArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y);\n    }\n    else {\n        return 1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value) => {\n        if (value === void 0) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n};\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function createObj(fields, caseRule = CaseRules.None) {\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    const o = {};\n    const definedCaseRule = caseRule;\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (typeof kvPair.toJSON === \"function\") {\n            kvPair = kvPair.toJSON();\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    o[changeCase(kvPair[0], caseRule)] = true;\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    o[changeCase(kvPair[0], caseRule)] = value;\n                    break;\n                default:\n                    o[changeCase(kvPair[0], caseRule)] = kvPair.slice(1);\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            o[changeCase(kvPair, caseRule)] = true;\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return o;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    return isArray(col) ? col.length : col.size;\n}\nexport function clear(col) {\n    if (isArray(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return null;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        //   if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return null;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return null;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (var i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(null, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(null, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(null, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(null, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(null, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return function (arg) {\n                return mapArg(res, arg, mappings, idx + 1);\n            };\n        }\n    }\n    return function (arg) {\n        return mapArg(fn, arg, mappings, 0);\n    };\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","import { combineHashCodes, compare, compareArrays, equals, equalArrays, identityHash, structuralHash, numberHash } from \"./Util\";\nfunction sameType(x, y) {\n    return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\n// Taken from Babel helpers\nfunction inherits(subClass, superClass) {\n    // if (typeof superClass !== \"function\" && superClass !== null) {\n    //   throw new TypeError(\n    //     \"Super expression must either be null or a function, not \" +\n    //       typeof superClass\n    //   );\n    // }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n    // if (superClass)\n    //   Object.setPrototypeOf\n    //     ? Object.setPrototypeOf(subClass, superClass)\n    //     : (subClass.__proto__ = superClass);\n}\nexport function declare(cons, superClass) {\n    inherits(cons, superClass || SystemObject);\n    return cons;\n}\nexport function SystemObject() {\n}\nSystemObject.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map(k => k + \" = \" + String(this[k])).join(\";\\n \") + \"}\";\n};\nSystemObject.prototype.GetHashCode = function () {\n    return identityHash(this);\n};\nSystemObject.prototype.Equals = function (other) {\n    return this === other;\n};\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport function List(head, tail) {\n    this.head = head;\n    this.tail = tail;\n}\nList.prototype.toString = function () {\n    return \"[\" + Array.from(this).map(x => String(x)).join(\"; \") + \"]\";\n};\nList.prototype.toJSON = function () {\n    return Array.from(this);\n};\nList.prototype[Symbol.iterator] = function () {\n    let cur = this;\n    return {\n        next: () => {\n            const tmp = cur;\n            cur = cur.tail;\n            return { done: tmp.tail == null, value: tmp.head };\n        },\n    };\n};\nList.prototype.GetHashCode = function () {\n    const hashes = Array.from(this).map(structuralHash);\n    return combineHashCodes(hashes);\n};\nList.prototype.Equals = function (other) {\n    return compareList(this, other) === 0;\n};\nList.prototype.CompareTo = function (other) {\n    return compareList(this, other);\n};\nexport function Union(tag, name, ...fields) {\n    this.tag = tag | 0;\n    this.name = name;\n    this.fields = fields;\n}\nUnion.prototype.toString = function () {\n    const len = this.fields.length;\n    if (len === 0) {\n        return this.name;\n    }\n    else if (len === 1) {\n        return this.name + \" \" + String(this.fields[0]);\n    }\n    else {\n        return this.name + \" (\" + this.fields.map(x => String(x)).join(\",\") + \")\";\n    }\n};\nUnion.prototype.toJSON = function () {\n    return this.fields.length === 0\n        ? this.name\n        : [this.name].concat(this.fields);\n};\nUnion.prototype.GetHashCode = function () {\n    let hashes = this.fields.map(x => structuralHash(x));\n    hashes.splice(0, 0, numberHash(this.tag));\n    return combineHashCodes(hashes);\n};\nUnion.prototype.Equals = function (other) {\n    return this === other\n        || (sameType(this, other)\n            && this.tag === other.tag\n            && equalArrays(this.fields, other.fields));\n};\nUnion.prototype.CompareTo = function (other) {\n    if (this === other) {\n        return 0;\n    }\n    else if (!sameType(this, other)) {\n        return -1;\n    }\n    else if (this.tag === other.tag) {\n        return compareArrays(this.fields, other.fields);\n    }\n    else {\n        return this.tag < other.tag ? -1 : 1;\n    }\n};\nfunction recordToJson(record, getFieldNames) {\n    const o = {};\n    const keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = record[keys[i]];\n    }\n    return o;\n}\nfunction recordEquals(self, other, getFieldNames) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameType(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompare(self, other, getFieldNames) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameType(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport function Record() {\n}\nRecord.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map(k => k + \" = \" + String(this[k])).join(\";\\n \") + \"}\";\n};\nRecord.prototype.toJSON = function () {\n    return recordToJson(this);\n};\nRecord.prototype.GetHashCode = function () {\n    const hashes = Object.keys(this).map(k => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nRecord.prototype.Equals = function (other) {\n    return recordEquals(this, other);\n};\nRecord.prototype.CompareTo = function (other) {\n    return recordCompare(this, other);\n};\nexport function anonRecord(o) {\n    return Object.assign(Object.create(Record.prototype), o);\n}\nexport const FSharpRef = declare(function FSharpRef(contents) {\n    this.contents = contents;\n}, Record);\n// EXCEPTIONS\nexport const Exception = declare(function Exception(msg) {\n    this.stack = Error().stack;\n    this.message = msg;\n});\nexport function isException(x) {\n    return x instanceof Error || x instanceof Exception;\n}\nfunction getFSharpExceptionFieldNames(self) {\n    return Object.keys(self).filter(k => k !== \"message\" && k !== \"stack\");\n}\nexport const FSharpException = declare(function FSharpException() {\n    Exception.call(this);\n}, Exception);\nFSharpException.prototype.toString = function () {\n    const fieldNames = getFSharpExceptionFieldNames(this);\n    const len = fieldNames.length;\n    if (len === 0) {\n        return this.message;\n    }\n    else if (len === 1) {\n        return this.message + \" \" + String(this[fieldNames[0]]);\n    }\n    else {\n        return this.message + \" (\" + fieldNames.map(k => String(this[k])).join(\",\") + \")\";\n    }\n};\nFSharpException.prototype.toJSON = function () {\n    return recordToJson(this, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.GetHashCode = function () {\n    const hashes = getFSharpExceptionFieldNames(this).map(k => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nFSharpException.prototype.Equals = function (other) {\n    return recordEquals(this, other, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.CompareTo = function (other) {\n    return recordCompare(this, other, getFSharpExceptionFieldNames);\n};\nexport const MatchFailureException = declare(function MatchFailureException(arg1, arg2, arg3) {\n    this.arg1 = arg1;\n    this.arg2 = arg2 | 0;\n    this.arg3 = arg3 | 0;\n    this.message = \"The match cases were incomplete\";\n}, FSharpException);\nexport const Attribute = declare(function Attribute() { });\n","import { Record, Union, anonRecord as makeAnonRecord } from \"./Types\";\nimport { compareArraysWith, equalArraysWith } from \"./Util\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, constructor, fields, cases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.constructor = constructor;\n        this.fields = fields;\n        this.cases = cases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n    CompareTo(other) {\n        return compare(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function equals(t1, t2) {\n    return t1.fullname === t2.fullname\n        && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n}\n// System.Type is not comparable in .NET, but let's implement this\n// in case users want to create a dictionary with types as keys\nexport function compare(t1, t2) {\n    if (t1.fullname !== t2.fullname) {\n        return t1.fullname < t2.fullname ? -1 : 1;\n    }\n    else {\n        return compareArraysWith(getGenerics(t1), getGenerics(t2), compare);\n    }\n}\nexport function type(fullname, generics) {\n    return new TypeInfo(fullname, generics);\n}\nexport function record(fullname, generics, constructor, fields) {\n    return new TypeInfo(fullname, generics, constructor, fields);\n}\nexport function anonRecord(...fields) {\n    return new TypeInfo(\"\", null, null, () => fields);\n}\nexport function union(fullname, generics, constructor, cases) {\n    const t = new TypeInfo(fullname, generics, constructor, null, () => cases().map((x, i) => typeof x === \"string\" ? new CaseInfo(t, i, x) : new CaseInfo(t, i, x[0], x[1])));\n    return t;\n}\nexport function tuple(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport const obj = new TypeInfo(\"System.Object\");\nexport const unit = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char = new TypeInfo(\"System.Char\");\nexport const string = new TypeInfo(\"System.String\");\nexport const bool = new TypeInfo(\"System.Boolean\");\nexport const int8 = new TypeInfo(\"System.SByte\");\nexport const uint8 = new TypeInfo(\"System.Byte\");\nexport const int16 = new TypeInfo(\"System.Int16\");\nexport const uint16 = new TypeInfo(\"System.UInt16\");\nexport const int32 = new TypeInfo(\"System.Int32\");\nexport const uint32 = new TypeInfo(\"System.UInt32\");\nexport const float32 = new TypeInfo(\"System.Single\");\nexport const float64 = new TypeInfo(\"System.Double\");\nexport const decimal = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    return isArray(t) ? t.generics[0] : null;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj));\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t)) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t)) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields.map((t, i) => [\"Data\" + i, t]);\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return new uci.declaringType.constructor(uci.tag, uci.name, ...values);\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.constructor != null\n        ? new t.constructor(...values)\n        : makeAnonRecord(fields.reduce((obj, [key,], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {}));\n}\nexport function makeTuple(values, t) {\n    return values;\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.name;\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { declare, Union } from \"./Types\";\nimport { compare, equals, structuralHash } from \"./Util\";\n// Options are erased in runtime by Fable, but we have\n// the `Some` type below to wrap values that would evaluate\n// to null in runtime. These two rules must be followed:\n// 1- None is always null in runtime, a non-strict null check\n//    (`x == null`) is enough to check the case of an option.\n// 2- To get the value of an option the `getValue` helper\n//    below must **always** be used.\n// export type Option<T> = T | Some<T>;\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    toJSON() {\n        return this.value;\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        return other == null\n            ? false\n            : equals(this.value, other instanceof Some ? other.value : other);\n    }\n    CompareTo(other) {\n        return other == null\n            ? 1\n            : compare(this.value, other instanceof Some ? other.value : other);\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x, acceptNull) {\n    if (x == null) {\n        if (!acceptNull) {\n            throw new Error(\"Option has no value\");\n        }\n        return null;\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function defaultArg(arg, defaultValue, f) {\n    return arg == null ? defaultValue : (f != null ? f(value(arg)) : value(arg));\n}\nexport function defaultArgWith(arg, defThunk) {\n    return arg == null ? defThunk() : value(arg);\n}\nexport function filter(predicate, arg) {\n    return arg != null ? (!predicate(value(arg)) ? null : arg) : arg;\n}\nexport function map(predicate, ...args) {\n    return args.every(x => x != null) ? predicate.apply(null, args) : null;\n}\n// CHOICE\nexport const Choice = declare(function Choice(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function choice1(x) {\n    return new Choice(0, \"Choice1Of2\", x);\n}\nexport function choice2(x) {\n    return new Choice(1, \"Choice2Of2\", x);\n}\nexport function tryValueIfChoice1(x) {\n    return x.tag === 0 ? some(x.fields[0]) : null;\n}\nexport function tryValueIfChoice2(x) {\n    return x.tag === 1 ? some(x.fields[0]) : null;\n}\n// RESULT\nexport const Result = declare(function Result(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function ok(x) {\n    return new Result(0, \"Ok\", x);\n}\nexport function error(x) {\n    return new Result(1, \"Error\", x);\n}\nexport function mapOk(f, result) {\n    return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n    return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n    return result.tag === 0 ? f(result.fields[0]) : result;\n}\n","export var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [_all, sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(\"_\", \"\"));\n    if (res != null) {\n        const [_all, sign, prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, 0];\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/f572e3a17d313730cf11eb838f6d2a5e31626f8a/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { isValid } from \"./Int32\";\nimport { combineHashCodes } from \"./Util\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport default function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    return combineHashCodes([this.unsigned ? 1 : 0, this.high, this.low]);\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nexport const neg = op_UnaryNegation;\nexport const not = op_LogicalNot;\nexport const add = op_Addition;\nexport const sub = op_Subtraction;\nexport const mul = op_Multiply;\nexport const div = op_Division;\nexport const mod = op_Modulus;\nexport const shl = op_LeftShift;\nexport const shr = op_RightShift;\nexport const and = op_BitwiseAnd;\nexport const or = op_BitwiseOr;\nexport const xor = op_ExclusiveOr;\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nfunction isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return op_UnaryNegation(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * @param {number} value\n * @param {boolean} unsigned\n * @param {number} kind\n * @returns {!Long}\n * @inner\n */\nexport function fromInteger(value, unsigned, kind) {\n    var x;\n    var xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6: x = value >>> 0;\n    }\n    return fromBits(x, xh >> 31, unsigned);\n}\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return op_UnaryNegation(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = op_Addition(op_Multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = op_Multiply(result, radixToPower);\n            result = op_Addition(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= maxValue.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits, maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, ZERO];\n}\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = op_Division($this, radixLong), rem1 = op_Subtraction(op_Multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(op_UnaryNegation($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = op_Division(rem, radixToPower), intval = toInt(op_Subtraction(rem, op_Multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(op_UnaryNegation($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value is negative.\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value differs from the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value is less than the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Compares this Long's value with the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(op_Subtraction($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Absolute value of the given number.\n */\nexport function abs($this) {\n    if (!$this.unsigned && isNegative($this))\n        return op_UnaryNegation($this);\n    else\n        return $this;\n}\n/**\n * Negates this Long's value.\n * @returns {!Long} Negated Long\n */\nexport function op_UnaryNegation($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return op_Addition(op_LogicalNot($this), ONE);\n}\n;\n/**\n * Returns the sum of this and the specified Long.\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function op_Addition($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function op_Subtraction($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return op_Addition($this, op_UnaryNegation(subtrahend));\n}\n;\n/**\n * Returns the product of this and the specified Long.\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function op_Multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return op_Multiply(op_UnaryNegation($this), op_UnaryNegation(multiplier));\n        else\n            return op_UnaryNegation(op_Multiply(op_UnaryNegation($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return op_UnaryNegation(op_Multiply($this, op_UnaryNegation(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function op_Division($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = op_RightShift($this, 1);\n                approx = op_LeftShift(op_Division(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = op_Subtraction($this, op_Multiply(divisor, approx));\n                    res = op_Addition(approx, op_Division(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return op_Division(op_UnaryNegation($this), op_UnaryNegation(divisor));\n            return op_UnaryNegation(op_Division(op_UnaryNegation($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return op_UnaryNegation(op_Division($this, op_UnaryNegation(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, op_RightShiftUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = op_Multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = op_Multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = op_Addition(res, approxRes);\n        rem = op_Subtraction(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long modulo the specified.\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function op_Modulus($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return op_Subtraction($this, op_Multiply(op_Division($this, divisor), divisor));\n}\n;\n/**\n * Returns the bitwise NOT of this Long.\n * @returns {!Long}\n */\nexport function op_LogicalNot($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_BitwiseAnd($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_BitwiseOr($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_ExclusiveOr($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_LeftShift($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_RightShift($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_RightShiftUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Converts this Long to signed.\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const zero = unsigned ? UZERO : ZERO;\n    return (x) => greaterThan(step, zero) && lessThanOrEqual(x, last)\n        || lessThan(step, zero) && greaterThanOrEqual(x, last)\n        ? [x, op_Addition(x, step)] : null;\n}\n","import { makeRangeStepFunction } from \"./Long\";\nimport { some, value } from \"./Option\";\nimport { compare, equals } from \"./Util\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    MoveNext() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    get Current() {\n        return this.current;\n    }\n    Reset() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            return en.MoveNext()\n                ? { done: false, value: en.Current }\n                : { done: true, value: null };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nexport function ofArray(xs) {\n    return delay(() => unfold((i) => i < xs.length ? [xs[i], i + 1] : null, 0));\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map(y => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, null];\n        return unfold(() => {\n            let cur;\n            if (!firstDone) {\n                cur = iters[0].next();\n                if (!cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [null, ys[Symbol.iterator]()];\n                }\n            }\n            cur = iters[1].next();\n            return !cur.done ? [cur.value, iters] : null;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output = { value: null };\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = { value: cur.value };\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = null;\n                    }\n                }\n            }\n            return innerIter != null && output != null ? [output.value, innerIter] : null;\n        }, null);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    const nonZero = tryFind((i) => i !== 0, map2((x, y) => f(x, y), xs, ys));\n    return nonZero != null ? value(nonZero) : length(xs) - length(ys);\n}\nexport function delay(f) {\n    return {\n        [Symbol.iterator]: () => f()[Symbol.iterator](),\n    };\n}\nexport function empty() {\n    return unfold(() => void 0);\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : null));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            return void 0;\n        }\n        finally {\n            finalFn();\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : null;\n            }\n            catch (err) {\n                return void 0;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? null : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : null, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return null;\n    }\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return i < xs.length ? some(xs[i]) : null;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return null;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => f(x), null, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => f(x, y), null, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => f(i, x), null, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => f(i, x, y), null, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? null : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\n        ? xs.length\n        : fold((acc, x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : null;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : null;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\n        });\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return skip(2, scan((last, next) => [last[1], next], [0, 0], xs));\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return void 0;\n        }, null);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function singleton(y) {\n    return [y];\n}\nexport function skip(n, xs) {\n    return {\n        [Symbol.iterator]: () => {\n            const iter = xs[Symbol.iterator]();\n            for (let i = 1; i <= n; i++) {\n                if (iter.next().done) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return iter;\n        },\n    };\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    return {\n        [Symbol.iterator]: () => iter,\n    };\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, null];\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? null : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return null;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return {\n        [Symbol.iterator]: () => {\n            // Capture a copy of the first value in the closure\n            // so the sequence is restarted every time, see #1230\n            let acc = fst;\n            return {\n                next: () => {\n                    const res = f(acc);\n                    if (res != null) {\n                        acc = res[1];\n                        return { done: false, value: res[0] };\n                    }\n                    return { done: true };\n                },\n            };\n        },\n    };\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return {\n        [Symbol.iterator]: () => {\n            let window = [];\n            const iter = source[Symbol.iterator]();\n            return {\n                next: () => {\n                    let cur;\n                    while (window.length < windowSize) {\n                        if ((cur = iter.next()).done) {\n                            return { done: true };\n                        }\n                        window.push(cur.value);\n                    }\n                    const value = window;\n                    window = window.slice(1);\n                    return { done: false, value };\n                },\n            };\n        },\n    };\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = match;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (rep !== match && rep < 10 && match.length > 1) {\n            rep = \"0\" + rep;\n        }\n        return rep;\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    const d = new Date(date.getTime() + date.offset);\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(date.offset);\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, date.offset);\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport default function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + date.offset, kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(str) {\n    let date = new Date(str);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(str);\n        if (m != null) {\n            let baseDate = null;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds = parseInt(timeParts[0], 10) * 3600 +\n                    parseInt(timeParts[1] || \"0\", 10) * 60 +\n                    parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v) {\n    try {\n        // if value is null or whitespace, parsing fails\n        if (v === null || v.trim() === \"\") {\n            return [false, minValue()];\n        }\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    return DateTime(d.getTime() + ts, d.kind);\n}\nexport function addDays(d, v) {\n    return DateTime(d.getTime() + v * 86400000, d.kind);\n}\nexport function addHours(d, v) {\n    return DateTime(d.getTime() + v * 3600000, d.kind);\n}\nexport function addMinutes(d, v) {\n    return DateTime(d.getTime() + v * 60000, d.kind);\n}\nexport function addSeconds(d, v) {\n    return DateTime(d.getTime() + v * 1000, d.kind);\n}\nexport function addMilliseconds(d, v) {\n    return DateTime(d.getTime() + v, d.kind);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? DateTime(d.getTime() - that, d.kind)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\n","export function create(pattern, options) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit !== 0) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date\";\nimport Long, { fromBytes as longFromBytes, toBytes as longToBytes, toString as longToString } from \"./Long\";\nimport { escape } from \"./RegExp\";\nconst fsFormatRegExp = /(^|[^%])%([0+ ]*)(-?\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return longToString(x.unsigned ? x : longFromBytes(longToBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return arg.cont((x) => { console.log(x); });\n}\nexport function toConsoleError(arg) {\n    return arg.cont((x) => { console.error(x); });\n}\nexport function toText(arg) {\n    return arg.cont((x) => x);\n}\nexport function toFail(arg) {\n    return arg.cont((x) => { throw new Error(x); });\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, pad, precision, format) => {\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                rep = Number(rep).toFixed(precision || 6);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = Number(rep).toPrecision(precision);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = Number(rep).toExponential(precision);\n                break;\n            case \"O\":\n            case \"A\":\n                rep = String(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n        }\n        const plusPrefix = flags.indexOf(\"+\") >= 0 && parseInt(rep, 10) >= 0;\n        pad = parseInt(pad, 10);\n        if (!isNaN(pad)) {\n            const ch = pad >= 0 && flags.indexOf(\"0\") >= 0 ? \"0\" : \" \";\n            rep = padLeft(String(rep), Math.abs(pad) - (plusPrefix ? 1 : 0), ch, pad < 0);\n        }\n        const once = prefix + (plusPrefix ? \"+\" + rep : rep);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (match, idx, pad, format, precision, pattern) => {\n        let rep = args[idx];\n        let padSymbol = \" \";\n        const isNumericType = (typeof rep === \"number\") || (rep instanceof Long);\n        // TODO: || (rep instanceof Decimal) || (rep instanceof BigInt);\n        if (isNumericType) {\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    rep = precision ? rep.toFixed(precision) : rep.toFixed(2);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision ? rep.toPrecision(precision) : rep.toPrecision();\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision ? rep.toExponential(precision) : rep.toExponential();\n                    break;\n                case \"p\":\n                case \"P\":\n                    rep = (precision ? (rep * 100).toFixed(precision) : (rep * 100).toFixed(2)) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision ? padLeft(rep.toString(), precision, \"0\") : rep.toString();\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    const m = /^(0+)(\\.0+)?$/.exec(pattern);\n                    if (m != null) {\n                        let decs = 0;\n                        if (m[2] != null) {\n                            rep = rep.toFixed(decs = m[2].length - 1);\n                        }\n                        pad = \",\" + (m[1].length + (decs ? decs + 1 : 0)).toString();\n                        padSymbol = \"0\";\n                    }\n                    else if (pattern) {\n                        rep = pattern;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        pad = parseInt((pad || \"\").substring(1), 10);\n        if (!isNaN(pad)) {\n            rep = padLeft(String(rep), Math.abs(pad), padSymbol, pad < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function join(delimiter, ...xs) {\n    return xs.map((x) => String(x)).join(delimiter);\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return join(delimiter, ...xs.slice(startIndex, endIndexPlusOne));\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). Trims braces. */\nexport function validateGuid(str, doNotThrow) {\n    const trimmedAndLowered = trim(str, \"{\", \"}\").toLowerCase();\n    if (guidRegex.test(trimmedAndLowered)) {\n        return doNotThrow ? [true, trimmedAndLowered] : trimmedAndLowered;\n    }\n    else if (doNotThrow) {\n        return [false, \"00000000-0000-0000-0000-000000000000\"];\n    }\n    throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    return _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : null;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : null;\n    if (count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\n","import { Record, List, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union, int32 } from \"./Reflection.js\";\nimport { value as value$$3, some } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$1, unfold, getEnumerator, fold as fold$$1 } from \"./Seq.js\";\nimport { compare, structuralHash, isDisposable } from \"./Util.js\";\nimport { join, toText, printf } from \"./String.js\";\nexport const MapTree$00602 = declare(function Map_MapTree(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function MapTree$00602$reflection($gen$$3, $gen$$4) {\n  return union(\"Map.MapTree`2\", [$gen$$3, $gen$$4], MapTree$00602, () => [\"MapEmpty\", [\"MapOne\", [$gen$$3, $gen$$4]], [\"MapNode\", [$gen$$3, $gen$$4, MapTree$00602$reflection($gen$$3, $gen$$4), MapTree$00602$reflection($gen$$3, $gen$$4), int32]]]);\n}\nexport function MapTreeModule$$$sizeAux(acc, m) {\n  MapTreeModule$$$sizeAux: while (true) {\n    switch (m.tag) {\n      case 1:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 2:\n        {\n          const r = m.fields[3];\n          const l = m.fields[2];\n          const $acc$$5 = acc;\n          acc = MapTreeModule$$$sizeAux($acc$$5 + 1, l);\n          m = r;\n          continue MapTreeModule$$$sizeAux;\n        }\n\n      default:\n        {\n          return acc | 0;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  switch (_arg1.tag) {\n    case 1:\n      {\n        return 1;\n      }\n\n    case 2:\n      {\n        const h = _arg1.fields[4] | 0;\n        return h | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  const matchValue = [l$$1, r$$1];\n  var $target$$6;\n\n  if (matchValue[0].tag === 0) {\n    if (matchValue[1].tag === 0) {\n      $target$$6 = 0;\n    } else {\n      $target$$6 = 1;\n    }\n  } else {\n    $target$$6 = 1;\n  }\n\n  switch ($target$$6) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n      }\n\n    case 1:\n      {\n        const hl = MapTreeModule$$$height(l$$1) | 0;\n        const hr = MapTreeModule$$$height(r$$1) | 0;\n        const m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  const t1h = MapTreeModule$$$height(t1) | 0;\n  const t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      const t2v = t2.fields[1];\n      const t2r = t2.fields[3];\n      const t2l = t2.fields[2];\n      const t2k = t2.fields[0];\n\n      if (MapTreeModule$$$height(t2l) > t1h + 1) {\n        if (t2l.tag === 2) {\n          const t2lv = t2l.fields[1];\n          const t2lr = t2l.fields[3];\n          const t2ll = t2l.fields[2];\n          const t2lk = t2l.fields[0];\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2ll), t2lk, t2lv, MapTreeModule$$$mk(t2lr, t2k, t2v, t2r));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2l), t2k, t2v, t2r);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      const t1v = t1.fields[1];\n      const t1r = t1.fields[3];\n      const t1l = t1.fields[2];\n      const t1k = t1.fields[0];\n\n      if (MapTreeModule$$$height(t1r) > t2h + 1) {\n        if (t1r.tag === 2) {\n          const t1rv = t1r.fields[1];\n          const t1rr = t1r.fields[3];\n          const t1rl = t1r.fields[2];\n          const t1rk = t1r.fields[0];\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1l, t1k, t1v, t1rl), t1rk, t1rv, MapTreeModule$$$mk(t1rr, k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1l, t1k, t1v, MapTreeModule$$$mk(t1r, k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  switch (m$$3.tag) {\n    case 1:\n      {\n        const k2 = m$$3.fields[0];\n        const c = comparer.Compare(k$$2, k2) | 0;\n\n        if (c < 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n        } else if (c === 0) {\n          return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n        } else {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n        }\n      }\n\n    case 2:\n      {\n        const v2 = m$$3.fields[1];\n        const r$$2 = m$$3.fields[3];\n        const l$$2 = m$$3.fields[2];\n        const k2$$1 = m$$3.fields[0];\n        const h$$1 = m$$3.fields[4] | 0;\n        const c$$1 = comparer.Compare(k$$2, k2$$1) | 0;\n\n        if (c$$1 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, l$$2), k2$$1, v2, r$$2);\n        } else if (c$$1 === 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, l$$2, r$$2, h$$1);\n        } else {\n          return MapTreeModule$$$rebalance(l$$2, k2$$1, v2, MapTreeModule$$$add(comparer, k$$2, v$$2, r$$2));\n        }\n      }\n\n    default:\n      {\n        return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n      }\n  }\n}\nexport function MapTreeModule$$$find(comparer$$1, k$$3, m$$4) {\n  MapTreeModule$$$find: while (true) {\n    switch (m$$4.tag) {\n      case 1:\n        {\n          const v2$$1 = m$$4.fields[1];\n          const k2$$2 = m$$4.fields[0];\n          const c$$2 = comparer$$1.Compare(k$$3, k2$$2) | 0;\n\n          if (c$$2 === 0) {\n            return v2$$1;\n          } else {\n            throw new Error(\"key not found\");\n          }\n        }\n\n      case 2:\n        {\n          const v2$$2 = m$$4.fields[1];\n          const r$$3 = m$$4.fields[3];\n          const l$$3 = m$$4.fields[2];\n          const k2$$3 = m$$4.fields[0];\n          const c$$3 = comparer$$1.Compare(k$$3, k2$$3) | 0;\n\n          if (c$$3 < 0) {\n            const $comparer$$1$$7 = comparer$$1;\n            const $k$$3$$8 = k$$3;\n            comparer$$1 = $comparer$$1$$7;\n            k$$3 = $k$$3$$8;\n            m$$4 = l$$3;\n            continue MapTreeModule$$$find;\n          } else if (c$$3 === 0) {\n            return v2$$2;\n          } else {\n            const $comparer$$1$$9 = comparer$$1;\n            const $k$$3$$10 = k$$3;\n            comparer$$1 = $comparer$$1$$9;\n            k$$3 = $k$$3$$10;\n            m$$4 = r$$3;\n            continue MapTreeModule$$$find;\n          }\n        }\n\n      default:\n        {\n          throw new Error(\"key not found\");\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryFind(comparer$$2, k$$4, m$$5) {\n  MapTreeModule$$$tryFind: while (true) {\n    switch (m$$5.tag) {\n      case 1:\n        {\n          const v2$$3 = m$$5.fields[1];\n          const k2$$4 = m$$5.fields[0];\n          const c$$4 = comparer$$2.Compare(k$$4, k2$$4) | 0;\n\n          if (c$$4 === 0) {\n            return some(v2$$3);\n          } else {\n            return null;\n          }\n        }\n\n      case 2:\n        {\n          const v2$$4 = m$$5.fields[1];\n          const r$$4 = m$$5.fields[3];\n          const l$$4 = m$$5.fields[2];\n          const k2$$5 = m$$5.fields[0];\n          const c$$5 = comparer$$2.Compare(k$$4, k2$$5) | 0;\n\n          if (c$$5 < 0) {\n            const $comparer$$2$$11 = comparer$$2;\n            const $k$$4$$12 = k$$4;\n            comparer$$2 = $comparer$$2$$11;\n            k$$4 = $k$$4$$12;\n            m$$5 = l$$4;\n            continue MapTreeModule$$$tryFind;\n          } else if (c$$5 === 0) {\n            return some(v2$$4);\n          } else {\n            const $comparer$$2$$13 = comparer$$2;\n            const $k$$4$$14 = k$$4;\n            comparer$$2 = $comparer$$2$$13;\n            k$$4 = $k$$4$$14;\n            m$$5 = r$$4;\n            continue MapTreeModule$$$tryFind;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($arg$$21, $arg$$22, $arg$$23, $arg$$24, $arg$$25) {\n  MapTreeModule$$$partitionAux: while (true) {\n    const comparer$$4 = $arg$$21,\n          f$$1 = $arg$$22,\n          s = $arg$$23,\n          acc_0 = $arg$$24,\n          acc_1 = $arg$$25;\n    const acc$$1 = [acc_0, acc_1];\n\n    switch (s.tag) {\n      case 1:\n        {\n          const v$$4 = s.fields[1];\n          const k$$6 = s.fields[0];\n          return MapTreeModule$$$partition1(comparer$$4, f$$1, k$$6, v$$4, acc$$1[0], acc$$1[1]);\n        }\n\n      case 2:\n        {\n          const v$$5 = s.fields[1];\n          const r$$5 = s.fields[3];\n          const l$$5 = s.fields[2];\n          const k$$7 = s.fields[0];\n          const acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, r$$5, acc$$1[0], acc$$1[1]);\n          const acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, k$$7, v$$5, acc$$2[0], acc$$2[1]);\n          $arg$$21 = comparer$$4;\n          $arg$$22 = f$$1;\n          $arg$$23 = l$$5;\n          $arg$$24 = acc$$3[0];\n          $arg$$25 = acc$$3[1];\n          continue MapTreeModule$$$partitionAux;\n        }\n\n      default:\n        {\n          return acc$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($arg$$34, $arg$$35, $arg$$36, $arg$$37) {\n  MapTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $arg$$34,\n          f$$4 = $arg$$35,\n          s$$2 = $arg$$36,\n          acc$$5 = $arg$$37;\n\n    switch (s$$2.tag) {\n      case 1:\n        {\n          const v$$7 = s$$2.fields[1];\n          const k$$9 = s$$2.fields[0];\n          return MapTreeModule$$$filter1(comparer$$7, f$$4, k$$9, v$$7, acc$$5);\n        }\n\n      case 2:\n        {\n          const v$$8 = s$$2.fields[1];\n          const r$$6 = s$$2.fields[3];\n          const l$$6 = s$$2.fields[2];\n          const k$$10 = s$$2.fields[0];\n          const acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, l$$6, acc$$5);\n          const acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, k$$10, v$$8, acc$$6);\n          $arg$$34 = comparer$$7;\n          $arg$$35 = f$$4;\n          $arg$$36 = r$$6;\n          $arg$$37 = acc$$7;\n          continue MapTreeModule$$$filterAux;\n        }\n\n      default:\n        {\n          return acc$$5;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  switch (m$$6.tag) {\n    case 1:\n      {\n        const v2$$5 = m$$6.fields[1];\n        const k2$$6 = m$$6.fields[0];\n        return [k2$$6, v2$$5, new MapTree$00602(0, \"MapEmpty\")];\n      }\n\n    case 2:\n      {\n        const v2$$6 = m$$6.fields[1];\n        const r$$7 = m$$6.fields[3];\n        const l$$7 = m$$6.fields[2];\n        const k2$$7 = m$$6.fields[0];\n\n        if (l$$7.tag === 0) {\n          return [k2$$7, v2$$6, r$$7];\n        } else {\n          const patternInput = MapTreeModule$$$spliceOutSuccessor(l$$7);\n          return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], k2$$7, v2$$6, r$$7)];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  switch (m$$7.tag) {\n    case 1:\n      {\n        const k2$$8 = m$$7.fields[0];\n        const c$$6 = comparer$$9.Compare(k$$11, k2$$8) | 0;\n\n        if (c$$6 === 0) {\n          return new MapTree$00602(0, \"MapEmpty\");\n        } else {\n          return m$$7;\n        }\n      }\n\n    case 2:\n      {\n        const v2$$7 = m$$7.fields[1];\n        const r$$8 = m$$7.fields[3];\n        const l$$8 = m$$7.fields[2];\n        const k2$$9 = m$$7.fields[0];\n        const c$$7 = comparer$$9.Compare(k$$11, k2$$9) | 0;\n\n        if (c$$7 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, l$$8), k2$$9, v2$$7, r$$8);\n        } else if (c$$7 === 0) {\n          const matchValue$$1 = [l$$8, r$$8];\n\n          if (matchValue$$1[0].tag === 0) {\n            return r$$8;\n          } else if (matchValue$$1[1].tag === 0) {\n            return l$$8;\n          } else {\n            const patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(r$$8);\n            return MapTreeModule$$$mk(l$$8, patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n          }\n        } else {\n          return MapTreeModule$$$rebalance(l$$8, k2$$9, v2$$7, MapTreeModule$$$remove(comparer$$9, k$$11, r$$8));\n        }\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mem(comparer$$10, k$$12, m$$8) {\n  MapTreeModule$$$mem: while (true) {\n    switch (m$$8.tag) {\n      case 1:\n        {\n          const k2$$10 = m$$8.fields[0];\n          return comparer$$10.Compare(k$$12, k2$$10) === 0;\n        }\n\n      case 2:\n        {\n          const r$$9 = m$$8.fields[3];\n          const l$$9 = m$$8.fields[2];\n          const k2$$11 = m$$8.fields[0];\n          const c$$8 = comparer$$10.Compare(k$$12, k2$$11) | 0;\n\n          if (c$$8 < 0) {\n            const $comparer$$10$$41 = comparer$$10;\n            const $k$$12$$42 = k$$12;\n            comparer$$10 = $comparer$$10$$41;\n            k$$12 = $k$$12$$42;\n            m$$8 = l$$9;\n            continue MapTreeModule$$$mem;\n          } else if (c$$8 === 0) {\n            return true;\n          } else {\n            const $comparer$$10$$43 = comparer$$10;\n            const $k$$12$$44 = k$$12;\n            comparer$$10 = $comparer$$10$$43;\n            k$$12 = $k$$12$$44;\n            m$$8 = r$$9;\n            continue MapTreeModule$$$mem;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$iter($arg$$45, $arg$$46) {\n  MapTreeModule$$$iter: while (true) {\n    const f$$6 = $arg$$45,\n          m$$9 = $arg$$46;\n\n    switch (m$$9.tag) {\n      case 1:\n        {\n          const v2$$8 = m$$9.fields[1];\n          const k2$$12 = m$$9.fields[0];\n          f$$6(k2$$12, v2$$8);\n          break;\n        }\n\n      case 2:\n        {\n          const v2$$9 = m$$9.fields[1];\n          const r$$10 = m$$9.fields[3];\n          const l$$10 = m$$9.fields[2];\n          const k2$$13 = m$$9.fields[0];\n          MapTreeModule$$$iter(f$$6, l$$10);\n          f$$6(k2$$13, v2$$9);\n          $arg$$45 = f$$6;\n          $arg$$46 = r$$10;\n          continue MapTreeModule$$$iter;\n          break;\n        }\n\n      default:\n        {}\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryPick($arg$$47, $arg$$48) {\n  MapTreeModule$$$tryPick: while (true) {\n    const f$$7 = $arg$$47,\n          m$$10 = $arg$$48;\n\n    switch (m$$10.tag) {\n      case 1:\n        {\n          const v2$$10 = m$$10.fields[1];\n          const k2$$14 = m$$10.fields[0];\n          return f$$7(k2$$14, v2$$10);\n        }\n\n      case 2:\n        {\n          const v2$$11 = m$$10.fields[1];\n          const r$$11 = m$$10.fields[3];\n          const l$$11 = m$$10.fields[2];\n          const k2$$15 = m$$10.fields[0];\n          const matchValue$$2 = MapTreeModule$$$tryPick(f$$7, l$$11);\n\n          if (matchValue$$2 == null) {\n            const matchValue$$3 = f$$7(k2$$15, v2$$11);\n\n            if (matchValue$$3 == null) {\n              $arg$$47 = f$$7;\n              $arg$$48 = r$$11;\n              continue MapTreeModule$$$tryPick;\n            } else {\n              const res$$1 = matchValue$$3;\n              return res$$1;\n            }\n          } else {\n            const res = matchValue$$2;\n            return res;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$exists($arg$$49, $arg$$50) {\n  MapTreeModule$$$exists: while (true) {\n    const f$$8 = $arg$$49,\n          m$$11 = $arg$$50;\n\n    switch (m$$11.tag) {\n      case 1:\n        {\n          const v2$$12 = m$$11.fields[1];\n          const k2$$16 = m$$11.fields[0];\n          return f$$8(k2$$16, v2$$12);\n        }\n\n      case 2:\n        {\n          const v2$$13 = m$$11.fields[1];\n          const r$$12 = m$$11.fields[3];\n          const l$$12 = m$$11.fields[2];\n          const k2$$17 = m$$11.fields[0];\n\n          if (MapTreeModule$$$exists(f$$8, l$$12) ? true : f$$8(k2$$17, v2$$13)) {\n            return true;\n          } else {\n            $arg$$49 = f$$8;\n            $arg$$50 = r$$12;\n            continue MapTreeModule$$$exists;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$forall($arg$$51, $arg$$52) {\n  MapTreeModule$$$forall: while (true) {\n    const f$$9 = $arg$$51,\n          m$$12 = $arg$$52;\n\n    switch (m$$12.tag) {\n      case 1:\n        {\n          const v2$$14 = m$$12.fields[1];\n          const k2$$18 = m$$12.fields[0];\n          return f$$9(k2$$18, v2$$14);\n        }\n\n      case 2:\n        {\n          const v2$$15 = m$$12.fields[1];\n          const r$$13 = m$$12.fields[3];\n          const l$$13 = m$$12.fields[2];\n          const k2$$19 = m$$12.fields[0];\n\n          if (MapTreeModule$$$forall(f$$9, l$$13) ? f$$9(k2$$19, v2$$15) : false) {\n            $arg$$51 = f$$9;\n            $arg$$52 = r$$13;\n            continue MapTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n\n      default:\n        {\n          return true;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  switch (m$$13.tag) {\n    case 1:\n      {\n        const v$$9 = m$$13.fields[1];\n        const k$$13 = m$$13.fields[0];\n        return new MapTree$00602(1, \"MapOne\", k$$13, f$$10(v$$9));\n      }\n\n    case 2:\n      {\n        const v$$10 = m$$13.fields[1];\n        const r$$14 = m$$13.fields[3];\n        const l$$14 = m$$13.fields[2];\n        const k$$14 = m$$13.fields[0];\n        const h$$2 = m$$13.fields[4] | 0;\n        const l2 = MapTreeModule$$$map(f$$10, l$$14);\n        const v2$$16 = f$$10(v$$10);\n        const r2 = MapTreeModule$$$map(f$$10, r$$14);\n        return new MapTree$00602(2, \"MapNode\", k$$14, v2$$16, l2, r2, h$$2);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  switch (m$$14.tag) {\n    case 1:\n      {\n        const v$$11 = m$$14.fields[1];\n        const k$$15 = m$$14.fields[0];\n        return new MapTree$00602(1, \"MapOne\", k$$15, f$$11(k$$15, v$$11));\n      }\n\n    case 2:\n      {\n        const v$$12 = m$$14.fields[1];\n        const r$$15 = m$$14.fields[3];\n        const l$$15 = m$$14.fields[2];\n        const k$$16 = m$$14.fields[0];\n        const h$$3 = m$$14.fields[4] | 0;\n        const l2$$1 = MapTreeModule$$$mapi(f$$11, l$$15);\n        const v2$$17 = f$$11(k$$16, v$$12);\n        const r2$$1 = MapTreeModule$$$mapi(f$$11, r$$15);\n        return new MapTree$00602(2, \"MapNode\", k$$16, v2$$17, l2$$1, r2$$1, h$$3);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$foldBack($arg$$57, $arg$$58, $arg$$59) {\n  MapTreeModule$$$foldBack: while (true) {\n    const f$$12 = $arg$$57,\n          m$$15 = $arg$$58,\n          x$$1 = $arg$$59;\n\n    switch (m$$15.tag) {\n      case 1:\n        {\n          const v$$13 = m$$15.fields[1];\n          const k$$17 = m$$15.fields[0];\n          return f$$12(k$$17, v$$13, x$$1);\n        }\n\n      case 2:\n        {\n          const v$$14 = m$$15.fields[1];\n          const r$$16 = m$$15.fields[3];\n          const l$$16 = m$$15.fields[2];\n          const k$$18 = m$$15.fields[0];\n          const x$$2 = MapTreeModule$$$foldBack(f$$12, r$$16, x$$1);\n          const x$$3 = f$$12(k$$18, v$$14, x$$2);\n          $arg$$57 = f$$12;\n          $arg$$58 = l$$16;\n          $arg$$59 = x$$3;\n          continue MapTreeModule$$$foldBack;\n        }\n\n      default:\n        {\n          return x$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$fold($arg$$60, $arg$$61, $arg$$62) {\n  MapTreeModule$$$fold: while (true) {\n    const f$$13 = $arg$$60,\n          x$$4 = $arg$$61,\n          m$$16 = $arg$$62;\n\n    switch (m$$16.tag) {\n      case 1:\n        {\n          const v$$15 = m$$16.fields[1];\n          const k$$19 = m$$16.fields[0];\n          return f$$13(x$$4, k$$19, v$$15);\n        }\n\n      case 2:\n        {\n          const v$$16 = m$$16.fields[1];\n          const r$$17 = m$$16.fields[3];\n          const l$$17 = m$$16.fields[2];\n          const k$$20 = m$$16.fields[0];\n          const x$$5 = MapTreeModule$$$fold(f$$13, x$$4, l$$17);\n          const x$$6 = f$$13(x$$5, k$$20, v$$16);\n          $arg$$60 = f$$13;\n          $arg$$61 = x$$6;\n          $arg$$62 = r$$17;\n          continue MapTreeModule$$$fold;\n        }\n\n      default:\n        {\n          return x$$4;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  switch (m$$17.tag) {\n    case 1:\n      {\n        const v$$17 = m$$17.fields[1];\n        const k$$21 = m$$17.fields[0];\n        const cLoKey = comparer$$11.Compare(lo, k$$21) | 0;\n        const cKeyHi = comparer$$11.Compare(k$$21, hi) | 0;\n        const x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(k$$21, v$$17, x$$7) : x$$7;\n        return x$$8;\n      }\n\n    case 2:\n      {\n        const v$$18 = m$$17.fields[1];\n        const r$$18 = m$$17.fields[3];\n        const l$$18 = m$$17.fields[2];\n        const k$$22 = m$$17.fields[0];\n        const cLoKey$$1 = comparer$$11.Compare(lo, k$$22) | 0;\n        const cKeyHi$$1 = comparer$$11.Compare(k$$22, hi) | 0;\n        const x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, l$$18, x$$7) : x$$7;\n        const x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(k$$22, v$$18, x$$9) : x$$9;\n        const x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, r$$18, x$$10) : x$$10;\n        return x$$11;\n      }\n\n    default:\n      {\n        return x$$7;\n      }\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop(m$$19, acc$$8) {\n  MapTreeModule$$$loop: while (true) {\n    switch (m$$19.tag) {\n      case 1:\n        {\n          const v$$19 = m$$19.fields[1];\n          const k$$23 = m$$19.fields[0];\n          return new List([k$$23, v$$19], acc$$8);\n        }\n\n      case 2:\n        {\n          const v$$20 = m$$19.fields[1];\n          const r$$19 = m$$19.fields[3];\n          const l$$19 = m$$19.fields[2];\n          const k$$24 = m$$19.fields[0];\n          const $acc$$8$$75 = acc$$8;\n          m$$19 = l$$19;\n          acc$$8 = new List([k$$24, v$$20], MapTreeModule$$$loop(r$$19, $acc$$8$$75));\n          continue MapTreeModule$$$loop;\n        }\n\n      default:\n        {\n          return acc$$8;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, new List());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator(comparer$$14, acc$$10, e) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    if (e.MoveNext()) {\n      const patternInput$$2 = e.Current;\n      const $acc$$10$$77 = acc$$10;\n      const $comparer$$14$$76 = comparer$$14;\n      const $e$$78 = e;\n      comparer$$14 = $comparer$$14$$76;\n      acc$$10 = MapTreeModule$$$add($comparer$$14$$76, patternInput$$2[0], patternInput$$2[1], $acc$$10$$77);\n      e = $e$$78;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  let res$$2 = MapTreeModule$$$empty();\n\n  for (let i = 0; i <= arr.length - 1; i++) {\n    const patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  const ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  let j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport const MapTreeModule$002EMapIterator$00602 = declare(function Map_MapTreeModule_MapIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function MapTreeModule$002EMapIterator$00602$reflection($gen$$79, $gen$$80) {\n  return record(\"Map.MapTreeModule.MapIterator`2\", [$gen$$79, $gen$$80], MapTreeModule$002EMapIterator$00602, () => [[\"stack\", list(MapTree$00602$reflection($gen$$79, $gen$$80))], [\"started\", bool]]);\n}\nexport function MapTreeModule$$$collapseLHS(stack) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        const $stack$$81 = stack;\n        stack = new List($stack$$81.head.fields[2], new List(new MapTree$00602(1, \"MapOne\", $stack$$81.head.fields[0], $stack$$81.head.fields[1]), new List($stack$$81.head.fields[3], $stack$$81.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        const $stack$$82 = stack;\n        stack = $stack$$82.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(new List(s$$5, new List())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    const matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    const matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport const MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function Map_MapTreeModule_mkIEnumerator_(s$$6) {\n  const $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$reflection($gen$$83, $gen$$84) {\n  return type(\"Map.MapTreeModule.mkIEnumerator'`2\", [$gen$$83, $gen$$84]);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this instanceof MapTreeModule$002EmkIEnumerator$0027$00602 ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nObject.defineProperty(MapTreeModule$002EmkIEnumerator$0027$00602.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return MapTreeModule$$$current(__.i);\n  }\n});\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return MapTreeModule$$$moveNext(__$$1.i);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = MapTreeModule$$$mkIterator(__$$2.s);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Dispose = function () {};\n\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7);\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  const en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport const FSharpMap = declare(function Map_Map(comparer$$17, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n});\nexport function FSharpMap$reflection($gen$$85, $gen$$86) {\n  return type(\"Map.FSharpMap\", [$gen$$85, $gen$$86]);\n}\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this instanceof FSharpMap ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$6, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$6.comparer, MapTreeModule$$$add(__$$6.comparer, k$$28, v$$24, __$$6.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$7) {\n  return MapTreeModule$$$isEmpty(__$$7.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$8, k$$29) {\n  return MapTreeModule$$$find(__$$8.comparer, k$$29, __$$8.tree);\n}\nexport function FSharpMap$$TryGetValue$$5BDDA1(__$$9, k$$30, defValue) {\n  const matchValue$$6 = MapTreeModule$$$tryFind(__$$9.comparer, k$$30, __$$9.tree);\n\n  if (matchValue$$6 == null) {\n    return [false, defValue];\n  } else {\n    const v$$25 = value$$3(matchValue$$6);\n    return [true, v$$25];\n  }\n}\nexport function FSharpMap$$TryPick$$72321DD7(__$$10, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$10.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$11, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$11.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$12, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$12.comparer, MapTreeModule$$$filter(__$$12.comparer, f$$19, __$$12.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$13, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$13.tree);\n}\nexport function FSharpMap$$Fold(__$$14, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$14.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$15, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$15.comparer, lo$$2, hi$$2, f$$22, __$$15.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$16, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$16.tree);\n}\nexport function FSharpMap$$MapRange$$6DC7247(__$$17, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$17.comparer, MapTreeModule$$$map(f$$24, __$$17.tree));\n}\nexport function FSharpMap$$Map$$Z6F6B671C(__$$18, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, MapTreeModule$$$mapi(f$$25, __$$18.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$19, f$$26) {\n  const patternInput$$4 = MapTreeModule$$$partition(__$$19.comparer, f$$26, __$$19.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$20) {\n  return MapTreeModule$$$size(__$$20.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$21, k$$31) {\n  return MapTreeModule$$$mem(__$$21.comparer, k$$31, __$$21.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$22, k$$32) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$22.comparer, MapTreeModule$$$remove(__$$22.comparer, k$$32, __$$22.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$23, k$$33) {\n  return MapTreeModule$$$tryFind(__$$23.comparer, k$$33, __$$23.tree);\n}\nexport function FSharpMap$$ToList(__$$24) {\n  return MapTreeModule$$$toList(__$$24.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  const this$ = this;\n  return \"map [\" + join(\"; \", ...map$$1(function mapping(kv) {\n    return toText(printf(\"(%A, %A)\"))(kv[0])(kv[1]);\n  }, this$)) + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  let res$$3 = 0;\n  const e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const patternInput$$5 = e$$1.Current;\n    const activePatternResult3097 = patternInput$$5;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3097[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3097[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  const __$$25 = this;\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$25.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  const m$$22 = this;\n  const m2 = obj;\n  let res$$4 = 0;\n  let finished = false;\n  const e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    const e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m2));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        const matchValue$$7 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$7[0]) {\n          if (matchValue$$7[1]) {\n            const kvp1 = e1.Current;\n            const kvp2 = e2.Current;\n            const c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$7[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      if (isDisposable(e2)) {\n        e2.Dispose();\n      }\n    }\n  } finally {\n    if (isDisposable(e1)) {\n      e1.Dispose();\n    }\n  }\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$34, v$$26, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$34, v$$26);\n}\nexport function find(k$$35, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$35);\n}\nexport function tryFind(k$$36, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$36);\n}\nexport function remove(k$$37, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$37);\n}\nexport function containsKey(k$$38, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$38);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$72321DD7(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  const matchValue$$8 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$8 != null) {\n    const res$$5 = value$$3(matchValue$$8);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$6DC7247(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z6F6B671C(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  const _arg1$$1 = MapTreeModule$$$tryPick(function f$$39(k$$39, v$$27) {\n    if (f$$38(k$$39, v$$27)) {\n      return some(k$$39);\n    } else {\n      return null;\n    }\n  }, FSharpMap$$get_Tree(m$$41));\n\n  if (_arg1$$1 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    const k$$40 = value$$3(_arg1$$1);\n    return k$$40;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  return MapTreeModule$$$tryPick(function f$$41(k$$41, v$$28) {\n    if (f$$40(k$$41, v$$28)) {\n      return some(k$$41);\n    } else {\n      return null;\n    }\n  }, FSharpMap$$get_Tree(m$$43));\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  const res$$6 = new Array(FSharpMap$$get_Count(m$$46));\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\n\nfunction createMutablePrivate(comparer$$22, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return MapTreeModule$$$size(tree$$1);\n    },\n\n    clear() {\n      tree$$1 = new MapTree$00602(0, \"MapEmpty\");\n    },\n\n    delete(x$$18) {\n      if (MapTreeModule$$$mem(comparer$$22, x$$18, tree$$1)) {\n        tree$$1 = MapTreeModule$$$remove(comparer$$22, x$$18, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    entries() {\n      return MapTreeModule$$$toSeq(tree$$1);\n    },\n\n    get(k$$42) {\n      return MapTreeModule$$$find(comparer$$22, k$$42, tree$$1);\n    },\n\n    has(x$$19) {\n      return MapTreeModule$$$mem(comparer$$22, x$$19, tree$$1);\n    },\n\n    keys() {\n      return map$$1(function mapping$$1(kv$$1) {\n        return kv$$1[0];\n      }, MapTreeModule$$$toSeq(tree$$1));\n    },\n\n    set(k$$43, v$$29) {\n      const this$$$3 = this;\n      tree$$1 = MapTreeModule$$$add(comparer$$22, k$$43, v$$29, tree$$1);\n      return this$$$3;\n    },\n\n    values() {\n      return map$$1(function mapping$$2(kv$$2) {\n        return kv$$2[1];\n      }, MapTreeModule$$$toSeq(tree$$1));\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(MapTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return MapTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source$$3, comparer$$23) {\n  return createMutablePrivate(comparer$$23, MapTreeModule$$$ofSeq(comparer$$23, source$$3));\n}\nexport function groupBy(projection, xs, comparer$$24) {\n  const dict = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (v$$30) {\n    const key = projection(v$$30);\n\n    if (dict.has(key)) {\n      dict.get(key).push(v$$30);\n    } else {\n      dict.set(key, Array.from([v$$30])), null;\n    }\n  }, xs);\n  return map$$1(function mapping$$3(kv$$3) {\n    return [kv$$3[0], kv$$3[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$25) {\n  const dict$$1 = createMutable(empty$$1(), comparer$$25);\n  iterate$$1(function (value$$1) {\n    const key$$1 = projection$$1(value$$1);\n    dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1), null;\n  }, xs$$1);\n  return map$$1(function mapping$$4(kv$$4) {\n    return [kv$$4[0], kv$$4[1]];\n  }, dict$$1);\n}\nexport function count(m$$47) {\n  return FSharpMap$$get_Count(m$$47);\n}","import { List, Record, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union as union$$1, int32 } from \"./Reflection.js\";\nimport { value as value$$2, some, Choice } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, fold as fold$$1, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq.js\";\nimport { structuralHash, isDisposable } from \"./Util.js\";\nimport { join } from \"./String.js\";\nexport const SetTree$00601 = declare(function Set_SetTree(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function SetTree$00601$reflection($gen$$3) {\n  return union$$1(\"Set.SetTree`1\", [$gen$$3], SetTree$00601, () => [\"SetEmpty\", [\"SetNode\", [$gen$$3, SetTree$00601$reflection($gen$$3), SetTree$00601$reflection($gen$$3), int32]], [\"SetOne\", [$gen$$3]]]);\n}\nexport function SetTreeModule$$$countAux(s, acc) {\n  SetTreeModule$$$countAux: while (true) {\n    switch (s.tag) {\n      case 2:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 0:\n        {\n          return acc | 0;\n        }\n\n      default:\n        {\n          const r = s.fields[2];\n          const l = s.fields[1];\n          const $acc$$4 = acc;\n          s = l;\n          acc = SetTreeModule$$$countAux(r, $acc$$4 + 1);\n          continue SetTreeModule$$$countAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  switch (t.tag) {\n    case 2:\n      {\n        return 1;\n      }\n\n    case 1:\n      {\n        const h$$1 = t.fields[3] | 0;\n        return h$$1 | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport const SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  const matchValue = [l$$2, r$$2];\n  var $target$$5;\n\n  if (matchValue[0].tag === 0) {\n    if (matchValue[1].tag === 0) {\n      $target$$5 = 0;\n    } else {\n      $target$$5 = 1;\n    }\n  } else {\n    $target$$5 = 1;\n  }\n\n  switch ($target$$5) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n      }\n\n    case 1:\n      {\n        const hl = SetTreeModule$$$height(l$$2) | 0;\n        const hr = SetTreeModule$$$height(r$$2) | 0;\n        const m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  const t1h = SetTreeModule$$$height(t1) | 0;\n  const t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      const t2r = t2.fields[2];\n      const t2l = t2.fields[1];\n      const t2k = t2.fields[0];\n\n      if (SetTreeModule$$$height(t2l) > t1h + 1) {\n        if (t2l.tag === 1) {\n          const t2lr = t2l.fields[2];\n          const t2ll = t2l.fields[1];\n          const t2lk = t2l.fields[0];\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2ll), t2lk, SetTreeModule$$$mk(t2lr, t2k, t2r));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2l), t2k, t2r);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      const t1r = t1.fields[2];\n      const t1l = t1.fields[1];\n      const t1k = t1.fields[0];\n\n      if (SetTreeModule$$$height(t1r) > t2h + 1) {\n        if (t1r.tag === 1) {\n          const t1rr = t1r.fields[2];\n          const t1rl = t1r.fields[1];\n          const t1rk = t1r.fields[0];\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1l, t1k, t1rl), t1rk, SetTreeModule$$$mk(t1rr, k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1l, t1k, SetTreeModule$$$mk(t1r, k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  switch (t$$1.tag) {\n    case 2:\n      {\n        const k2$$1 = t$$1.fields[0];\n        const c$$1 = comparer.Compare(k$$2, k2$$1) | 0;\n\n        if (c$$1 < 0) {\n          return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n        } else if (c$$1 === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n        }\n      }\n\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k$$2);\n      }\n\n    default:\n      {\n        const r$$3 = t$$1.fields[2];\n        const l$$3 = t$$1.fields[1];\n        const k2 = t$$1.fields[0];\n        const c = comparer.Compare(k$$2, k2) | 0;\n\n        if (c < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, l$$3), k2, r$$3);\n        } else if (c === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$rebalance(l$$3, k2, SetTreeModule$$$add(comparer, k$$2, r$$3));\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  const matchValue$$1 = [t1$$1, t2$$1];\n  var $target$$6, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (matchValue$$1[0].tag === 2) {\n    if (matchValue$$1[1].tag === 0) {\n      $target$$6 = 1;\n      t1$$2 = matchValue$$1[0];\n    } else if (matchValue$$1[1].tag === 2) {\n      $target$$6 = 2;\n      k1 = matchValue$$1[0].fields[0];\n      t2$$3 = matchValue$$1[1];\n    } else {\n      $target$$6 = 2;\n      k1 = matchValue$$1[0].fields[0];\n      t2$$3 = matchValue$$1[1];\n    }\n  } else if (matchValue$$1[0].tag === 1) {\n    if (matchValue$$1[1].tag === 2) {\n      $target$$6 = 3;\n      k2$$2 = matchValue$$1[1].fields[0];\n      t1$$3 = matchValue$$1[0];\n    } else if (matchValue$$1[1].tag === 1) {\n      $target$$6 = 4;\n      h1 = matchValue$$1[0].fields[3];\n      h2 = matchValue$$1[1].fields[3];\n      k1$$1 = matchValue$$1[0].fields[0];\n      k2$$3 = matchValue$$1[1].fields[0];\n      t11 = matchValue$$1[0].fields[1];\n      t12 = matchValue$$1[0].fields[2];\n      t21 = matchValue$$1[1].fields[1];\n      t22 = matchValue$$1[1].fields[2];\n    } else {\n      $target$$6 = 1;\n      t1$$2 = matchValue$$1[0];\n    }\n  } else {\n    $target$$6 = 0;\n    t2$$2 = matchValue$$1[1];\n  }\n\n  switch ($target$$6) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  switch (t$$2.tag) {\n    case 2:\n      {\n        const k1$$3 = t$$2.fields[0];\n        const c$$3 = comparer$$2.Compare(k1$$3, pivot) | 0;\n\n        if (c$$3 < 0) {\n          return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n        } else if (c$$3 === 0) {\n          return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n        } else {\n          return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n        }\n      }\n\n    case 0:\n      {\n        return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    default:\n      {\n        const t12$$1 = t$$2.fields[2];\n        const t11$$1 = t$$2.fields[1];\n        const k1$$2 = t$$2.fields[0];\n        const c$$2 = comparer$$2.Compare(pivot, k1$$2) | 0;\n\n        if (c$$2 < 0) {\n          const patternInput = SetTreeModule$$$split(comparer$$2, pivot, t11$$1);\n          return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], k1$$2, t12$$1)];\n        } else if (c$$2 === 0) {\n          return [t11$$1, true, t12$$1];\n        } else {\n          const patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t12$$1);\n          return [SetTreeModule$$$balance(comparer$$2, t11$$1, k1$$2, patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  switch (t$$3.tag) {\n    case 2:\n      {\n        const k2$$4 = t$$3.fields[0];\n        return [k2$$4, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    case 1:\n      {\n        const r$$4 = t$$3.fields[2];\n        const l$$4 = t$$3.fields[1];\n        const k2$$5 = t$$3.fields[0];\n\n        if (l$$4.tag === 0) {\n          return [k2$$5, r$$4];\n        } else {\n          const patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(l$$4);\n          return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], k2$$5, r$$4)];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Set.spliceOutSuccessor\");\n      }\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  switch (t$$4.tag) {\n    case 2:\n      {\n        const k2$$6 = t$$4.fields[0];\n        const c$$4 = comparer$$3.Compare(k$$4, k2$$6) | 0;\n\n        if (c$$4 === 0) {\n          return new SetTree$00601(0, \"SetEmpty\");\n        } else {\n          return t$$4;\n        }\n      }\n\n    case 1:\n      {\n        const r$$5 = t$$4.fields[2];\n        const l$$5 = t$$4.fields[1];\n        const k2$$7 = t$$4.fields[0];\n        const c$$5 = comparer$$3.Compare(k$$4, k2$$7) | 0;\n\n        if (c$$5 < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, l$$5), k2$$7, r$$5);\n        } else if (c$$5 === 0) {\n          const matchValue$$2 = [l$$5, r$$5];\n\n          if (matchValue$$2[0].tag === 0) {\n            return r$$5;\n          } else if (matchValue$$2[1].tag === 0) {\n            return l$$5;\n          } else {\n            const patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(r$$5);\n            return SetTreeModule$$$mk(l$$5, patternInput$$3[0], patternInput$$3[1]);\n          }\n        } else {\n          return SetTreeModule$$$rebalance(l$$5, k2$$7, SetTreeModule$$$remove(comparer$$3, k$$4, r$$5));\n        }\n      }\n\n    default:\n      {\n        return t$$4;\n      }\n  }\n}\nexport function SetTreeModule$$$mem(comparer$$4, k$$5, t$$5) {\n  SetTreeModule$$$mem: while (true) {\n    switch (t$$5.tag) {\n      case 2:\n        {\n          const k2$$9 = t$$5.fields[0];\n          return comparer$$4.Compare(k$$5, k2$$9) === 0;\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const r$$6 = t$$5.fields[2];\n          const l$$6 = t$$5.fields[1];\n          const k2$$8 = t$$5.fields[0];\n          const c$$6 = comparer$$4.Compare(k$$5, k2$$8) | 0;\n\n          if (c$$6 < 0) {\n            const $comparer$$4$$7 = comparer$$4;\n            const $k$$5$$8 = k$$5;\n            comparer$$4 = $comparer$$4$$7;\n            k$$5 = $k$$5$$8;\n            t$$5 = l$$6;\n            continue SetTreeModule$$$mem;\n          } else if (c$$6 === 0) {\n            return true;\n          } else {\n            const $comparer$$4$$9 = comparer$$4;\n            const $k$$5$$10 = k$$5;\n            comparer$$4 = $comparer$$4$$9;\n            k$$5 = $k$$5$$10;\n            t$$5 = r$$6;\n            continue SetTreeModule$$$mem;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$iter($arg$$11, $arg$$12) {\n  SetTreeModule$$$iter: while (true) {\n    const f = $arg$$11,\n          t$$6 = $arg$$12;\n\n    switch (t$$6.tag) {\n      case 2:\n        {\n          const k2$$11 = t$$6.fields[0];\n          f(k2$$11);\n          break;\n        }\n\n      case 0:\n        {\n          break;\n        }\n\n      default:\n        {\n          const r$$7 = t$$6.fields[2];\n          const l$$7 = t$$6.fields[1];\n          const k2$$10 = t$$6.fields[0];\n          SetTreeModule$$$iter(f, l$$7);\n          f(k2$$10);\n          $arg$$11 = f;\n          $arg$$12 = r$$7;\n          continue SetTreeModule$$$iter;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$foldBack($arg$$13, $arg$$14, $arg$$15) {\n  SetTreeModule$$$foldBack: while (true) {\n    const f$$1 = $arg$$13,\n          m$$1 = $arg$$14,\n          x$$1 = $arg$$15;\n\n    switch (m$$1.tag) {\n      case 2:\n        {\n          const k$$7 = m$$1.fields[0];\n          return f$$1(k$$7, x$$1);\n        }\n\n      case 0:\n        {\n          return x$$1;\n        }\n\n      default:\n        {\n          const r$$8 = m$$1.fields[2];\n          const l$$8 = m$$1.fields[1];\n          const k$$6 = m$$1.fields[0];\n          $arg$$13 = f$$1;\n          $arg$$14 = l$$8;\n          $arg$$15 = f$$1(k$$6, SetTreeModule$$$foldBack(f$$1, r$$8, x$$1));\n          continue SetTreeModule$$$foldBack;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$fold($arg$$16, $arg$$17, $arg$$18) {\n  SetTreeModule$$$fold: while (true) {\n    const f$$2 = $arg$$16,\n          x$$2 = $arg$$17,\n          m$$2 = $arg$$18;\n\n    switch (m$$2.tag) {\n      case 2:\n        {\n          const k$$9 = m$$2.fields[0];\n          return f$$2(x$$2, k$$9);\n        }\n\n      case 0:\n        {\n          return x$$2;\n        }\n\n      default:\n        {\n          const r$$9 = m$$2.fields[2];\n          const l$$9 = m$$2.fields[1];\n          const k$$8 = m$$2.fields[0];\n          const x$$3 = SetTreeModule$$$fold(f$$2, x$$2, l$$9);\n          const x$$4 = f$$2(x$$3, k$$8);\n          $arg$$16 = f$$2;\n          $arg$$17 = x$$4;\n          $arg$$18 = r$$9;\n          continue SetTreeModule$$$fold;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$forall($arg$$19, $arg$$20) {\n  SetTreeModule$$$forall: while (true) {\n    const f$$3 = $arg$$19,\n          m$$3 = $arg$$20;\n\n    switch (m$$3.tag) {\n      case 2:\n        {\n          const k2$$13 = m$$3.fields[0];\n          return f$$3(k2$$13);\n        }\n\n      case 0:\n        {\n          return true;\n        }\n\n      default:\n        {\n          const r$$10 = m$$3.fields[2];\n          const l$$10 = m$$3.fields[1];\n          const k2$$12 = m$$3.fields[0];\n\n          if (f$$3(k2$$12) ? SetTreeModule$$$forall(f$$3, l$$10) : false) {\n            $arg$$19 = f$$3;\n            $arg$$20 = r$$10;\n            continue SetTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$exists($arg$$21, $arg$$22) {\n  SetTreeModule$$$exists: while (true) {\n    const f$$4 = $arg$$21,\n          m$$4 = $arg$$22;\n\n    switch (m$$4.tag) {\n      case 2:\n        {\n          const k2$$15 = m$$4.fields[0];\n          return f$$4(k2$$15);\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const r$$11 = m$$4.fields[2];\n          const l$$11 = m$$4.fields[1];\n          const k2$$14 = m$$4.fields[0];\n\n          if (f$$4(k2$$14) ? true : SetTreeModule$$$exists(f$$4, l$$11)) {\n            return true;\n          } else {\n            $arg$$21 = f$$4;\n            $arg$$22 = r$$11;\n            continue SetTreeModule$$$exists;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($arg$$23, $arg$$24, $arg$$25, $arg$$26) {\n  SetTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $arg$$23,\n          f$$5 = $arg$$24,\n          s$$2 = $arg$$25,\n          acc$$1 = $arg$$26;\n\n    switch (s$$2.tag) {\n      case 2:\n        {\n          const k$$11 = s$$2.fields[0];\n\n          if (f$$5(k$$11)) {\n            return SetTreeModule$$$add(comparer$$7, k$$11, acc$$1);\n          } else {\n            return acc$$1;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$1;\n        }\n\n      default:\n        {\n          const r$$12 = s$$2.fields[2];\n          const l$$12 = s$$2.fields[1];\n          const k$$10 = s$$2.fields[0];\n          const acc$$2 = f$$5(k$$10) ? SetTreeModule$$$add(comparer$$7, k$$10, acc$$1) : acc$$1;\n          $arg$$23 = comparer$$7;\n          $arg$$24 = f$$5;\n          $arg$$25 = l$$12;\n          $arg$$26 = SetTreeModule$$$filterAux(comparer$$7, f$$5, r$$12, acc$$2);\n          continue SetTreeModule$$$filterAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux(comparer$$9, m$$6, acc$$3) {\n  SetTreeModule$$$diffAux: while (true) {\n    switch (m$$6.tag) {\n      case 2:\n        {\n          const k$$13 = m$$6.fields[0];\n          return SetTreeModule$$$remove(comparer$$9, k$$13, acc$$3);\n        }\n\n      case 0:\n        {\n          return acc$$3;\n        }\n\n      default:\n        {\n          const r$$13 = m$$6.fields[2];\n          const l$$13 = m$$6.fields[1];\n          const k$$12 = m$$6.fields[0];\n          const $acc$$3$$31 = acc$$3;\n          const $comparer$$9$$30 = comparer$$9;\n          comparer$$9 = $comparer$$9$$30;\n          m$$6 = l$$13;\n          acc$$3 = SetTreeModule$$$diffAux($comparer$$9$$30, r$$13, SetTreeModule$$$remove($comparer$$9$$30, k$$12, $acc$$3$$31));\n          continue SetTreeModule$$$diffAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  const matchValue$$3 = [t1$$4, t2$$4];\n  var $target$$32, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (matchValue$$3[0].tag === 0) {\n    $target$$32 = 1;\n    t$$7 = matchValue$$3[1];\n  } else if (matchValue$$3[0].tag === 2) {\n    if (matchValue$$3[1].tag === 0) {\n      $target$$32 = 2;\n      t$$8 = matchValue$$3[0];\n    } else if (matchValue$$3[1].tag === 2) {\n      $target$$32 = 3;\n      k1$$5 = matchValue$$3[0].fields[0];\n      t2$$5 = matchValue$$3[1];\n    } else {\n      $target$$32 = 3;\n      k1$$5 = matchValue$$3[0].fields[0];\n      t2$$5 = matchValue$$3[1];\n    }\n  } else if (matchValue$$3[1].tag === 0) {\n    $target$$32 = 2;\n    t$$8 = matchValue$$3[0];\n  } else if (matchValue$$3[1].tag === 2) {\n    $target$$32 = 4;\n    k2$$17 = matchValue$$3[1].fields[0];\n    t1$$5 = matchValue$$3[0];\n  } else {\n    $target$$32 = 0;\n    h1$$1 = matchValue$$3[0].fields[3];\n    h2$$1 = matchValue$$3[1].fields[3];\n    k1$$4 = matchValue$$3[0].fields[0];\n    k2$$16 = matchValue$$3[1].fields[0];\n    t11$$2 = matchValue$$3[0].fields[1];\n    t12$$2 = matchValue$$3[0].fields[2];\n    t21$$1 = matchValue$$3[1].fields[1];\n    t22$$1 = matchValue$$3[1].fields[2];\n  }\n\n  switch ($target$$32) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          const patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          const patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n      }\n\n    case 1:\n      {\n        return t$$7;\n      }\n\n    case 2:\n      {\n        return t$$8;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7, acc$$4) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    switch (m$$7.tag) {\n      case 2:\n        {\n          const k$$15 = m$$7.fields[0];\n\n          if (SetTreeModule$$$mem(comparer$$12, k$$15, b$$3)) {\n            return SetTreeModule$$$add(comparer$$12, k$$15, acc$$4);\n          } else {\n            return acc$$4;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$4;\n        }\n\n      default:\n        {\n          const r$$14 = m$$7.fields[2];\n          const l$$14 = m$$7.fields[1];\n          const k$$14 = m$$7.fields[0];\n          const acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, r$$14, acc$$4);\n          const acc$$6 = SetTreeModule$$$mem(comparer$$12, k$$14, b$$3) ? SetTreeModule$$$add(comparer$$12, k$$14, acc$$5) : acc$$5;\n          const $b$$3$$34 = b$$3;\n          const $comparer$$12$$33 = comparer$$12;\n          comparer$$12 = $comparer$$12$$33;\n          b$$3 = $b$$3$$34;\n          m$$7 = l$$14;\n          acc$$4 = acc$$6;\n          continue SetTreeModule$$$intersectionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($arg$$40, $arg$$41, $arg$$42, $arg$$43, $arg$$44) {\n  SetTreeModule$$$partitionAux: while (true) {\n    const comparer$$15 = $arg$$40,\n          f$$8 = $arg$$41,\n          s$$4 = $arg$$42,\n          acc_0 = $arg$$43,\n          acc_1 = $arg$$44;\n    const acc$$7 = [acc_0, acc_1];\n\n    switch (s$$4.tag) {\n      case 2:\n        {\n          const k$$18 = s$$4.fields[0];\n          return SetTreeModule$$$partition1(comparer$$15, f$$8, k$$18, acc$$7[0], acc$$7[1]);\n        }\n\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      default:\n        {\n          const r$$15 = s$$4.fields[2];\n          const l$$15 = s$$4.fields[1];\n          const k$$17 = s$$4.fields[0];\n          const acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, r$$15, acc$$7[0], acc$$7[1]);\n          const acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, k$$17, acc$$8[0], acc$$8[1]);\n          $arg$$40 = comparer$$15;\n          $arg$$41 = f$$8;\n          $arg$$42 = l$$15;\n          $arg$$43 = acc$$9[0];\n          $arg$$44 = acc$$9[1];\n          continue SetTreeModule$$$partitionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  const seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  switch (s$$6.tag) {\n    case 2:\n      {\n        const k2$$19 = s$$6.fields[0];\n        return new Choice(0, \"Choice1Of2\", [k2$$19, new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n      }\n\n    case 0:\n      {\n        return new Choice(1, \"Choice2Of2\", null);\n      }\n\n    default:\n      {\n        const r$$16 = s$$6.fields[2];\n        const l$$16 = s$$6.fields[1];\n        const k2$$18 = s$$6.fields[0];\n        return new Choice(0, \"Choice1Of2\", [k2$$18, l$$16, r$$16]);\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElementAux(s$$7, n$$1) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    switch (s$$7.tag) {\n      case 2:\n        {\n          const k$$20 = s$$7.fields[0];\n          return k$$20;\n        }\n\n      case 0:\n        {\n          return n$$1;\n        }\n\n      default:\n        {\n          const l$$17 = s$$7.fields[1];\n          const k$$19 = s$$7.fields[0];\n          s$$7 = l$$17;\n          n$$1 = k$$19;\n          continue SetTreeModule$$$minimumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  switch (s$$8.tag) {\n    case 2:\n      {\n        const k$$22 = s$$8.fields[0];\n        return some(k$$22);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        const l$$18 = s$$8.fields[1];\n        const k$$21 = s$$8.fields[0];\n        return some(SetTreeModule$$$minimumElementAux(l$$18, k$$21));\n      }\n  }\n}\nexport function SetTreeModule$$$maximumElementAux(s$$9, n$$2) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    switch (s$$9.tag) {\n      case 2:\n        {\n          const k$$24 = s$$9.fields[0];\n          return k$$24;\n        }\n\n      case 0:\n        {\n          return n$$2;\n        }\n\n      default:\n        {\n          const r$$17 = s$$9.fields[2];\n          const k$$23 = s$$9.fields[0];\n          s$$9 = r$$17;\n          n$$2 = k$$23;\n          continue SetTreeModule$$$maximumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  switch (s$$10.tag) {\n    case 2:\n      {\n        const k$$26 = s$$10.fields[0];\n        return some(k$$26);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        const r$$18 = s$$10.fields[2];\n        const k$$25 = s$$10.fields[0];\n        return some(SetTreeModule$$$maximumElementAux(r$$18, k$$25));\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  const matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  const matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport const SetTreeModule$002ESetIterator$00601 = declare(function Set_SetTreeModule_SetIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function SetTreeModule$002ESetIterator$00601$reflection($gen$$48) {\n  return record(\"Set.SetTreeModule.SetIterator`1\", [$gen$$48], SetTreeModule$002ESetIterator$00601, () => [[\"stack\", list(SetTree$00601$reflection($gen$$48))], [\"started\", bool]]);\n}\nexport function SetTreeModule$$$collapseLHS(stack) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        const $stack$$49 = stack;\n        stack = new List($stack$$49.head.fields[1], new List(SetTreeModule$$$SetOne($stack$$49.head.fields[0]), new List($stack$$49.head.fields[2], $stack$$49.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        const $stack$$50 = stack;\n        stack = $stack$$50.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(new List(s$$13, new List())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    const matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    const matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport const SetTreeModule$002EmkIEnumerator$00601 = declare(function Set_SetTreeModule_mkIEnumerator(s$$14) {\n  const $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$reflection($gen$$51) {\n  return type(\"Set.SetTreeModule.mkIEnumerator`1\", [$gen$$51]);\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this instanceof SetTreeModule$002EmkIEnumerator$00601 ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nObject.defineProperty(SetTreeModule$002EmkIEnumerator$00601.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return SetTreeModule$$$current(__.i);\n  }\n});\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return SetTreeModule$$$moveNext(__$$1.i);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = SetTreeModule$$$mkIterator(__$$2.s);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Dispose = function () {};\n\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15);\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  const en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks(comparer$$17, l1, l2) {\n  SetTreeModule$$$compareStacks: while (true) {\n    const matchValue$$8 = [l1, l2];\n    var $target$$52, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (matchValue$$8[0].tail != null) {\n      if (matchValue$$8[1].tail != null) {\n        if (matchValue$$8[1].head.tag === 2) {\n          if (matchValue$$8[0].head.tag === 2) {\n            $target$$52 = 4;\n            n1k = matchValue$$8[0].head.fields[0];\n            n2k = matchValue$$8[1].head.fields[0];\n            t1$$7 = matchValue$$8[0].tail;\n            t2$$7 = matchValue$$8[1].tail;\n          } else if (matchValue$$8[0].head.tag === 1) {\n            if (matchValue$$8[0].head.fields[1].tag === 0) {\n              $target$$52 = 6;\n              emp = matchValue$$8[0].head.fields[1];\n              n1k$$2 = matchValue$$8[0].head.fields[0];\n              n1r = matchValue$$8[0].head.fields[2];\n              n2k$$2 = matchValue$$8[1].head.fields[0];\n              t1$$9 = matchValue$$8[0].tail;\n              t2$$9 = matchValue$$8[1].tail;\n            } else {\n              $target$$52 = 9;\n              n1k$$5 = matchValue$$8[0].head.fields[0];\n              n1l = matchValue$$8[0].head.fields[1];\n              n1r$$2 = matchValue$$8[0].head.fields[2];\n              t1$$12 = matchValue$$8[0].tail;\n            }\n          } else {\n            $target$$52 = 10;\n            n2k$$4 = matchValue$$8[1].head.fields[0];\n            t2$$11 = matchValue$$8[1].tail;\n          }\n        } else if (matchValue$$8[1].head.tag === 1) {\n          if (matchValue$$8[1].head.fields[1].tag === 0) {\n            if (matchValue$$8[0].head.tag === 2) {\n              $target$$52 = 5;\n              n1k$$1 = matchValue$$8[0].head.fields[0];\n              n2k$$1 = matchValue$$8[1].head.fields[0];\n              n2r = matchValue$$8[1].head.fields[2];\n              t1$$8 = matchValue$$8[0].tail;\n              t2$$8 = matchValue$$8[1].tail;\n            } else if (matchValue$$8[0].head.tag === 1) {\n              if (matchValue$$8[0].head.fields[1].tag === 0) {\n                $target$$52 = 7;\n                n1k$$3 = matchValue$$8[0].head.fields[0];\n                n1r$$1 = matchValue$$8[0].head.fields[2];\n                n2k$$3 = matchValue$$8[1].head.fields[0];\n                n2r$$1 = matchValue$$8[1].head.fields[2];\n                t1$$10 = matchValue$$8[0].tail;\n                t2$$10 = matchValue$$8[1].tail;\n              } else {\n                $target$$52 = 9;\n                n1k$$5 = matchValue$$8[0].head.fields[0];\n                n1l = matchValue$$8[0].head.fields[1];\n                n1r$$2 = matchValue$$8[0].head.fields[2];\n                t1$$12 = matchValue$$8[0].tail;\n              }\n            } else {\n              $target$$52 = 11;\n              n2k$$5 = matchValue$$8[1].head.fields[0];\n              n2l = matchValue$$8[1].head.fields[1];\n              n2r$$2 = matchValue$$8[1].head.fields[2];\n              t2$$12 = matchValue$$8[1].tail;\n            }\n          } else if (matchValue$$8[0].head.tag === 2) {\n            $target$$52 = 8;\n            n1k$$4 = matchValue$$8[0].head.fields[0];\n            t1$$11 = matchValue$$8[0].tail;\n          } else if (matchValue$$8[0].head.tag === 1) {\n            $target$$52 = 9;\n            n1k$$5 = matchValue$$8[0].head.fields[0];\n            n1l = matchValue$$8[0].head.fields[1];\n            n1r$$2 = matchValue$$8[0].head.fields[2];\n            t1$$12 = matchValue$$8[0].tail;\n          } else {\n            $target$$52 = 11;\n            n2k$$5 = matchValue$$8[1].head.fields[0];\n            n2l = matchValue$$8[1].head.fields[1];\n            n2r$$2 = matchValue$$8[1].head.fields[2];\n            t2$$12 = matchValue$$8[1].tail;\n          }\n        } else if (matchValue$$8[0].head.tag === 2) {\n          $target$$52 = 8;\n          n1k$$4 = matchValue$$8[0].head.fields[0];\n          t1$$11 = matchValue$$8[0].tail;\n        } else if (matchValue$$8[0].head.tag === 1) {\n          $target$$52 = 9;\n          n1k$$5 = matchValue$$8[0].head.fields[0];\n          n1l = matchValue$$8[0].head.fields[1];\n          n1r$$2 = matchValue$$8[0].head.fields[2];\n          t1$$12 = matchValue$$8[0].tail;\n        } else {\n          $target$$52 = 3;\n          t1$$6 = matchValue$$8[0].tail;\n          t2$$6 = matchValue$$8[1].tail;\n        }\n      } else {\n        $target$$52 = 2;\n      }\n    } else if (matchValue$$8[1].tail != null) {\n      $target$$52 = 1;\n    } else {\n      $target$$52 = 0;\n    }\n\n    switch ($target$$52) {\n      case 0:\n        {\n          return 0;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n        }\n\n      case 2:\n        {\n          return 1;\n        }\n\n      case 3:\n        {\n          const $comparer$$17$$53 = comparer$$17;\n          comparer$$17 = $comparer$$17$$53;\n          l1 = t1$$6;\n          l2 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 4:\n        {\n          const c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            const $comparer$$17$$54 = comparer$$17;\n            comparer$$17 = $comparer$$17$$54;\n            l1 = t1$$7;\n            l2 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 5:\n        {\n          const c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            const $comparer$$17$$55 = comparer$$17;\n            comparer$$17 = $comparer$$17$$55;\n            l1 = new List(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            l2 = new List(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 6:\n        {\n          const c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            const $comparer$$17$$56 = comparer$$17;\n            comparer$$17 = $comparer$$17$$56;\n            l1 = new List(n1r, t1$$9);\n            l2 = new List(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 7:\n        {\n          const c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            const $comparer$$17$$57 = comparer$$17;\n            comparer$$17 = $comparer$$17$$57;\n            l1 = new List(n1r$$1, t1$$10);\n            l2 = new List(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 8:\n        {\n          const $comparer$$17$$58 = comparer$$17;\n          const $l2$$59 = l2;\n          comparer$$17 = $comparer$$17$$58;\n          l1 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          l2 = $l2$$59;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 9:\n        {\n          const $comparer$$17$$60 = comparer$$17;\n          const $l2$$61 = l2;\n          comparer$$17 = $comparer$$17$$60;\n          l1 = new List(n1l, new List(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          l2 = $l2$$61;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 10:\n        {\n          const $comparer$$17$$62 = comparer$$17;\n          const $l1$$63 = l1;\n          comparer$$17 = $comparer$$17$$62;\n          l1 = $l1$$63;\n          l2 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 11:\n        {\n          const $comparer$$17$$64 = comparer$$17;\n          const $l1$$65 = l1;\n          comparer$$17 = $comparer$$17$$64;\n          l1 = $l1$$65;\n          l2 = new List(n2l, new List(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  const matchValue$$9 = [s1, s2];\n\n  if (matchValue$$9[0].tag === 0) {\n    if (matchValue$$9[1].tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (matchValue$$9[1].tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, new List(s1, new List()), new List(s2, new List())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop(m$$8, acc$$10) {\n  SetTreeModule$$$loop: while (true) {\n    switch (m$$8.tag) {\n      case 2:\n        {\n          const k$$32 = m$$8.fields[0];\n          return new List(k$$32, acc$$10);\n        }\n\n      case 0:\n        {\n          return acc$$10;\n        }\n\n      default:\n        {\n          const r$$20 = m$$8.fields[2];\n          const l$$20 = m$$8.fields[1];\n          const k$$31 = m$$8.fields[0];\n          const $acc$$10$$66 = acc$$10;\n          m$$8 = l$$20;\n          acc$$10 = new List(k$$31, SetTreeModule$$$loop(r$$20, $acc$$10$$66));\n          continue SetTreeModule$$$loop;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, new List());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  let j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator(comparer$$19, acc$$11, e) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    if (e.MoveNext()) {\n      const $acc$$11$$68 = acc$$11;\n      const $comparer$$19$$67 = comparer$$19;\n      const $e$$69 = e;\n      comparer$$19 = $comparer$$19$$67;\n      acc$$11 = SetTreeModule$$$add($comparer$$19$$67, $e$$69.Current, $acc$$11$$68);\n      e = $e$$69;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  const ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, arr$$1) {\n  let acc$$12 = new SetTree$00601(0, \"SetEmpty\");\n\n  for (let i$$3 = 0; i$$3 <= arr$$1.length - 1; i$$3++) {\n    acc$$12 = SetTreeModule$$$add(comparer$$21, arr$$1[i$$3], acc$$12);\n  }\n\n  return acc$$12;\n}\nexport const FSharpSet = declare(function Set_Set(comparer$$22, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n});\nexport function FSharpSet$reflection($gen$$70) {\n  return type(\"Set.FSharpSet\", [$gen$$70]);\n}\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this instanceof FSharpSet ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  if (FSharpSet$$get_Tree(s$$27).tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    const patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  if (FSharpSet$$get_Tree(s$$28).tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$38806891(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$33) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$33), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  if (FSharpSet$$get_Tree(a$$4).tag === 0) {\n    return a$$4;\n  } else if (FSharpSet$$get_Tree(b$$5).tag === 0) {\n    return a$$4;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  if (FSharpSet$$get_Tree(b$$6).tag === 0) {\n    return a$$5;\n  } else if (FSharpSet$$get_Tree(a$$5).tag === 0) {\n    return b$$6;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  if (FSharpSet$$get_Tree(b$$7).tag === 0) {\n    return b$$7;\n  } else if (FSharpSet$$get_Tree(a$$6).tag === 0) {\n    return a$$6;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  const this$ = this;\n  return \"set [\" + join(\"; \", ...map$$1(String, this$)) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$22, y$$4) {\n    return (x$$22 << 1) + y$$4 + 631;\n  };\n\n  let res = 0;\n  const e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    res = combineHash(res, structuralHash(e$$1.Current));\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(that)) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  const this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(that$$1)) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  const s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$1(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$Map$$38806891(s$$44, f$$23, comparer$$27);\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$2, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$2));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  const n$$3 = count(s$$49) | 0;\n  const res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\n\nfunction createMutablePrivate(comparer$$31, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return SetTreeModule$$$count(tree$$1);\n    },\n\n    add(x$$33) {\n      const this$$$4 = this;\n      tree$$1 = SetTreeModule$$$add(comparer$$31, x$$33, tree$$1);\n      return this$$$4;\n    },\n\n    add_(x$$34) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$34, tree$$1)) {\n        return false;\n      } else {\n        tree$$1 = SetTreeModule$$$add(comparer$$31, x$$34, tree$$1);\n        return true;\n      }\n    },\n\n    clear() {\n      tree$$1 = new SetTree$00601(0, \"SetEmpty\");\n    },\n\n    delete(x$$35) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$35, tree$$1)) {\n        tree$$1 = SetTreeModule$$$remove(comparer$$31, x$$35, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    has(x$$36) {\n      return SetTreeModule$$$mem(comparer$$31, x$$36, tree$$1);\n    },\n\n    values() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(SetTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return SetTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source, comparer$$32) {\n  return createMutablePrivate(comparer$$32, SetTreeModule$$$ofSeq(comparer$$32, source));\n}\nexport function distinct(xs, comparer$$33) {\n  return createMutable(xs, comparer$$33);\n}\nexport function distinctBy(projection, xs$$1, comparer$$34) {\n  const li$$1 = [];\n  const hashSet = createMutable(empty$$1(), comparer$$34);\n  iterate$$1(function (x$$37) {\n    if (hashSet.add_(projection(x$$37))) {\n      li$$1.push(x$$37);\n    }\n  }, xs$$1);\n  return li$$1;\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$1(function folder(acc$$14, x$$38) {\n    return acc$$14.add(x$$38);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$35) {\n  const s2$$6 = ofSeq(s2$$5, comparer$$35);\n  iterate$$1(function (x$$39) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$39)) {\n      s1$$5.delete(x$$39), null;\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$40) {\n    s1$$6.delete(x$$40), null;\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$36) {\n  return isSubset(ofSeq(s1$$7, comparer$$36), ofSeq(s2$$8, comparer$$36));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$37) {\n  return isSuperset(ofSeq(s1$$8, comparer$$37), ofSeq(s2$$9, comparer$$37));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$38) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$38), ofSeq(s2$$10, comparer$$38));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$39) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$39), ofSeq(s2$$11, comparer$$39));\n}","import { defaultArg, value as value$$10, some } from \"./Option.js\";\nimport { compare, getItemFromDict, addToDict, addToSet, tryGetValue, comparerFromEqualityComparer, max as max$$1, comparePrimitives } from \"./Util.js\";\nimport { createMutable } from \"./Map.js\";\nimport { iterateIndexed as iterateIndexed$$1, iterate as iterate$$1 } from \"./Seq.js\";\nimport { createMutable as createMutable$$1 } from \"./Set.js\";\nimport { List } from \"./Types.js\";\n\nfunction indexNotFound() {\n  throw new Error(\"An index satisfying the predicate was not found in the collection.\");\n}\n\nexport function append(array1, array2, cons) {\n  if (ArrayBuffer.isView(array1)) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new cons(len1 + len2);\n\n    for (let i = 0; i <= len1 - 1; i++) {\n      newArray[i] = array1[i];\n    }\n\n    for (let i$$1 = 0; i$$1 <= len2 - 1; i$$1++) {\n      newArray[i$$1 + len1] = array2[i$$1];\n    }\n\n    return newArray;\n  } else {\n    return array1.concat(array2);\n  }\n}\nexport function filter(predicate, array) {\n  return array.filter(predicate);\n}\nexport function fill(target, targetIndex, count, value) {\n  target.fill(value, targetIndex, targetIndex + count);\n  return target;\n}\nexport function getSubArray(array$$3, start$$1, count$$2) {\n  return array$$3.slice(start$$1, start$$1 + count$$2);\n}\nexport function last(array$$5) {\n  if (array$$5.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  return array$$5[array$$5.length - 1];\n}\nexport function tryLast(array$$6) {\n  if (array$$6.length === 0) {\n    return null;\n  } else {\n    return some(array$$6[array$$6.length - 1]);\n  }\n}\nexport function mapIndexed(f, source, cons$$1) {\n  if (ArrayBuffer.isView(source)) {\n    const len = source.length | 0;\n    const target$$1 = new cons$$1(len);\n\n    for (let i$$2 = 0; i$$2 <= len - 1; i$$2++) {\n      target$$1[i$$2] = f(i$$2, source[i$$2]);\n    }\n\n    return target$$1;\n  } else {\n    return source.map(function (delegateArg0, delegateArg1) {\n      return f(delegateArg1, delegateArg0);\n    });\n  }\n}\nexport function map(f$$1, source$$1, cons$$2) {\n  if (ArrayBuffer.isView(source$$1)) {\n    const len$$1 = source$$1.length | 0;\n    const target$$2 = new cons$$2(len$$1);\n\n    for (let i$$4 = 0; i$$4 <= len$$1 - 1; i$$4++) {\n      target$$2[i$$4] = f$$1(source$$1[i$$4]);\n    }\n\n    return target$$2;\n  } else {\n    return source$$1.map(function (x$$1) {\n      return f$$1(x$$1);\n    });\n  }\n}\nexport function mapIndexed2(f$$2, source1, source2, cons$$3) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result = new cons$$3(source1.length);\n\n  for (let i$$5 = 0; i$$5 <= source1.length - 1; i$$5++) {\n    result[i$$5] = f$$2(i$$5, source1[i$$5], source2[i$$5]);\n  }\n\n  return result;\n}\nexport function map2(f$$3, source1$$1, source2$$1, cons$$4) {\n  if (source1$$1.length !== source2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$1 = new cons$$4(source1$$1.length);\n\n  for (let i$$6 = 0; i$$6 <= source1$$1.length - 1; i$$6++) {\n    result$$1[i$$6] = f$$3(source1$$1[i$$6], source2$$1[i$$6]);\n  }\n\n  return result$$1;\n}\nexport function mapIndexed3(f$$4, source1$$2, source2$$2, source3, cons$$5) {\n  if (source1$$2.length !== source2$$2.length ? true : source2$$2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$2 = new cons$$5(source1$$2.length);\n\n  for (let i$$7 = 0; i$$7 <= source1$$2.length - 1; i$$7++) {\n    result$$2[i$$7] = f$$4(i$$7, source1$$2[i$$7], source2$$2[i$$7], source3[i$$7]);\n  }\n\n  return result$$2;\n}\nexport function map3(f$$5, source1$$3, source2$$3, source3$$1, cons$$6) {\n  if (source1$$3.length !== source2$$3.length ? true : source2$$3.length !== source3$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$3 = new cons$$6(source1$$3.length);\n\n  for (let i$$8 = 0; i$$8 <= source1$$3.length - 1; i$$8++) {\n    result$$3[i$$8] = f$$5(source1$$3[i$$8], source2$$3[i$$8], source3$$1[i$$8]);\n  }\n\n  return result$$3;\n}\nexport function mapFold(mapping$$2, state, array$$9, cons$$7) {\n  const matchValue = array$$9.length | 0;\n\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    const len$$2 = matchValue | 0;\n    let acc = state;\n    const res = new cons$$7(len$$2);\n\n    for (let i$$9 = 0; i$$9 <= array$$9.length - 1; i$$9++) {\n      const patternInput = mapping$$2(acc, array$$9[i$$9]);\n      res[i$$9] = patternInput[0];\n      acc = patternInput[1];\n    }\n\n    return [res, acc];\n  }\n}\nexport function mapFoldBack(mapping$$3, array$$10, state$$1, cons$$8) {\n  const matchValue$$1 = array$$10.length | 0;\n\n  if (matchValue$$1 === 0) {\n    return [[], state$$1];\n  } else {\n    const len$$3 = matchValue$$1 | 0;\n    let acc$$1 = state$$1;\n    const res$$1 = new cons$$8(len$$3);\n\n    for (let i$$10 = array$$10.length - 1; i$$10 >= 0; i$$10--) {\n      const patternInput$$1 = mapping$$3(array$$10[i$$10], acc$$1);\n      res$$1[i$$10] = patternInput$$1[0];\n      acc$$1 = patternInput$$1[1];\n    }\n\n    return [res$$1, acc$$1];\n  }\n}\nexport function indexed(source$$2) {\n  const len$$4 = source$$2.length | 0;\n  const target$$3 = new Array(len$$4);\n\n  for (let i$$11 = 0; i$$11 <= len$$4 - 1; i$$11++) {\n    target$$3[i$$11] = [i$$11, source$$2[i$$11]];\n  }\n\n  return target$$3;\n}\nexport function truncate(count$$4, array$$11) {\n  const count$$5 = max$$1(comparePrimitives, 0, count$$4) | 0;\n  return array$$11.slice(0, 0 + count$$5);\n}\nexport function concat(arrays, cons$$9) {\n  const arrays$$1 = Array.from(arrays);\n  const matchValue$$2 = arrays$$1.length | 0;\n\n  switch (matchValue$$2) {\n    case 0:\n      {\n        return new cons$$9(0);\n      }\n\n    case 1:\n      {\n        return arrays$$1[0];\n      }\n\n    default:\n      {\n        if (ArrayBuffer.isView(arrays$$1[0])) {\n          let totalIdx = 0;\n          let totalLength = 0;\n\n          for (let idx = 0; idx <= arrays$$1.length - 1; idx++) {\n            const arr$$4 = arrays$$1[idx];\n            totalLength = totalLength + arr$$4.length;\n          }\n\n          const result$$4 = new cons$$9(totalLength);\n\n          for (let idx$$1 = 0; idx$$1 <= arrays$$1.length - 1; idx$$1++) {\n            const arr$$5 = arrays$$1[idx$$1];\n\n            for (let j = 0; j <= arr$$5.length - 1; j++) {\n              result$$4[totalIdx] = arr$$5[j];\n              totalIdx = totalIdx + 1;\n            }\n          }\n\n          return result$$4;\n        } else {\n          return arrays$$1[0].concat(...arrays$$1.slice(1));\n        }\n      }\n  }\n}\nexport function collect(mapping$$4, array$$14, cons$$10) {\n  const mapped = map(mapping$$4, array$$14, Array);\n  return concat(mapped, cons$$10);\n}\nexport function countBy(projection, array$$15, eq) {\n  const dict = createMutable([], comparerFromEqualityComparer(eq));\n\n  for (let idx$$2 = 0; idx$$2 <= array$$15.length - 1; idx$$2++) {\n    const value$$2 = array$$15[idx$$2];\n    const key = projection(value$$2);\n    const matchValue$$3 = tryGetValue(dict, key, 0);\n\n    if (matchValue$$3[0]) {\n      dict.set(key, matchValue$$3[1] + 1);\n    } else {\n      dict.set(key, 1);\n    }\n  }\n\n  const res$$2 = new Array(dict.size);\n  let i$$12 = 0;\n  iterate$$1(function (group) {\n    res$$2[i$$12] = [group[0], group[1]];\n    i$$12 = i$$12 + 1;\n  }, dict);\n  return res$$2;\n}\nexport function distinctBy(projection$$1, array$$16, eq$$1) {\n  const hashSet = createMutable$$1([], comparerFromEqualityComparer(eq$$1));\n  return filter(function predicate$$2($arg$$3) {\n    return addToSet(projection$$1($arg$$3), hashSet);\n  }, array$$16);\n}\nexport function distinct(array$$18, eq$$2) {\n  return distinctBy(function (x$$2) {\n    return x$$2;\n  }, array$$18, eq$$2);\n}\nexport function where(predicate$$3, array$$19) {\n  return array$$19.filter(predicate$$3);\n}\nexport function contains(value$$3, array$$21, eq$$3) {\n  const loop = function loop(i$$13) {\n    loop: while (true) {\n      if (i$$13 >= array$$21.length) {\n        return false;\n      } else if (eq$$3.Equals(value$$3, array$$21[i$$13])) {\n        return true;\n      } else {\n        const $i$$13$$51 = i$$13;\n        i$$13 = $i$$13$$51 + 1;\n        continue loop;\n      }\n\n      break;\n    }\n  };\n\n  return loop(0);\n}\nexport function except(itemsToExclude, array$$22, eq$$4) {\n  if (array$$22.length === 0) {\n    return array$$22;\n  } else {\n    const cached = createMutable$$1(itemsToExclude, comparerFromEqualityComparer(eq$$4));\n    return array$$22.filter(function predicate$$5(arg00$$1) {\n      return addToSet(arg00$$1, cached);\n    });\n  }\n}\nexport function groupBy(projection$$2, array$$25, cons$$11, eq$$5) {\n  const dict$$1 = createMutable([], comparerFromEqualityComparer(eq$$5));\n  const keys = [];\n\n  for (let idx$$3 = 0; idx$$3 <= array$$25.length - 1; idx$$3++) {\n    const v = array$$25[idx$$3];\n    const key$$1 = projection$$2(v);\n    const matchValue$$4 = tryGetValue(dict$$1, key$$1, null);\n\n    if (matchValue$$4[0]) {\n      dict$$1.set(key$$1, new List(v, matchValue$$4[1]));\n    } else {\n      addToDict(dict$$1, key$$1, new List(v, new List()));\n      keys.push(key$$1);\n    }\n  }\n\n  const result$$5 = new Array(keys.length);\n  iterateIndexed$$1(function action(i$$14, key$$2) {\n    result$$5[i$$14] = [key$$2, cons$$11.from(getItemFromDict(dict$$1, key$$2)).reverse()];\n  }, keys);\n  return result$$5;\n}\nexport function empty(cons$$12) {\n  return new cons$$12(0);\n}\nexport function singleton(value$$4, cons$$14) {\n  const ar = new cons$$14(1);\n  ar[0] = value$$4;\n  return ar;\n}\nexport function initialize(count$$8, initializer, cons$$15) {\n  if (count$$8 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  const result$$6 = new cons$$15(count$$8);\n\n  for (let i$$15 = 0; i$$15 <= count$$8 - 1; i$$15++) {\n    result$$6[i$$15] = initializer(i$$15);\n  }\n\n  return result$$6;\n}\nexport function pairwise(array$$28) {\n  if (array$$28.length < 2) {\n    return [];\n  } else {\n    const count$$9 = array$$28.length - 1 | 0;\n    const result$$7 = new Array(count$$9);\n\n    for (let i$$16 = 0; i$$16 <= count$$9 - 1; i$$16++) {\n      result$$7[i$$16] = [array$$28[i$$16], array$$28[i$$16 + 1]];\n    }\n\n    return result$$7;\n  }\n}\nexport function replicate(count$$10, initial, cons$$16) {\n  if (count$$10 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  const result$$8 = new cons$$16(count$$10);\n\n  for (let i$$17 = 0; i$$17 <= result$$8.length - 1; i$$17++) {\n    result$$8[i$$17] = initial;\n  }\n\n  return result$$8;\n}\nexport function copy(array$$29, cons$$17) {\n  return array$$29.slice();\n}\nexport function reverse(array$$31, cons$$18) {\n  return array$$31.slice().reverse();\n}\nexport function scan(folder, state$$2, array$$35, cons$$19) {\n  const res$$3 = new cons$$19(array$$35.length + 1);\n  res$$3[0] = state$$2;\n\n  for (let i$$18 = 0; i$$18 <= array$$35.length - 1; i$$18++) {\n    res$$3[i$$18 + 1] = folder(res$$3[i$$18], array$$35[i$$18]);\n  }\n\n  return res$$3;\n}\nexport function scanBack(folder$$1, array$$36, state$$3, cons$$20) {\n  const res$$4 = new cons$$20(array$$36.length + 1);\n  res$$4[array$$36.length] = state$$3;\n\n  for (let i$$19 = array$$36.length - 1; i$$19 >= 0; i$$19--) {\n    res$$4[i$$19] = folder$$1(array$$36[i$$19], res$$4[i$$19 + 1]);\n  }\n\n  return res$$4;\n}\nexport function skip(count$$11, array$$37, cons$$21) {\n  if (count$$11 > array$$37.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$11 === array$$37.length) {\n    return new cons$$21(0);\n  } else {\n    const count$$12 = (count$$11 < 0 ? 0 : count$$11) | 0;\n    return array$$37.slice(count$$12);\n  }\n}\nexport function skipWhile(predicate$$7, array$$39, cons$$23) {\n  let count$$14 = 0;\n\n  while (count$$14 < array$$39.length ? predicate$$7(array$$39[count$$14]) : false) {\n    count$$14 = count$$14 + 1;\n  }\n\n  if (count$$14 === array$$39.length) {\n    return new cons$$23(0);\n  } else {\n    return array$$39.slice(count$$14);\n  }\n}\nexport function take(count$$16, array$$41, cons$$25) {\n  if (count$$16 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  if (count$$16 > array$$41.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$16 === 0) {\n    return new cons$$25(0);\n  } else {\n    return array$$41.slice(0, 0 + count$$16);\n  }\n}\nexport function takeWhile(predicate$$8, array$$43, cons$$27) {\n  let count$$18 = 0;\n\n  while (count$$18 < array$$43.length ? predicate$$8(array$$43[count$$18]) : false) {\n    count$$18 = count$$18 + 1;\n  }\n\n  if (count$$18 === 0) {\n    return new cons$$27(0);\n  } else {\n    return array$$43.slice(0, 0 + count$$18);\n  }\n}\nexport function addRangeInPlace(range, array$$45) {\n  iterate$$1(function (x$$3) {\n    array$$45.push(x$$3), null;\n  }, range);\n}\nexport function removeInPlace(item$$2, array$$47) {\n  const i$$20 = array$$47.indexOf(item$$2);\n\n  if (i$$20 > -1) {\n    array$$47.splice(i$$20, 1), null;\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function removeAllInPlace(predicate$$9, array$$50) {\n  const countRemoveAll = function countRemoveAll(count$$20) {\n    const i$$21 = array$$50.findIndex(predicate$$9);\n\n    if (i$$21 > -1) {\n      array$$50.splice(i$$21, 1), null;\n      return countRemoveAll(count$$20) + 1 | 0;\n    } else {\n      return count$$20 | 0;\n    }\n  };\n\n  return countRemoveAll(0) | 0;\n}\nexport function copyTo(source$$4, sourceIndex, target$$4, targetIndex$$1, count$$21) {\n  const diff = targetIndex$$1 - sourceIndex | 0;\n\n  for (let i$$22 = sourceIndex; i$$22 <= sourceIndex + count$$21 - 1; i$$22++) {\n    target$$4[i$$22 + diff] = source$$4[i$$22];\n  }\n}\nexport function partition(f$$6, source$$5, cons$$29) {\n  const len$$9 = source$$5.length | 0;\n  const res1 = new cons$$29(len$$9);\n  const res2 = new cons$$29(len$$9);\n  let iTrue = 0;\n  let iFalse = 0;\n\n  for (let i$$23 = 0; i$$23 <= len$$9 - 1; i$$23++) {\n    if (f$$6(source$$5[i$$23])) {\n      res1[iTrue] = source$$5[i$$23];\n      iTrue = iTrue + 1;\n    } else {\n      res2[iFalse] = source$$5[i$$23];\n      iFalse = iFalse + 1;\n    }\n  }\n\n  return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\nexport function find(predicate$$11, array$$55) {\n  const matchValue$$5 = array$$55.find(predicate$$11);\n\n  if (matchValue$$5 == null) {\n    return indexNotFound();\n  } else {\n    const res$$5 = value$$10(matchValue$$5);\n    return res$$5;\n  }\n}\nexport function tryFind(predicate$$13, array$$57) {\n  return array$$57.find(predicate$$13);\n}\nexport function findIndex(predicate$$15, array$$59) {\n  var index;\n  const matchValue$$6 = array$$59.findIndex(predicate$$15);\n\n  if (index = matchValue$$6 | 0, index > -1) {\n    const index$$1 = matchValue$$6 | 0;\n    return index$$1 | 0;\n  } else {\n    return indexNotFound() | 0;\n  }\n}\nexport function tryFindIndex(predicate$$17, array$$61) {\n  var index$$2;\n  const matchValue$$7 = array$$61.findIndex(predicate$$17);\n\n  if (index$$2 = matchValue$$7 | 0, index$$2 > -1) {\n    const index$$3 = matchValue$$7 | 0;\n    return index$$3;\n  } else {\n    return null;\n  }\n}\nexport function pick(chooser, array$$63) {\n  const loop$$1 = function loop$$1(i$$24) {\n    loop$$1: while (true) {\n      if (i$$24 >= array$$63.length) {\n        return indexNotFound();\n      } else {\n        const matchValue$$8 = chooser(array$$63[i$$24]);\n\n        if (matchValue$$8 != null) {\n          const res$$6 = value$$10(matchValue$$8);\n          return res$$6;\n        } else {\n          const $i$$24$$88 = i$$24;\n          i$$24 = $i$$24$$88 + 1;\n          continue loop$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(0);\n}\nexport function tryPick(chooser$$1, array$$64) {\n  const loop$$2 = function loop$$2(i$$25) {\n    loop$$2: while (true) {\n      if (i$$25 >= array$$64.length) {\n        return null;\n      } else {\n        const matchValue$$9 = chooser$$1(array$$64[i$$25]);\n\n        if (matchValue$$9 == null) {\n          const $i$$25$$91 = i$$25;\n          i$$25 = $i$$25$$91 + 1;\n          continue loop$$2;\n        } else {\n          const res$$7 = matchValue$$9;\n          return res$$7;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$2(0);\n}\nexport function findBack(predicate$$19, array$$65) {\n  const loop$$3 = function loop$$3(i$$26) {\n    loop$$3: while (true) {\n      if (i$$26 < 0) {\n        return indexNotFound();\n      } else if (predicate$$19(array$$65[i$$26])) {\n        return array$$65[i$$26];\n      } else {\n        const $i$$26$$94 = i$$26;\n        i$$26 = $i$$26$$94 - 1;\n        continue loop$$3;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$3(array$$65.length - 1);\n}\nexport function tryFindBack(predicate$$20, array$$66) {\n  const loop$$4 = function loop$$4(i$$27) {\n    loop$$4: while (true) {\n      if (i$$27 < 0) {\n        return null;\n      } else if (predicate$$20(array$$66[i$$27])) {\n        return some(array$$66[i$$27]);\n      } else {\n        const $i$$27$$97 = i$$27;\n        i$$27 = $i$$27$$97 - 1;\n        continue loop$$4;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$4(array$$66.length - 1);\n}\nexport function findLastIndex(predicate$$21, array$$67) {\n  const loop$$5 = function loop$$5(i$$28) {\n    loop$$5: while (true) {\n      if (i$$28 < 0) {\n        return -1 | 0;\n      } else if (predicate$$21(array$$67[i$$28])) {\n        return i$$28 | 0;\n      } else {\n        const $i$$28$$100 = i$$28;\n        i$$28 = $i$$28$$100 - 1;\n        continue loop$$5;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$5(array$$67.length - 1) | 0;\n}\nexport function findIndexBack(predicate$$22, array$$68) {\n  const loop$$6 = function loop$$6(i$$29) {\n    loop$$6: while (true) {\n      if (i$$29 < 0) {\n        return indexNotFound() | 0;\n      } else if (predicate$$22(array$$68[i$$29])) {\n        return i$$29 | 0;\n      } else {\n        const $i$$29$$103 = i$$29;\n        i$$29 = $i$$29$$103 - 1;\n        continue loop$$6;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$6(array$$68.length - 1) | 0;\n}\nexport function tryFindIndexBack(predicate$$23, array$$69) {\n  const loop$$7 = function loop$$7(i$$30) {\n    loop$$7: while (true) {\n      if (i$$30 < 0) {\n        return null;\n      } else if (predicate$$23(array$$69[i$$30])) {\n        return i$$30;\n      } else {\n        const $i$$30$$106 = i$$30;\n        i$$30 = $i$$30$$106 - 1;\n        continue loop$$7;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$7(array$$69.length - 1);\n}\nexport function choose(chooser$$2, array$$70, cons$$30) {\n  const f$$7 = function f$$7(x$$4) {\n    return chooser$$2(x$$4) != null;\n  };\n\n  const g = function g(x$$5) {\n    return value$$10(chooser$$2(x$$5));\n  };\n\n  const arr$$6 = array$$70.filter(f$$7);\n  return map(g, arr$$6, cons$$30);\n}\nexport function foldIndexed(folder$$2, state$$4, array$$72) {\n  return array$$72.reduce(function (delegateArg0$$1, delegateArg1$$1, delegateArg2) {\n    return folder$$2(delegateArg2, delegateArg0$$1, delegateArg1$$1);\n  }, state$$4);\n}\nexport function fold(folder$$4, state$$6, array$$74) {\n  return array$$74.reduce(folder$$4, state$$6);\n}\nexport function iterate(action$$1, array$$76) {\n  for (let i$$32 = 0; i$$32 <= array$$76.length - 1; i$$32++) {\n    action$$1(array$$76[i$$32]);\n  }\n}\nexport function iterateIndexed(action$$2, array$$77) {\n  for (let i$$33 = 0; i$$33 <= array$$77.length - 1; i$$33++) {\n    action$$2(i$$33, array$$77[i$$33]);\n  }\n}\nexport function iterate2(action$$3, array1$$2, array2$$2) {\n  if (array1$$2.length !== array2$$2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$34 = 0; i$$34 <= array1$$2.length - 1; i$$34++) {\n    action$$3(array1$$2[i$$34], array2$$2[i$$34]);\n  }\n}\nexport function iterateIndexed2(action$$4, array1$$3, array2$$3) {\n  if (array1$$3.length !== array2$$3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$35 = 0; i$$35 <= array1$$3.length - 1; i$$35++) {\n    action$$4(i$$35, array1$$3[i$$35], array2$$3[i$$35]);\n  }\n}\nexport function isEmpty(array$$78) {\n  return array$$78.length === 0;\n}\nexport function forAll(predicate$$25, array$$79) {\n  return array$$79.every(predicate$$25);\n}\nexport function permute(f$$8, array$$81) {\n  const size = array$$81.length | 0;\n  const res$$8 = new array$$81.constructor(array$$81.length);\n  const checkFlags = new Array(size);\n  iterateIndexed(function (i$$36, x$$8) {\n    const j$$1 = f$$8(i$$36) | 0;\n\n    if (j$$1 < 0 ? true : j$$1 >= size) {\n      throw new Error(\"Not a valid permutation\");\n    }\n\n    res$$8[j$$1] = x$$8;\n    checkFlags[j$$1] = 1;\n  }, array$$81);\n  const isValid = forAll(function (y) {\n    return 1 === y;\n  }, checkFlags);\n\n  if (!isValid) {\n    throw new Error(\"Not a valid permutation\");\n  }\n\n  return res$$8;\n}\nexport function setSlice(target$$5, lower, upper, source$$6) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const upper$$1 = defaultArg(upper, 0) | 0;\n  const length = (upper$$1 > 0 ? upper$$1 : target$$5.length - 1) - lower$$1 | 0;\n\n  if (ArrayBuffer.isView(target$$5) ? source$$6.length <= length : false) {\n    return target$$5.set(source$$6, lower$$1);\n  } else {\n    for (let i$$37 = 0; i$$37 <= length; i$$37++) {\n      target$$5[i$$37 + lower$$1] = source$$6[i$$37];\n    }\n  }\n}\nexport function sortInPlaceBy(projection$$3, xs, comparer) {\n  xs.sort(function (x$$10, y$$1) {\n    return comparer.Compare(projection$$3(x$$10), projection$$3(y$$1));\n  });\n}\nexport function sortInPlace(xs$$1, comparer$$1) {\n  xs$$1.sort(function (x$$11, y$$2) {\n    return comparer$$1.Compare(x$$11, y$$2);\n  });\n}\n\nfunction copyArray(array$$82) {\n  const result$$9 = new array$$82.constructor(array$$82.length);\n\n  for (let i$$38 = 0; i$$38 <= array$$82.length - 1; i$$38++) {\n    result$$9[i$$38] = array$$82[i$$38];\n  }\n\n  return result$$9;\n}\n\nexport function sort(xs$$2, comparer$$2) {\n  const xs$$3 = copyArray(xs$$2);\n  xs$$3.sort(function (x$$12, y$$3) {\n    return comparer$$2.Compare(x$$12, y$$3);\n  });\n  return xs$$3;\n}\nexport function sortBy(projection$$4, xs$$4, comparer$$4) {\n  const xs$$5 = copyArray(xs$$4);\n  xs$$5.sort(function (x$$13, y$$4) {\n    return comparer$$4.Compare(projection$$4(x$$13), projection$$4(y$$4));\n  });\n  return xs$$5;\n}\nexport function sortDescending(xs$$6, comparer$$6) {\n  const xs$$7 = copyArray(xs$$6);\n  xs$$7.sort(function (x$$14, y$$5) {\n    return comparer$$6.Compare(x$$14, y$$5) * -1;\n  });\n  return xs$$7;\n}\nexport function sortByDescending(projection$$5, xs$$8, comparer$$8) {\n  const xs$$9 = copyArray(xs$$8);\n  xs$$9.sort(function (x$$15, y$$6) {\n    return comparer$$8.Compare(projection$$5(x$$15), projection$$5(y$$6)) * -1;\n  });\n  return xs$$9;\n}\nexport function sortWith(comparer$$10, xs$$10) {\n  const xs$$11 = copyArray(xs$$10);\n  xs$$11.sort(comparer$$10);\n  return xs$$11;\n}\nexport function unfold(generator, state$$8) {\n  const res$$9 = [];\n\n  const loop$$8 = function loop$$8(state$$9) {\n    loop$$8: while (true) {\n      const matchValue$$10 = generator(state$$9);\n\n      if (matchValue$$10 != null) {\n        const x$$16 = matchValue$$10[0];\n        const s$0027$$2 = matchValue$$10[1];\n        res$$9.push(x$$16), null;\n        state$$9 = s$0027$$2;\n        continue loop$$8;\n      }\n\n      break;\n    }\n  };\n\n  loop$$8(state$$8);\n  return res$$9;\n}\nexport function unzip(array$$84) {\n  const len$$11 = array$$84.length | 0;\n  const res1$$1 = new Array(len$$11);\n  const res2$$1 = new Array(len$$11);\n  iterateIndexed(function (i$$39, tupledArg) {\n    res1$$1[i$$39] = tupledArg[0];\n    res2$$1[i$$39] = tupledArg[1];\n  }, array$$84);\n  return [res1$$1, res2$$1];\n}\nexport function unzip3(array$$85) {\n  const len$$14 = array$$85.length | 0;\n  const res1$$2 = new Array(len$$14);\n  const res2$$2 = new Array(len$$14);\n  const res3 = new Array(len$$14);\n  iterateIndexed(function (i$$40, tupledArg$$1) {\n    res1$$2[i$$40] = tupledArg$$1[0];\n    res2$$2[i$$40] = tupledArg$$1[1];\n    res3[i$$40] = tupledArg$$1[2];\n  }, array$$85);\n  return [res1$$2, res2$$2, res3];\n}\nexport function zip(array1$$4, array2$$4) {\n  if (array1$$4.length !== array2$$4.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$10 = new Array(array1$$4.length);\n\n  for (let i$$41 = 0; i$$41 <= array1$$4.length - 1; i$$41++) {\n    result$$10[i$$41] = [array1$$4[i$$41], array2$$4[i$$41]];\n  }\n\n  return result$$10;\n}\nexport function zip3(array1$$5, array2$$5, array3) {\n  if (array1$$5.length !== array2$$5.length ? true : array2$$5.length !== array3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$11 = new Array(array1$$5.length);\n\n  for (let i$$42 = 0; i$$42 <= array1$$5.length - 1; i$$42++) {\n    result$$11[i$$42] = [array1$$5[i$$42], array2$$5[i$$42], array3[i$$42]];\n  }\n\n  return result$$11;\n}\nexport function chunkBySize(chunkSize, array$$86) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: size\");\n  }\n\n  if (array$$86.length === 0) {\n    return [[]];\n  } else {\n    const result$$12 = [];\n\n    for (let x$$17 = 0; x$$17 <= ~~Math.ceil(array$$86.length / chunkSize) - 1; x$$17++) {\n      const start$$8 = x$$17 * chunkSize | 0;\n      const slice = array$$86.slice(start$$8, start$$8 + chunkSize);\n      result$$12.push(slice), null;\n    }\n\n    return result$$12;\n  }\n}\nexport function splitAt(index$$4, array$$89) {\n  if (index$$4 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: index\");\n  }\n\n  if (index$$4 > array$$89.length) {\n    throw new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\");\n  }\n\n  return [array$$89.slice(0, 0 + index$$4), array$$89.slice(index$$4)];\n}\nexport function compareWith(comparer$$12, array1$$6, array2$$6) {\n  if (array1$$6 == null) {\n    if (array2$$6 == null) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (array2$$6 == null) {\n    return 1;\n  } else {\n    let i$$43 = 0;\n    let result$$13 = 0;\n    const length1 = array1$$6.length | 0;\n    const length2 = array2$$6.length | 0;\n\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1 | 0;\n    } else {\n      while (i$$43 < length1 ? result$$13 === 0 : false) {\n        result$$13 = comparer$$12(array1$$6[i$$43], array2$$6[i$$43]);\n        i$$43 = i$$43 + 1;\n      }\n\n      return result$$13 | 0;\n    }\n  }\n}\nexport function equalsWith(comparer$$13, array1$$7, array2$$7) {\n  return compareWith(compare, array1$$7, array2$$7) === 0;\n}\nexport function exactlyOne(array$$92) {\n  if (array$$92.length === 1) {\n    return array$$92[0];\n  } else if (array$$92.length === 0) {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: array\");\n  } else {\n    throw new Error(\"Input array too long\\\\nParameter name: array\");\n  }\n}\nexport function head(array$$93) {\n  if (array$$93.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    return array$$93[0];\n  }\n}\nexport function tryHead(array$$94) {\n  if (array$$94.length === 0) {\n    return null;\n  } else {\n    return some(array$$94[0]);\n  }\n}\nexport function tail(array$$95) {\n  if (array$$95.length === 0) {\n    throw new Error(\"Not enough elements\\\\nParameter name: array\");\n  }\n\n  return array$$95.slice(1);\n}\nexport function item(index$$5, array$$97) {\n  return array$$97[index$$5];\n}\nexport function tryItem(index$$6, array$$98) {\n  if (index$$6 < 0 ? true : index$$6 >= array$$98.length) {\n    return null;\n  } else {\n    return some(array$$98[index$$6]);\n  }\n}\nexport function foldBackIndexed(folder$$6, array$$99, state$$10) {\n  return array$$99.reduceRight(function (delegateArg0$$3, delegateArg1$$3, delegateArg2$$1) {\n    return folder$$6(delegateArg2$$1, delegateArg1$$3, delegateArg0$$3);\n  }, state$$10);\n}\nexport function foldBack(folder$$8, array$$101, state$$12) {\n  return array$$101.reduceRight(function (delegateArg0$$4, delegateArg1$$4) {\n    return folder$$8(delegateArg1$$4, delegateArg0$$4);\n  }, state$$12);\n}\nexport function foldIndexed2(folder$$10, state$$14, array1$$8, array2$$8) {\n  let acc$$6 = state$$14;\n\n  if (array1$$8.length !== array2$$8.length) {\n    throw new Error(\"Arrays have different lengths\");\n  }\n\n  for (let i$$45 = 0; i$$45 <= array1$$8.length - 1; i$$45++) {\n    acc$$6 = folder$$10(i$$45, acc$$6, array1$$8[i$$45], array2$$8[i$$45]);\n  }\n\n  return acc$$6;\n}\nexport function fold2(folder$$11, state$$15, array1$$9, array2$$9) {\n  return foldIndexed2(function (_arg1, acc$$7, x$$20, y$$7) {\n    return folder$$11(acc$$7, x$$20, y$$7);\n  }, state$$15, array1$$9, array2$$9);\n}\nexport function foldBackIndexed2(folder$$12, array1$$10, array2$$10, state$$16) {\n  let acc$$8 = state$$16;\n\n  if (array1$$10.length !== array2$$10.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const size$$1 = array1$$10.length | 0;\n\n  for (let i$$46 = 1; i$$46 <= size$$1; i$$46++) {\n    acc$$8 = folder$$12(i$$46 - 1, array1$$10[size$$1 - i$$46], array2$$10[size$$1 - i$$46], acc$$8);\n  }\n\n  return acc$$8;\n}\nexport function foldBack2(f$$9, array1$$11, array2$$11, state$$17) {\n  return foldBackIndexed2(function (_arg1$$1, x$$21, y$$8, acc$$9) {\n    return f$$9(x$$21, y$$8, acc$$9);\n  }, array1$$11, array2$$11, state$$17);\n}\nexport function reduce(reduction, array$$103) {\n  if (array$$103.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$103.reduce(reduction);\n}\nexport function reduceBack(reduction$$2, array$$105) {\n  if (array$$105.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$105.reduceRight(reduction$$2);\n}\nexport function forAll2(predicate$$27, array1$$12, array2$$12) {\n  return fold2(function (acc$$10, x$$22, y$$9) {\n    return acc$$10 ? predicate$$27(x$$22, y$$9) : false;\n  }, true, array1$$12, array2$$12);\n}\nexport function existsOffset($arg$$178, $arg$$179, $arg$$180) {\n  existsOffset: while (true) {\n    const predicate$$28 = $arg$$178,\n          array$$107 = $arg$$179,\n          index$$7 = $arg$$180;\n\n    if (index$$7 === array$$107.length) {\n      return false;\n    } else if (predicate$$28(array$$107[index$$7])) {\n      return true;\n    } else {\n      $arg$$178 = predicate$$28;\n      $arg$$179 = array$$107;\n      $arg$$180 = index$$7 + 1;\n      continue existsOffset;\n    }\n\n    break;\n  }\n}\nexport function exists(predicate$$29, array$$108) {\n  return existsOffset(predicate$$29, array$$108, 0);\n}\nexport function existsOffset2($arg$$183, $arg$$184, $arg$$185, $arg$$186) {\n  existsOffset2: while (true) {\n    const predicate$$30 = $arg$$183,\n          array1$$13 = $arg$$184,\n          array2$$13 = $arg$$185,\n          index$$8 = $arg$$186;\n\n    if (index$$8 === array1$$13.length) {\n      return false;\n    } else if (predicate$$30(array1$$13[index$$8], array2$$13[index$$8])) {\n      return true;\n    } else {\n      $arg$$183 = predicate$$30;\n      $arg$$184 = array1$$13;\n      $arg$$185 = array2$$13;\n      $arg$$186 = index$$8 + 1;\n      continue existsOffset2;\n    }\n\n    break;\n  }\n}\nexport function exists2(predicate$$31, array1$$14, array2$$14) {\n  if (array1$$14.length !== array2$$14.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  return existsOffset2(predicate$$31, array1$$14, array2$$14, 0);\n}\nexport function sum(array$$109, adder) {\n  let acc$$11 = adder.GetZero();\n\n  for (let i$$47 = 0; i$$47 <= array$$109.length - 1; i$$47++) {\n    acc$$11 = adder.Add(acc$$11, array$$109[i$$47]);\n  }\n\n  return acc$$11;\n}\nexport function sumBy(projection$$6, array$$110, adder$$1) {\n  let acc$$12 = adder$$1.GetZero();\n\n  for (let i$$48 = 0; i$$48 <= array$$110.length - 1; i$$48++) {\n    acc$$12 = adder$$1.Add(acc$$12, projection$$6(array$$110[i$$48]));\n  }\n\n  return acc$$12;\n}\nexport function maxBy(projection$$7, xs$$12, comparer$$14) {\n  return reduce(function (x$$23, y$$10) {\n    return comparer$$14.Compare(projection$$7(y$$10), projection$$7(x$$23)) > 0 ? y$$10 : x$$23;\n  }, xs$$12);\n}\nexport function max(xs$$13, comparer$$15) {\n  return reduce(function (x$$24, y$$11) {\n    return comparer$$15.Compare(y$$11, x$$24) > 0 ? y$$11 : x$$24;\n  }, xs$$13);\n}\nexport function minBy(projection$$8, xs$$14, comparer$$16) {\n  return reduce(function (x$$25, y$$12) {\n    return comparer$$16.Compare(projection$$8(y$$12), projection$$8(x$$25)) > 0 ? x$$25 : y$$12;\n  }, xs$$14);\n}\nexport function min(xs$$15, comparer$$17) {\n  return reduce(function (x$$26, y$$13) {\n    return comparer$$17.Compare(y$$13, x$$26) > 0 ? x$$26 : y$$13;\n  }, xs$$15);\n}\nexport function average(array$$111, averager) {\n  if (array$$111.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  let total = averager.GetZero();\n\n  for (let i$$49 = 0; i$$49 <= array$$111.length - 1; i$$49++) {\n    total = averager.Add(total, array$$111[i$$49]);\n  }\n\n  return averager.DivideByInt(total, array$$111.length);\n}\nexport function averageBy(projection$$9, array$$112, averager$$1) {\n  if (array$$112.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  let total$$1 = averager$$1.GetZero();\n\n  for (let i$$50 = 0; i$$50 <= array$$112.length - 1; i$$50++) {\n    total$$1 = averager$$1.Add(total$$1, projection$$9(array$$112[i$$50]));\n  }\n\n  return averager$$1.DivideByInt(total$$1, array$$112.length);\n}\nexport function ofSeq(source$$8, cons$$31) {\n  return cons$$31.from(source$$8);\n}\nexport function ofList(source$$9, cons$$32) {\n  return cons$$32.from(source$$9);\n}\nexport function toList(source$$10) {\n  const len$$20 = source$$10.length | 0;\n  let target$$7 = new List();\n\n  for (let i$$51 = len$$20 - 1; i$$51 >= 0; i$$51--) {\n    target$$7 = new List(source$$10[i$$51], target$$7);\n  }\n\n  return target$$7;\n}\nexport function windowed(windowSize, source$$11) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  const res$$10 = new Array(max$$1(comparePrimitives, 0, source$$11.length - windowSize));\n\n  for (let i$$52 = windowSize; i$$52 <= source$$11.length; i$$52++) {\n    res$$10[i$$52 - windowSize] = source$$11.slice(i$$52 - windowSize, i$$52 - 1 + 1);\n  }\n\n  return res$$10;\n}","import { defaultArg, value as value$$1, some } from \"./Option.js\";\nimport { FSharpRef, List } from \"./Types.js\";\nimport { iterate as iterate$$1, collect as collect$$1, scanBack as scanBack$$1, scan as scan$$1, foldBack2 as foldBack2$$1, fold2 as fold2$$1, fold as fold$$1, map as map$$1 } from \"./Seq.js\";\nimport { partialApply, getItemFromDict, addToDict, tryGetValue, addToSet, comparerFromEqualityComparer, count } from \"./Util.js\";\nimport { ofList } from \"./Array.js\";\nimport { permute as permute$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1 } from \"./Array\";\nimport { createMutable } from \"./Set.js\";\nimport { createMutable as createMutable$$1 } from \"./Map.js\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    const x = _arg1.head;\n    return x;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    const x$$1 = _arg1$$1.head;\n    return some(x$$1);\n  } else {\n    return null;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    const xs = _arg1$$2.tail;\n    return xs;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last(_arg1$$3) {\n  last: while (true) {\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        const $_arg1$$3$$2 = _arg1$$3;\n        _arg1$$3 = $_arg1$$3$$2.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n\n    break;\n  }\n}\nexport function tryLast(_arg1$$4) {\n  tryLast: while (true) {\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        const $_arg1$$4$$3 = _arg1$$4;\n        _arg1$$4 = $_arg1$$4$$3.tail;\n        continue tryLast;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    const loop = function loop(xs$$4, ys$$1) {\n      loop: while (true) {\n        const matchValue = [xs$$4, ys$$1];\n\n        if (matchValue[0].tail != null) {\n          if (matchValue[1].tail != null) {\n            const matchValue$$1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n\n            if (matchValue$$1 === 0) {\n              xs$$4 = matchValue[0].tail;\n              ys$$1 = matchValue[1].tail;\n              continue loop;\n            } else {\n              const res = matchValue$$1 | 0;\n              return res | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (matchValue[1].tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n\n        break;\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function foldIndexedAux($arg$$7, $arg$$8, $arg$$9, $arg$$10) {\n  foldIndexedAux: while (true) {\n    const f = $arg$$7,\n          i = $arg$$8,\n          acc = $arg$$9,\n          _arg1$$5 = $arg$$10;\n\n    if (_arg1$$5.tail != null) {\n      const xs$$6 = _arg1$$5.tail;\n      const x$$5 = _arg1$$5.head;\n      $arg$$7 = f;\n      $arg$$8 = i + 1;\n      $arg$$9 = f(i, acc, x$$5);\n      $arg$$10 = xs$$6;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n\n    break;\n  }\n}\nexport function foldIndexed(f$$1, state, xs$$7) {\n  return foldIndexedAux(f$$1, 0, state, xs$$7);\n}\nexport function fold($arg$$14, $arg$$15, $arg$$16) {\n  fold: while (true) {\n    const f$$2 = $arg$$14,\n          state$$1 = $arg$$15,\n          xs$$8 = $arg$$16;\n\n    if (xs$$8.tail != null) {\n      const t = xs$$8.tail;\n      const h = xs$$8.head;\n      $arg$$14 = f$$2;\n      $arg$$15 = f$$2(state$$1, h);\n      $arg$$16 = t;\n      continue fold;\n    } else {\n      return state$$1;\n    }\n\n    break;\n  }\n}\nexport function reverse(xs$$9) {\n  return fold(function (acc$$1, x$$6) {\n    return new List(x$$6, acc$$1);\n  }, new List(), xs$$9);\n}\nexport function foldBack(f$$3, xs$$10, state$$2) {\n  return fold(function (acc$$2, x$$7) {\n    return f$$3(x$$7, acc$$2);\n  }, state$$2, reverse(xs$$10));\n}\nexport function toSeq(xs$$11) {\n  return map$$1(function (x$$8) {\n    return x$$8;\n  }, xs$$11);\n}\nexport function ofSeq(xs$$12) {\n  return reverse(fold$$1(function (acc$$3, x$$9) {\n    return new List(x$$9, acc$$3);\n  }, new List(), xs$$12));\n}\nexport function concat(lists) {\n  return reverse(fold$$1(function (state$$3, xs$$14) {\n    return fold(function f$$4(acc$$4, x$$10) {\n      return new List(x$$10, acc$$4);\n    }, state$$3, xs$$14);\n  }, new List(), lists));\n}\nexport function foldIndexed2Aux($arg$$20, $arg$$21, $arg$$22, $arg$$23, $arg$$24) {\n  foldIndexed2Aux: while (true) {\n    const f$$5 = $arg$$20,\n          i$$1 = $arg$$21,\n          acc$$5 = $arg$$22,\n          bs = $arg$$23,\n          cs = $arg$$24;\n    const matchValue$$2 = [bs, cs];\n    var $target$$25, x$$11, xs$$16, y$$1, ys$$3;\n\n    if (matchValue$$2[0].tail != null) {\n      if (matchValue$$2[1].tail != null) {\n        $target$$25 = 1;\n        x$$11 = matchValue$$2[0].head;\n        xs$$16 = matchValue$$2[0].tail;\n        y$$1 = matchValue$$2[1].head;\n        ys$$3 = matchValue$$2[1].tail;\n      } else {\n        $target$$25 = 2;\n      }\n    } else if (matchValue$$2[1].tail == null) {\n      $target$$25 = 0;\n    } else {\n      $target$$25 = 2;\n    }\n\n    switch ($target$$25) {\n      case 0:\n        {\n          return acc$$5;\n        }\n\n      case 1:\n        {\n          $arg$$20 = f$$5;\n          $arg$$21 = i$$1 + 1;\n          $arg$$22 = f$$5(i$$1, acc$$5, x$$11, y$$1);\n          $arg$$23 = xs$$16;\n          $arg$$24 = ys$$3;\n          continue foldIndexed2Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed2(f$$6, state$$4, xs$$17, ys$$4) {\n  return foldIndexed2Aux(f$$6, 0, state$$4, xs$$17, ys$$4);\n}\nexport function fold2(f$$7, state$$5, xs$$18, ys$$5) {\n  return fold2$$1(f$$7, state$$5, xs$$18, ys$$5);\n}\nexport function foldBack2(f$$8, xs$$19, ys$$6, state$$6) {\n  return foldBack2$$1(f$$8, xs$$19, ys$$6, state$$6);\n}\nexport function unfold(f$$9, state$$7) {\n  const unfoldInner = function unfoldInner(acc$$6, state$$8) {\n    unfoldInner: while (true) {\n      const matchValue$$3 = f$$9(state$$8);\n\n      if (matchValue$$3 != null) {\n        const x$$12 = matchValue$$3[0];\n        const state$$9 = matchValue$$3[1];\n        const $acc$$6$$40 = acc$$6;\n        acc$$6 = new List(x$$12, $acc$$6$$40);\n        state$$8 = state$$9;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$6);\n      }\n\n      break;\n    }\n  };\n\n  return unfoldInner(new List(), state$$7);\n}\nexport function foldIndexed3Aux($arg$$41, $arg$$42, $arg$$43, $arg$$44, $arg$$45, $arg$$46) {\n  foldIndexed3Aux: while (true) {\n    const f$$10 = $arg$$41,\n          i$$2 = $arg$$42,\n          acc$$7 = $arg$$43,\n          bs$$1 = $arg$$44,\n          cs$$1 = $arg$$45,\n          ds = $arg$$46;\n    const matchValue$$4 = [bs$$1, cs$$1, ds];\n    var $target$$47, x$$13, xs$$20, y$$2, ys$$7, z, zs;\n\n    if (matchValue$$4[0].tail != null) {\n      if (matchValue$$4[1].tail != null) {\n        if (matchValue$$4[2].tail != null) {\n          $target$$47 = 1;\n          x$$13 = matchValue$$4[0].head;\n          xs$$20 = matchValue$$4[0].tail;\n          y$$2 = matchValue$$4[1].head;\n          ys$$7 = matchValue$$4[1].tail;\n          z = matchValue$$4[2].head;\n          zs = matchValue$$4[2].tail;\n        } else {\n          $target$$47 = 2;\n        }\n      } else {\n        $target$$47 = 2;\n      }\n    } else if (matchValue$$4[1].tail == null) {\n      if (matchValue$$4[2].tail == null) {\n        $target$$47 = 0;\n      } else {\n        $target$$47 = 2;\n      }\n    } else {\n      $target$$47 = 2;\n    }\n\n    switch ($target$$47) {\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      case 1:\n        {\n          $arg$$41 = f$$10;\n          $arg$$42 = i$$2 + 1;\n          $arg$$43 = f$$10(i$$2, acc$$7, x$$13, y$$2, z);\n          $arg$$44 = xs$$20;\n          $arg$$45 = ys$$7;\n          $arg$$46 = zs;\n          continue foldIndexed3Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed3(f$$11, seed, xs$$21, ys$$8, zs$$1) {\n  return foldIndexed3Aux(f$$11, 0, seed, xs$$21, ys$$8, zs$$1);\n}\nexport function fold3(f$$12, state$$10, xs$$22, ys$$9, zs$$2) {\n  return foldIndexed3(function (_arg1$$6, acc$$8, x$$14, y$$3, z$$1) {\n    return f$$12(acc$$8, x$$14, y$$3, z$$1);\n  }, state$$10, xs$$22, ys$$9, zs$$2);\n}\nexport function scan(f$$13, state$$11, xs$$23) {\n  return ofSeq(scan$$1(f$$13, state$$11, xs$$23));\n}\nexport function scanBack(f$$14, xs$$25, state$$12) {\n  return ofSeq(scanBack$$1(f$$14, xs$$25, state$$12));\n}\nexport function length(xs$$27) {\n  return fold(function (acc$$9, _arg1$$7) {\n    return acc$$9 + 1;\n  }, 0, xs$$27);\n}\nexport function append(xs$$28, ys$$10) {\n  return fold(function (acc$$10, x$$15) {\n    return new List(x$$15, acc$$10);\n  }, ys$$10, reverse(xs$$28));\n}\nexport function collect(f$$15, xs$$29) {\n  return ofSeq(collect$$1(f$$15, xs$$29));\n}\nexport function map(f$$16, xs$$31) {\n  return reverse(fold(function (acc$$11, x$$16) {\n    return new List(f$$16(x$$16), acc$$11);\n  }, new List(), xs$$31));\n}\nexport function mapIndexed(f$$17, xs$$33) {\n  return reverse(foldIndexed(function (i$$3, acc$$12, x$$17) {\n    return new List(f$$17(i$$3, x$$17), acc$$12);\n  }, new List(), xs$$33));\n}\nexport function indexed(xs$$35) {\n  return mapIndexed(function (i$$4, x$$18) {\n    return [i$$4, x$$18];\n  }, xs$$35);\n}\nexport function map2(f$$18, xs$$36, ys$$11) {\n  return reverse(fold2(function (acc$$13, x$$19, y$$4) {\n    return new List(f$$18(x$$19, y$$4), acc$$13);\n  }, new List(), xs$$36, ys$$11));\n}\nexport function mapIndexed2(f$$19, xs$$38, ys$$12) {\n  return reverse(foldIndexed2(function (i$$5, acc$$14, x$$20, y$$5) {\n    return new List(f$$19(i$$5, x$$20, y$$5), acc$$14);\n  }, new List(), xs$$38, ys$$12));\n}\nexport function map3(f$$20, xs$$40, ys$$13, zs$$3) {\n  return reverse(fold3(function (acc$$15, x$$21, y$$6, z$$2) {\n    return new List(f$$20(x$$21, y$$6, z$$2), acc$$15);\n  }, new List(), xs$$40, ys$$13, zs$$3));\n}\nexport function mapIndexed3(f$$21, xs$$42, ys$$14, zs$$4) {\n  return reverse(foldIndexed3(function (i$$6, acc$$16, x$$22, y$$7, z$$3) {\n    return new List(f$$21(i$$6, x$$22, y$$7, z$$3), acc$$16);\n  }, new List(), xs$$42, ys$$14, zs$$4));\n}\nexport function mapFold(f$$22, s, xs$$44) {\n  const foldFn = function foldFn(tupledArg, x$$23) {\n    const patternInput = f$$22(tupledArg[1], x$$23);\n    return [new List(patternInput[0], tupledArg[0]), patternInput[1]];\n  };\n\n  const patternInput$$1 = fold(foldFn, [new List(), s], xs$$44);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$23, xs$$45, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$23(v, s$$3);\n  }, s$$2, reverse(xs$$45));\n}\nexport function iterate(f$$24, xs$$46) {\n  fold(function (unitVar0, x$$24) {\n    f$$24(x$$24);\n  }, null, xs$$46);\n}\nexport function iterate2(f$$25, xs$$47, ys$$15) {\n  fold2(function (unitVar0$$1, x$$25, y$$8) {\n    f$$25(x$$25, y$$8);\n  }, null, xs$$47, ys$$15);\n}\nexport function iterateIndexed(f$$26, xs$$48) {\n  foldIndexed(function (i$$7, unitVar1, x$$26) {\n    f$$26(i$$7, x$$26);\n  }, null, xs$$48);\n}\nexport function iterateIndexed2(f$$27, xs$$49, ys$$16) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$27, y$$9) {\n    f$$27(i$$8, x$$27, y$$9);\n  }, null, xs$$49, ys$$16);\n}\nexport function ofArray(xs$$50) {\n  let res$$1 = new List();\n\n  for (let i$$9 = count(xs$$50) - 1; i$$9 >= 0; i$$9--) {\n    res$$1 = new List(xs$$50[i$$9], res$$1);\n  }\n\n  return res$$1;\n}\nexport function empty() {\n  return new List();\n}\nexport function isEmpty(_arg1$$8) {\n  if (_arg1$$8.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($arg$$100, $arg$$101, $arg$$102) {\n  tryPickIndexedAux: while (true) {\n    const f$$28 = $arg$$100,\n          i$$10 = $arg$$101,\n          _arg1$$9 = $arg$$102;\n\n    if (_arg1$$9.tail != null) {\n      const xs$$51 = _arg1$$9.tail;\n      const x$$28 = _arg1$$9.head;\n      const result = f$$28(i$$10, x$$28);\n\n      if (result == null) {\n        $arg$$100 = f$$28;\n        $arg$$101 = i$$10 + 1;\n        $arg$$102 = xs$$51;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function tryPickIndexed(f$$29, xs$$52) {\n  return tryPickIndexedAux(f$$29, 0, xs$$52);\n}\nexport function tryPick(f$$30, xs$$53) {\n  return tryPickIndexed(function (_arg1$$10, x$$29) {\n    return f$$30(x$$29);\n  }, xs$$53);\n}\nexport function pick(f$$31, xs$$54) {\n  const matchValue$$5 = tryPick(f$$31, xs$$54);\n\n  if (matchValue$$5 != null) {\n    const x$$30 = value$$1(matchValue$$5);\n    return x$$30;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$32, xs$$55) {\n  return tryPickIndexed(function (i$$11, x$$31) {\n    return f$$32(i$$11, x$$31) ? some(x$$31) : null;\n  }, xs$$55);\n}\nexport function tryFind(f$$33, xs$$56) {\n  return tryPickIndexed(function (_arg1$$11, x$$32) {\n    return f$$33(x$$32) ? some(x$$32) : null;\n  }, xs$$56);\n}\nexport function findIndexed(f$$34, xs$$57) {\n  const matchValue$$6 = tryFindIndexed(f$$34, xs$$57);\n\n  if (matchValue$$6 != null) {\n    const x$$33 = value$$1(matchValue$$6);\n    return x$$33;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$35, xs$$58) {\n  return findIndexed(function (_arg1$$12, x$$34) {\n    return f$$35(x$$34);\n  }, xs$$58);\n}\nexport function findBack(f$$36, xs$$59) {\n  return find(f$$36, reverse(xs$$59));\n}\nexport function tryFindBack(f$$37, xs$$62) {\n  return tryFind(f$$37, reverse(xs$$62));\n}\nexport function tryFindIndex(f$$38, xs$$65) {\n  return tryPickIndexed(function (i$$12, x$$35) {\n    return f$$38(x$$35) ? i$$12 : null;\n  }, xs$$65);\n}\nexport function tryFindIndexBack(f$$39, xs$$66) {\n  return tryFindIndexBack$$1(f$$39, ofList(xs$$66, Array));\n}\nexport function findIndex(f$$40, xs$$67) {\n  const matchValue$$7 = tryFindIndex(f$$40, xs$$67);\n\n  if (matchValue$$7 != null) {\n    const x$$36 = matchValue$$7 | 0;\n    return x$$36 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$41, xs$$68) {\n  return findIndexBack$$1(f$$41, ofList(xs$$68, Array));\n}\nexport function item(n, xs$$69) {\n  return findIndexed(function (i$$13, _arg1$$13) {\n    return n === i$$13;\n  }, xs$$69);\n}\nexport function tryItem(n$$1, xs$$70) {\n  return tryFindIndexed(function (i$$14, _arg1$$14) {\n    return n$$1 === i$$14;\n  }, xs$$70);\n}\nexport function filter(f$$42, xs$$71) {\n  return reverse(fold(function (acc$$17, x$$37) {\n    return f$$42(x$$37) ? new List(x$$37, acc$$17) : acc$$17;\n  }, new List(), xs$$71));\n}\nexport function partition(f$$43, xs$$73) {\n  return fold(function (tupledArg$$1, x$$38) {\n    return f$$43(x$$38) ? [new List(x$$38, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], new List(x$$38, tupledArg$$1[1])];\n  }, [new List(), new List()], reverse(xs$$73));\n}\nexport function choose(f$$44, xs$$74) {\n  return reverse(fold(function (acc$$18, x$$39) {\n    const matchValue$$8 = f$$44(x$$39);\n\n    if (matchValue$$8 == null) {\n      return acc$$18;\n    } else {\n      const y$$10 = value$$1(matchValue$$8);\n      return new List(y$$10, acc$$18);\n    }\n  }, new List(), xs$$74));\n}\nexport function contains(value, list, eq) {\n  const loop$$1 = function loop$$1(xs$$76) {\n    loop$$1: while (true) {\n      if (xs$$76.tail != null) {\n        const v$$1 = xs$$76.head;\n        const rest = xs$$76.tail;\n\n        if (eq.Equals(value, v$$1)) {\n          return true;\n        } else {\n          xs$$76 = rest;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    const cached = createMutable(itemsToExclude, comparerFromEqualityComparer(eq$$1));\n    return filter(function f$$45(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$46) {\n  let xs$$78 = new List();\n\n  for (let i$$15 = 1; i$$15 <= n$$2; i$$15++) {\n    xs$$78 = new List(f$$46(n$$2 - i$$15), xs$$78);\n  }\n\n  return xs$$78;\n}\nexport function replicate(n$$3, x$$40) {\n  return initialize(n$$3, function (_arg1$$15) {\n    return x$$40;\n  });\n}\nexport function reduce(f$$47, _arg1$$16) {\n  if (_arg1$$16.tail != null) {\n    const t$$1 = _arg1$$16.tail;\n    const h$$1 = _arg1$$16.head;\n    return fold(f$$47, h$$1, t$$1);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$48, _arg1$$17) {\n  if (_arg1$$17.tail != null) {\n    const t$$2 = _arg1$$17.tail;\n    const h$$2 = _arg1$$17.head;\n    return foldBack(f$$48, t$$2, h$$2);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$49, xs$$79) {\n  return fold(function (acc$$19, x$$41) {\n    return acc$$19 ? f$$49(x$$41) : false;\n  }, true, xs$$79);\n}\nexport function forAll2(f$$50, xs$$80, ys$$17) {\n  return fold2(function (acc$$20, x$$42, y$$11) {\n    return acc$$20 ? f$$50(x$$42, y$$11) : false;\n  }, true, xs$$80, ys$$17);\n}\nexport function exists($arg$$146, $arg$$147) {\n  exists: while (true) {\n    const f$$51 = $arg$$146,\n          _arg1$$18 = $arg$$147;\n\n    if (_arg1$$18.tail != null) {\n      const xs$$81 = _arg1$$18.tail;\n      const x$$43 = _arg1$$18.head;\n\n      if (f$$51(x$$43)) {\n        return true;\n      } else {\n        $arg$$146 = f$$51;\n        $arg$$147 = xs$$81;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n\n    break;\n  }\n}\nexport function exists2($arg$$148, $arg$$149, $arg$$150) {\n  exists2: while (true) {\n    const f$$52 = $arg$$148,\n          bs$$2 = $arg$$149,\n          cs$$2 = $arg$$150;\n    const matchValue$$9 = [bs$$2, cs$$2];\n    var $target$$151, x$$44, xs$$82, y$$12, ys$$18;\n\n    if (matchValue$$9[0].tail != null) {\n      if (matchValue$$9[1].tail != null) {\n        $target$$151 = 1;\n        x$$44 = matchValue$$9[0].head;\n        xs$$82 = matchValue$$9[0].tail;\n        y$$12 = matchValue$$9[1].head;\n        ys$$18 = matchValue$$9[1].tail;\n      } else {\n        $target$$151 = 2;\n      }\n    } else if (matchValue$$9[1].tail == null) {\n      $target$$151 = 0;\n    } else {\n      $target$$151 = 2;\n    }\n\n    switch ($target$$151) {\n      case 0:\n        {\n          return false;\n        }\n\n      case 1:\n        {\n          if (f$$52(x$$44, y$$12)) {\n            return true;\n          } else {\n            $arg$$148 = f$$52;\n            $arg$$149 = xs$$82;\n            $arg$$150 = ys$$18;\n            continue exists2;\n          }\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function unzip(xs$$83) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [new List(tupledArg$$2[0], tupledArg$$3[0]), new List(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$83, [new List(), new List()]);\n}\nexport function unzip3(xs$$84) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [new List(tupledArg$$4[0], tupledArg$$5[0]), new List(tupledArg$$4[1], tupledArg$$5[1]), new List(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$84, [new List(), new List(), new List()]);\n}\nexport function zip(xs$$85, ys$$19) {\n  return map2(function (x$$47, y$$15) {\n    return [x$$47, y$$15];\n  }, xs$$85, ys$$19);\n}\nexport function zip3(xs$$86, ys$$20, zs$$5) {\n  return map3(function (x$$48, y$$16, z$$5) {\n    return [x$$48, y$$16, z$$5];\n  }, xs$$86, ys$$20, zs$$5);\n}\nexport function sort(xs$$87, comparer$$1) {\n  var xs$$88;\n  return ofArray((xs$$88 = ofList(xs$$87, Array), (xs$$88.sort(function (x$$49, y$$17) {\n    return comparer$$1.Compare(x$$49, y$$17);\n  }), xs$$88)));\n}\nexport function sortBy(projection, xs$$90, comparer$$3) {\n  var xs$$91;\n  return ofArray((xs$$91 = ofList(xs$$90, Array), (xs$$91.sort(function (x$$50, y$$18) {\n    return comparer$$3.Compare(projection(x$$50), projection(y$$18));\n  }), xs$$91)));\n}\nexport function sortDescending(xs$$93, comparer$$5) {\n  var xs$$94;\n  return ofArray((xs$$94 = ofList(xs$$93, Array), (xs$$94.sort(function (x$$51, y$$19) {\n    return comparer$$5.Compare(x$$51, y$$19) * -1;\n  }), xs$$94)));\n}\nexport function sortByDescending(projection$$1, xs$$96, comparer$$7) {\n  var xs$$97;\n  return ofArray((xs$$97 = ofList(xs$$96, Array), (xs$$97.sort(function (x$$52, y$$20) {\n    return comparer$$7.Compare(projection$$1(x$$52), projection$$1(y$$20)) * -1;\n  }), xs$$97)));\n}\nexport function sortWith(comparer$$9, xs$$99) {\n  var xs$$100;\n  return ofArray((xs$$100 = ofList(xs$$99, Array), (xs$$100.sort(comparer$$9), xs$$100)));\n}\nexport function sum(xs$$102, adder) {\n  return fold(function (acc$$21, x$$53) {\n    return adder.Add(acc$$21, x$$53);\n  }, adder.GetZero(), xs$$102);\n}\nexport function sumBy(f$$53, xs$$103, adder$$1) {\n  return fold(function (acc$$22, x$$54) {\n    return adder$$1.Add(acc$$22, f$$53(x$$54));\n  }, adder$$1.GetZero(), xs$$103);\n}\nexport function maxBy(projection$$2, xs$$104, comparer$$11) {\n  return reduce(function (x$$55, y$$21) {\n    return comparer$$11.Compare(projection$$2(y$$21), projection$$2(x$$55)) > 0 ? y$$21 : x$$55;\n  }, xs$$104);\n}\nexport function max(li, comparer$$12) {\n  return reduce(function (x$$56, y$$22) {\n    return comparer$$12.Compare(y$$22, x$$56) > 0 ? y$$22 : x$$56;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$105, comparer$$13) {\n  return reduce(function (x$$57, y$$23) {\n    return comparer$$13.Compare(projection$$3(y$$23), projection$$3(x$$57)) > 0 ? x$$57 : y$$23;\n  }, xs$$105);\n}\nexport function min(xs$$106, comparer$$14) {\n  return reduce(function (x$$58, y$$24) {\n    return comparer$$14.Compare(y$$24, x$$58) > 0 ? x$$58 : y$$24;\n  }, xs$$106);\n}\nexport function average(xs$$107, averager) {\n  const total = fold(function (acc$$23, x$$59) {\n    return averager.Add(acc$$23, x$$59);\n  }, averager.GetZero(), xs$$107);\n  return averager.DivideByInt(total, length(xs$$107));\n}\nexport function averageBy(f$$54, xs$$108, averager$$1) {\n  const total$$1 = fold(function (acc$$24, x$$60) {\n    return averager$$1.Add(acc$$24, f$$54(x$$60));\n  }, averager$$1.GetZero(), xs$$108);\n  return averager$$1.DivideByInt(total$$1, length(xs$$108));\n}\nexport function permute(f$$55, xs$$109) {\n  return ofArray(permute$$1(f$$55, ofList(xs$$109, Array)));\n}\nexport function skip(i$$16, xs$$111) {\n  const skipInner = function skipInner(i$$17, xs$$112) {\n    skipInner: while (true) {\n      const matchValue$$10 = [i$$17, xs$$112];\n\n      if (matchValue$$10[0] === 0) {\n        return xs$$112;\n      } else if (matchValue$$10[1].tail != null) {\n        const xs$$113 = matchValue$$10[1].tail;\n        const $i$$17$$174 = i$$17;\n        i$$17 = $i$$17$$174 - 1;\n        xs$$112 = xs$$113;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n\n      break;\n    }\n  };\n\n  const matchValue$$11 = [i$$16, xs$$111];\n\n  if (matchValue$$11[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$175, i$$20, xs$$115;\n\n    if (matchValue$$11[0] === 0) {\n      $target$$175 = 0;\n    } else if (matchValue$$11[0] === 1) {\n      if (matchValue$$11[1].tail != null) {\n        $target$$175 = 1;\n      } else {\n        $target$$175 = 2;\n        i$$20 = matchValue$$11[0];\n        xs$$115 = matchValue$$11[1];\n      }\n    } else {\n      $target$$175 = 2;\n      i$$20 = matchValue$$11[0];\n      xs$$115 = matchValue$$11[1];\n    }\n\n    switch ($target$$175) {\n      case 0:\n        {\n          return xs$$111;\n        }\n\n      case 1:\n        {\n          const xs$$114 = matchValue$$11[1].tail;\n          return xs$$114;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$20, xs$$115);\n        }\n    }\n  }\n}\nexport function skipWhile($arg$$176, $arg$$177) {\n  var t$$3, h$$3;\n\n  skipWhile: while (true) {\n    const predicate = $arg$$176,\n          xs$$116 = $arg$$177;\n    var $target$$178, h$$4, t$$4;\n\n    if (xs$$116.tail != null) {\n      if (t$$3 = xs$$116.tail, (h$$3 = xs$$116.head, predicate(h$$3))) {\n        $target$$178 = 0;\n        h$$4 = xs$$116.head;\n        t$$4 = xs$$116.tail;\n      } else {\n        $target$$178 = 1;\n      }\n    } else {\n      $target$$178 = 1;\n    }\n\n    switch ($target$$178) {\n      case 0:\n        {\n          $arg$$176 = predicate;\n          $arg$$177 = t$$4;\n          continue skipWhile;\n        }\n\n      case 1:\n        {\n          return xs$$116;\n        }\n    }\n\n    break;\n  }\n}\nexport function takeSplitAux(error, i$$21, acc$$25, xs$$117) {\n  takeSplitAux: while (true) {\n    const matchValue$$12 = [i$$21, xs$$117];\n\n    if (matchValue$$12[0] === 0) {\n      return [reverse(acc$$25), xs$$117];\n    } else if (matchValue$$12[1].tail != null) {\n      const xs$$118 = matchValue$$12[1].tail;\n      const x$$61 = matchValue$$12[1].head;\n      const $acc$$25$$181 = acc$$25;\n      const $error$$179 = error;\n      const $i$$21$$180 = i$$21;\n      error = $error$$179;\n      i$$21 = $i$$21$$180 - 1;\n      acc$$25 = new List(x$$61, $acc$$25$$181);\n      xs$$117 = xs$$118;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$25), xs$$117];\n      }\n    }\n\n    break;\n  }\n}\nexport function take(i$$22, xs$$119) {\n  const matchValue$$13 = [i$$22, xs$$119];\n\n  if (matchValue$$13[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$182, i$$25, xs$$120;\n\n    if (matchValue$$13[0] === 0) {\n      $target$$182 = 0;\n    } else if (matchValue$$13[0] === 1) {\n      if (matchValue$$13[1].tail != null) {\n        $target$$182 = 1;\n      } else {\n        $target$$182 = 2;\n        i$$25 = matchValue$$13[0];\n        xs$$120 = matchValue$$13[1];\n      }\n    } else {\n      $target$$182 = 2;\n      i$$25 = matchValue$$13[0];\n      xs$$120 = matchValue$$13[1];\n    }\n\n    switch ($target$$182) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          const x$$62 = matchValue$$13[1].head;\n          return new List(x$$62, new List());\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$25, new List(), xs$$120)[0];\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$121) {\n  if (xs$$121.tail != null) {\n    if (xs$$121.tail.tail == null) {\n      if (predicate$$1(xs$$121.head)) {\n        return xs$$121;\n      } else {\n        return xs$$121.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$121.head)) {\n        return new List();\n      } else {\n        return new List(xs$$121.head, takeWhile(predicate$$1, xs$$121.tail));\n      }\n    }\n  } else {\n    return xs$$121;\n  }\n}\nexport function truncate(i$$26, xs$$123) {\n  const matchValue$$14 = [i$$26, xs$$123];\n\n  if (matchValue$$14[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$185, i$$29, xs$$124;\n\n    if (matchValue$$14[0] === 0) {\n      $target$$185 = 0;\n    } else if (matchValue$$14[0] === 1) {\n      if (matchValue$$14[1].tail != null) {\n        $target$$185 = 1;\n      } else {\n        $target$$185 = 2;\n        i$$29 = matchValue$$14[0];\n        xs$$124 = matchValue$$14[1];\n      }\n    } else {\n      $target$$185 = 2;\n      i$$29 = matchValue$$14[0];\n      xs$$124 = matchValue$$14[1];\n    }\n\n    switch ($target$$185) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          const x$$65 = matchValue$$14[1].head;\n          return new List(x$$65, new List());\n        }\n\n      case 2:\n        {\n          return takeSplitAux(false, i$$29, new List(), xs$$124)[0];\n        }\n    }\n  }\n}\nexport function splitAt(i$$30, xs$$125) {\n  const matchValue$$15 = [i$$30, xs$$125];\n\n  if (matchValue$$15[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$186, i$$33, xs$$127;\n\n    if (matchValue$$15[0] === 0) {\n      $target$$186 = 0;\n    } else if (matchValue$$15[0] === 1) {\n      if (matchValue$$15[1].tail != null) {\n        $target$$186 = 1;\n      } else {\n        $target$$186 = 2;\n        i$$33 = matchValue$$15[0];\n        xs$$127 = matchValue$$15[1];\n      }\n    } else {\n      $target$$186 = 2;\n      i$$33 = matchValue$$15[0];\n      xs$$127 = matchValue$$15[1];\n    }\n\n    switch ($target$$186) {\n      case 0:\n        {\n          return [new List(), xs$$125];\n        }\n\n      case 1:\n        {\n          const xs$$126 = matchValue$$15[1].tail;\n          const x$$66 = matchValue$$15[1].head;\n          return [new List(x$$66, new List()), xs$$126];\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$33, new List(), xs$$127);\n        }\n    }\n  }\n}\nexport function outOfRange() {\n  throw new Error(\"Index out of range\");\n}\nexport function slice(lower, upper, xs$$128) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const hasUpper = upper != null;\n\n  if (lower$$1 < 0) {\n    return outOfRange();\n  } else if (hasUpper ? upper < lower$$1 : false) {\n    return new List();\n  } else {\n    let lastIndex = -1 | 0;\n    const res$$2 = foldIndexed(function f$$56(i$$34, acc$$26, x$$67) {\n      lastIndex = i$$34;\n\n      if (lower$$1 <= i$$34 ? !hasUpper ? true : i$$34 <= upper : false) {\n        return new List(x$$67, acc$$26);\n      } else {\n        return acc$$26;\n      }\n    }, new List(), xs$$128);\n\n    if (lower$$1 > lastIndex + 1 ? true : hasUpper ? upper > lastIndex : false) {\n      outOfRange();\n    }\n\n    return reverse(res$$2);\n  }\n}\nexport function distinctBy(projection$$4, xs$$130, eq$$2) {\n  const hashSet = createMutable([], comparerFromEqualityComparer(eq$$2));\n  return filter(function f$$57($arg$$1) {\n    return addToSet(projection$$4($arg$$1), hashSet);\n  }, xs$$130);\n}\nexport function distinct(xs$$132, eq$$3) {\n  return distinctBy(function (x$$68) {\n    return x$$68;\n  }, xs$$132, eq$$3);\n}\nexport function exactlyOne(xs$$133) {\n  if (xs$$133.tail != null) {\n    if (xs$$133.tail.tail != null) {\n      throw new Error(\"Input list too long\\\\nParameter name: list\");\n    } else {\n      return xs$$133.head;\n    }\n  } else {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: list\");\n  }\n}\nexport function groupBy(projection$$5, xs$$135, eq$$4) {\n  const dict = createMutable$$1([], comparerFromEqualityComparer(eq$$4));\n  const keys = [];\n  iterate$$1(function (v$$2) {\n    const key = projection$$5(v$$2);\n    const matchValue$$16 = tryGetValue(dict, key, null);\n\n    if (matchValue$$16[0]) {\n      dict.set(key, new List(v$$2, matchValue$$16[1]));\n    } else {\n      addToDict(dict, key, new List(v$$2, new List()));\n      keys.push(key);\n    }\n  }, xs$$135);\n  return ofSeq(map$$1(function mapping(key$$1) {\n    return [key$$1, reverse(getItemFromDict(dict, key$$1))];\n  }, keys));\n}\nexport function countBy(projection$$6, xs$$137, eq$$5) {\n  const dict$$1 = createMutable$$1([], comparerFromEqualityComparer(eq$$5));\n  iterate(function (v$$3) {\n    const key$$2 = projection$$6(v$$3);\n    const matchValue$$17 = tryGetValue(dict$$1, key$$2, null);\n\n    if (matchValue$$17[0]) {\n      matchValue$$17[1].contents = matchValue$$17[1].contents + 1;\n    } else {\n      dict$$1.set(key$$2, new FSharpRef(1));\n    }\n  }, xs$$137);\n  let result$$1 = new List();\n  iterate$$1(function (group) {\n    result$$1 = new List([group[0], group[1].contents], result$$1);\n  }, dict$$1);\n  return result$$1;\n}\nexport function where(predicate$$2, xs$$138) {\n  return filter(predicate$$2, xs$$138);\n}\nexport function pairwise(xs$$139) {\n  const inner = function inner(xs$$140, acc$$27, x1$$1) {\n    inner: while (true) {\n      if (xs$$140.tail != null) {\n        const xs$$141 = xs$$140.tail;\n        const x2$$1 = xs$$140.head;\n        acc$$27.push([x1$$1, x2$$1]);\n        const $acc$$27$$198 = acc$$27;\n        xs$$140 = xs$$141;\n        acc$$27 = $acc$$27$$198;\n        x1$$1 = x2$$1;\n        continue inner;\n      } else {\n        return ofArray(acc$$27);\n      }\n\n      break;\n    }\n  };\n\n  var $target$$199, x1$$2, x2$$2, xs$$142;\n\n  if (xs$$139.tail != null) {\n    if (xs$$139.tail.tail != null) {\n      $target$$199 = 1;\n      x1$$2 = xs$$139.head;\n      x2$$2 = xs$$139.tail.head;\n      xs$$142 = xs$$139.tail.tail;\n    } else {\n      $target$$199 = 0;\n    }\n  } else {\n    $target$$199 = 0;\n  }\n\n  switch ($target$$199) {\n    case 0:\n      {\n        return new List();\n      }\n\n    case 1:\n      {\n        const acc$$28 = [];\n        acc$$28.push([x1$$2, x2$$2]);\n        return function (arg00$$2) {\n          const clo1 = partialApply(2, inner, [arg00$$2]);\n          return function (arg10) {\n            const clo2 = clo1(arg10);\n            return function (arg20) {\n              return clo2(arg20);\n            };\n          };\n        }(xs$$142)(acc$$28)(x2$$2);\n      }\n  }\n}\nexport function windowed(windowSize, source$$1) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  let res$$3 = new List();\n\n  for (let i$$35 = length(source$$1); i$$35 >= windowSize; i$$35--) {\n    res$$3 = new List(slice(i$$35 - windowSize, i$$35 - 1, source$$1), res$$3);\n  }\n\n  return res$$3;\n}","module Fable.Helpers.React\n\nopen FSharp.Reflection\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Fable.Import\n\nmodule rec Props =\n    type IProp =\n        interface end\n\n    type IHTMLProp =\n        inherit IProp\n\n    type IFragmentProp =\n        inherit IProp\n\n    type FragmentProp =\n        | Key of string\n        interface IFragmentProp\n\n    type Prop =\n        | Key of string\n        | Ref of (Browser.Element->unit)\n        interface IHTMLProp\n\n    type DangerousHtml = {\n        __html: string\n    }\n\n    type DOMAttr =\n        | DangerouslySetInnerHTML of DangerousHtml\n        | OnCut of (React.ClipboardEvent -> unit)\n        | OnPaste of (React.ClipboardEvent -> unit)\n        | OnCompositionEnd of (React.CompositionEvent -> unit)\n        | OnCompositionStart of (React.CompositionEvent -> unit)\n        | OnCopy of (React.ClipboardEvent -> unit)\n        | OnCompositionUpdate of (React.CompositionEvent -> unit)\n        | OnFocus of (React.FocusEvent -> unit)\n        | OnBlur of (React.FocusEvent -> unit)\n        | OnChange of (React.FormEvent -> unit)\n        | OnInput of (React.FormEvent -> unit)\n        | OnSubmit of (React.FormEvent -> unit)\n        | OnReset of (React.FormEvent -> unit)\n        | OnLoad of (React.SyntheticEvent -> unit)\n        | OnError of (React.SyntheticEvent -> unit)\n        | OnKeyDown of (React.KeyboardEvent -> unit)\n        | OnKeyPress of (React.KeyboardEvent -> unit)\n        | OnKeyUp of (React.KeyboardEvent -> unit)\n        | OnAbort of (React.SyntheticEvent -> unit)\n        | OnCanPlay of (React.SyntheticEvent -> unit)\n        | OnCanPlayThrough of (React.SyntheticEvent -> unit)\n        | OnDurationChange of (React.SyntheticEvent -> unit)\n        | OnEmptied of (React.SyntheticEvent -> unit)\n        | OnEncrypted of (React.SyntheticEvent -> unit)\n        | OnEnded of (React.SyntheticEvent -> unit)\n        | OnLoadedData of (React.SyntheticEvent -> unit)\n        | OnLoadedMetadata of (React.SyntheticEvent -> unit)\n        | OnLoadStart of (React.SyntheticEvent -> unit)\n        | OnPause of (React.SyntheticEvent -> unit)\n        | OnPlay of (React.SyntheticEvent -> unit)\n        | OnPlaying of (React.SyntheticEvent -> unit)\n        | OnProgress of (React.SyntheticEvent -> unit)\n        | OnRateChange of (React.SyntheticEvent -> unit)\n        | OnSeeked of (React.SyntheticEvent -> unit)\n        | OnSeeking of (React.SyntheticEvent -> unit)\n        | OnStalled of (React.SyntheticEvent -> unit)\n        | OnSuspend of (React.SyntheticEvent -> unit)\n        | OnTimeUpdate of (React.SyntheticEvent -> unit)\n        | OnVolumeChange of (React.SyntheticEvent -> unit)\n        | OnWaiting of (React.SyntheticEvent -> unit)\n        | OnClick of (React.MouseEvent -> unit)\n        | OnContextMenu of (React.MouseEvent -> unit)\n        | OnDoubleClick of (React.MouseEvent -> unit)\n        | OnDrag of (React.DragEvent -> unit)\n        | OnDragEnd of (React.DragEvent -> unit)\n        | OnDragEnter of (React.DragEvent -> unit)\n        | OnDragExit of (React.DragEvent -> unit)\n        | OnDragLeave of (React.DragEvent -> unit)\n        | OnDragOver of (React.DragEvent -> unit)\n        | OnDragStart of (React.DragEvent -> unit)\n        | OnDrop of (React.DragEvent -> unit)\n        | OnMouseDown of (React.MouseEvent -> unit)\n        | OnMouseEnter of (React.MouseEvent -> unit)\n        | OnMouseLeave of (React.MouseEvent -> unit)\n        | OnMouseMove of (React.MouseEvent -> unit)\n        | OnMouseOut of (React.MouseEvent -> unit)\n        | OnMouseOver of (React.MouseEvent -> unit)\n        | OnMouseUp of (React.MouseEvent -> unit)\n        | OnSelect of (React.SyntheticEvent -> unit)\n        | OnTouchCancel of (React.TouchEvent -> unit)\n        | OnTouchEnd of (React.TouchEvent -> unit)\n        | OnTouchMove of (React.TouchEvent -> unit)\n        | OnTouchStart of (React.TouchEvent -> unit)\n        | OnScroll of (React.UIEvent -> unit)\n        | OnWheel of (React.WheelEvent -> unit)\n        | OnAnimationStart of (React.AnimationEvent -> unit)\n        | OnAnimationEnd of (React.AnimationEvent -> unit)\n        | OnAnimationIteration of (React.AnimationEvent -> unit)\n        | OnTransitionEnd of (React.TransitionEvent -> unit)\n        interface IHTMLProp\n\n    type SVGAttr =\n        | ClipPath of string\n        | Cx of obj\n        | Cy of obj\n        | D of string\n        | Dx of obj\n        | Dy of obj\n        | Fill of string\n        | FillOpacity of obj\n        | FontFamily of string\n        | FontSize of obj\n        | Fx of obj\n        | Fy of obj\n        | GradientTransform of string\n        | GradientUnits of string\n        | Height of obj\n        | MarkerEnd of string\n        | MarkerMid of string\n        | MarkerStart of string\n        | Offset of obj\n        | Opacity of obj\n        | PatternContentUnits of string\n        | PatternUnits of string\n        | Points of string\n        | PreserveAspectRatio of string\n        | R of obj\n        | Rx of obj\n        | Ry of obj\n        | SpreadMethod of string\n        | StopColor of string\n        | StopOpacity of obj\n        | Stroke of string\n        | StrokeDasharray of string\n        | StrokeLinecap of string\n        | StrokeMiterlimit of string\n        | StrokeOpacity of obj\n        | StrokeWidth of obj\n        | TextAnchor of string\n        | Transform of string\n        | Version of string\n        | ViewBox of string\n        | Width of obj\n        | X1 of obj\n        | X2 of obj\n        | X of obj\n        | XlinkActuate of string\n        | XlinkArcrole of string\n        | XlinkHref of string\n        | XlinkRole of string\n        | XlinkShow of string\n        | XlinkTitle of string\n        | XlinkType of string\n        | XmlBase of string\n        | XmlLang of string\n        | XmlSpace of string\n        | Y1 of obj\n        | Y2 of obj\n        | Y of obj\n        /// If you are searching for a way to provide a value not supported by this DSL then use something like: CSSProp.Custom (\"align-content\", \"center\")\n        | [<Erase>] Custom of string * obj\n        interface IProp\n\n    type HTMLAttr =\n        | DefaultChecked of bool\n        | DefaultValue of obj\n        | Accept of string\n        | AcceptCharset of string\n        | AccessKey of string\n        | Action of string\n        | AllowFullScreen of bool\n        | AllowTransparency of bool\n        | Alt of string\n        | [<CompiledName(\"aria-haspopup\")>] AriaHasPopup of bool\n        | [<CompiledName(\"aria-expanded\")>] AriaExpanded of bool\n        | Async of bool\n        | AutoComplete of string\n        | AutoFocus of bool\n        | AutoPlay of bool\n        | Capture of bool\n        | CellPadding of obj\n        | CellSpacing of obj\n        | CharSet of string\n        | Challenge of string\n        | Checked of bool\n        | ClassID of string\n        | ClassName of string\n        /// Alias of ClassName\n        | [<CompiledName(\"className\")>] Class of string\n        | Cols of int\n        | ColSpan of int\n        | Content of string\n        | ContentEditable of bool\n        | ContextMenu of string\n        | Controls of bool\n        | Coords of string\n        | CrossOrigin of string\n        // | Data of string\n        | [<CompiledName(\"data-toggle\")>] DataToggle of string\n        | DateTime of string\n        | Default of bool\n        | Defer of bool\n        | Dir of string\n        | Disabled of bool\n        | Download of obj\n        | Draggable of bool\n        | EncType of string\n        | Form of string\n        | FormAction of string\n        | FormEncType of string\n        | FormMethod of string\n        | FormNoValidate of bool\n        | FormTarget of string\n        | FrameBorder of obj\n        | Headers of string\n        | Height of obj\n        | Hidden of bool\n        | High of float\n        | Href of string\n        | HrefLang of string\n        | HtmlFor of string\n        | HttpEquiv of string\n        | Icon of string\n        | Id of string\n        | InputMode of string\n        | Integrity of string\n        | Is of string\n        | KeyParams of string\n        | KeyType of string\n        | Kind of string\n        | Label of string\n        | Lang of string\n        | List of string\n        | Loop of bool\n        | Low of float\n        | Manifest of string\n        | MarginHeight of float\n        | MarginWidth of float\n        | Max of obj\n        | MaxLength of float\n        | Media of string\n        | MediaGroup of string\n        | Method of string\n        | Min of obj\n        | MinLength of float\n        | Multiple of bool\n        | Muted of bool\n        | Name of string\n        | NoValidate of bool\n        | Open of bool\n        | Optimum of float\n        | Pattern of string\n        | Placeholder of string\n        | Poster of string\n        | Preload of string\n        | RadioGroup of string\n        | ReadOnly of bool\n        | Rel of string\n        | Required of bool\n        | Role of string\n        | Rows of int\n        | RowSpan of int\n        | Sandbox of string\n        | Scope of string\n        | Scoped of bool\n        | Scrolling of string\n        | Seamless of bool\n        | Selected of bool\n        | Shape of string\n        | Size of float\n        | Sizes of string\n        | Span of float\n        | SpellCheck of bool\n        | Src of string\n        | SrcDoc of string\n        | SrcLang of string\n        | SrcSet of string\n        | Start of float\n        | Step of obj\n        | Summary of string\n        | TabIndex of int\n        | Target of string\n        | Title of string\n        | Type of string\n        | UseMap of string\n        | Value of obj\n        | Width of obj\n        | Wmode of string\n        | Wrap of string\n        | About of string\n        | Datatype of string\n        | Inlist of obj\n        | Prefix of string\n        | Property of string\n        | Resource of string\n        | Typeof of string\n        | Vocab of string\n        | AutoCapitalize of string\n        | AutoCorrect of string\n        | AutoSave of string\n        // | Color of string // Conflicts with CSSProp, shouldn't be used in HTML5\n        | ItemProp of string\n        | ItemScope of bool\n        | ItemType of string\n        | ItemID of string\n        | ItemRef of string\n        | Results of float\n        | Security of string\n        | Unselectable of bool\n        | [<Erase>] Custom of string * obj\n#if !FABLE_COMPILER\n        | Style of CSSProp list\n        | Data of string * obj\n#endif\n        interface IHTMLProp\n\n    type CSSProp =\n        | AlignContent of obj\n        | AlignItems of obj\n        | AlignSelf of obj\n        | AlignmentAdjust of obj\n        | AlignmentBaseline of obj\n        | All of obj\n        | Animation of obj\n        | AnimationDelay of obj\n        | AnimationDirection of obj\n        | AnimationDuration of obj\n        | AnimationFillMode of obj\n        | AnimationIterationCount of obj\n        | AnimationName of obj\n        | AnimationPlayState of obj\n        | AnimationTimingFunction of obj\n        | Appearance of obj\n        | BackfaceVisibility of obj\n        | Background of obj\n        | BackgroundAttachment of obj\n        | BackgroundBlendMode of obj\n        | BackgroundClip of obj\n        | BackgroundColor of obj\n        | BackgroundComposite of obj\n        | BackgroundImage of obj\n        | BackgroundOrigin of obj\n        | BackgroundPosition of obj\n        | BackgroundPositionX of obj\n        | BackgroundPositionY of obj\n        | BackgroundRepeat of obj\n        | BackgroundSize of obj\n        | BaselineShift of obj\n        | Behavior of obj\n        | BlockSize of obj\n        | Border of obj\n        | BorderBlockEnd of obj\n        | BorderBlockEndColor of obj\n        | BorderBlockEndStyle of obj\n        | BorderBlockEndWidth of obj\n        | BorderBlockStart of obj\n        | BorderBlockStartColor of obj\n        | BorderBlockStartStyle of obj\n        | BorderBlockStartWidth of obj\n        | BorderBottom of obj\n        | BorderBottomColor of obj\n        | BorderBottomLeftRadius of obj\n        | BorderBottomRightRadius of obj\n        | BorderBottomStyle of obj\n        | BorderBottomWidth of obj\n        | BorderCollapse of obj\n        | BorderColor of obj\n        | BorderCornerShape of obj\n        | BorderImage of obj\n        | BorderImageOutset of obj\n        | BorderImageRepeat of obj\n        | BorderImageSlice of obj\n        | BorderImageSource of obj\n        | BorderImageWidth of obj\n        | BorderInlineEnd of obj\n        | BorderInlineEndColor of obj\n        | BorderInlineEndStyle of obj\n        | BorderInlineEndWidth of obj\n        | BorderInlineStart of obj\n        | BorderInlineStartColor of obj\n        | BorderInlineStartStyle of obj\n        | BorderInlineStartWidth of obj\n        | BorderLeft of obj\n        | BorderLeftColor of obj\n        | BorderLeftStyle of obj\n        | BorderLeftWidth of obj\n        | BorderRadius of obj\n        | BorderRight of obj\n        | BorderRightColor of obj\n        | BorderRightStyle of obj\n        | BorderRightWidth of obj\n        | BorderSpacing of obj\n        | BorderStyle of obj\n        | BorderTop of obj\n        | BorderTopColor of obj\n        | BorderTopLeftRadius of obj\n        | BorderTopRightRadius of obj\n        | BorderTopStyle of obj\n        | BorderTopWidth of obj\n        | BorderWidth of obj\n        | Bottom of obj\n        | BoxAlign of obj\n        | BoxDecorationBreak of obj\n        | BoxDirection of obj\n        | BoxFlex of obj\n        | BoxFlexGroup of obj\n        | BoxLineProgression of obj\n        | BoxLines of obj\n        | BoxOrdinalGroup of obj\n        | BoxShadow of obj\n        | BoxSizing of obj\n        | BreakAfter of obj\n        | BreakBefore of obj\n        | BreakInside of obj\n        | CaptionSide of obj\n        | CaretColor of obj\n        | Clear of obj\n        | Clip of obj\n        | ClipPath of obj\n        | ClipRule of obj\n        | Color of obj\n        | ColorInterpolation of obj\n        | ColorInterpolationFilters of obj\n        | ColorProfile of obj\n        | ColorRendering of obj\n        | ColumnCount of obj\n        | ColumnFill of obj\n        | ColumnGap of obj\n        | ColumnRule of obj\n        | ColumnRuleColor of obj\n        | ColumnRuleStyle of obj\n        | ColumnRuleWidth of obj\n        | ColumnSpan of obj\n        | ColumnWidth of obj\n        | Columns of obj\n        | Content of obj\n        | CounterIncrement of obj\n        | CounterReset of obj\n        | Cue of obj\n        | CueAfter of obj\n        | Cursor of obj\n        | Direction of obj\n        | Display of obj\n        | DominantBaseline of obj\n        | EmptyCells of obj\n        | EnableBackground of obj\n        | Fill of obj\n        | FillOpacity of obj\n        | FillRule of obj\n        | Filter of obj\n        | Flex of obj\n        | FlexAlign of obj\n        | FlexBasis of obj\n        | FlexDirection of obj\n        | FlexFlow of obj\n        | FlexGrow of obj\n        | FlexItemAlign of obj\n        | FlexLinePack of obj\n        | FlexOrder of obj\n        | FlexShrink of obj\n        | FlexWrap of obj\n        | Float of obj\n        | FloodColor of obj\n        | FloodOpacity of obj\n        | FlowFrom of obj\n        | Font of obj\n        | FontFamily of obj\n        | FontFeatureSettings of obj\n        | FontKerning of obj\n        | FontLanguageOverride of obj\n        | FontSize of obj\n        | FontSizeAdjust of obj\n        | FontStretch of obj\n        | FontStyle of obj\n        | FontSynthesis of obj\n        | FontVariant of obj\n        | FontVariantAlternates of obj\n        | FontVariantCaps of obj\n        | FontVariantEastAsian of obj\n        | FontVariantLigatures of obj\n        | FontVariantNumeric of obj\n        | FontVariantPosition of obj\n        | FontWeight of obj\n        | GlyphOrientationHorizontal of obj\n        | GlyphOrientationVertical of obj\n        | Grid of obj\n        | GridArea of obj\n        | GridAutoColumns of obj\n        | GridAutoFlow of obj\n        | GridAutoRows of obj\n        | GridColumn of obj\n        | GridColumnEnd of obj\n        | GridColumnGap of obj\n        | GridColumnStart of obj\n        | GridGap of obj\n        | GridRow of obj\n        | GridRowEnd of obj\n        | GridRowGap of obj\n        | GridRowPosition of obj\n        | GridRowSpan of obj\n        | GridRowStart of obj\n        | GridTemplate of obj\n        | GridTemplateAreas of obj\n        | GridTemplateColumns of obj\n        | GridTemplateRows of obj\n        | HangingPunctuation of obj\n        | Height of obj\n        | HyphenateLimitChars of obj\n        | HyphenateLimitLines of obj\n        | HyphenateLimitZone of obj\n        | Hyphens of obj\n        | ImageOrientation of obj\n        | ImageRendering of obj\n        | ImageResolution of obj\n        | ImeMode of obj\n        | InlineSize of obj\n        | Isolation of obj\n        | JustifyContent of obj\n        | Kerning of obj\n        | LayoutGrid of obj\n        | LayoutGridChar of obj\n        | LayoutGridLine of obj\n        | LayoutGridMode of obj\n        | LayoutGridType of obj\n        | Left of obj\n        | LetterSpacing of obj\n        | LightingColor of obj\n        | LineBreak of obj\n        | LineClamp of obj\n        | LineHeight of obj\n        | ListStyle of obj\n        | ListStyleImage of obj\n        | ListStylePosition of obj\n        | ListStyleType of obj\n        | Margin of obj\n        | MarginBlockEnd of obj\n        | MarginBlockStart of obj\n        | MarginBottom of obj\n        | MarginInlineEnd of obj\n        | MarginInlineStart of obj\n        | MarginLeft of obj\n        | MarginRight of obj\n        | MarginTop of obj\n        | MarkerEnd of obj\n        | MarkerMid of obj\n        | MarkerStart of obj\n        | MarqueeDirection of obj\n        | MarqueeStyle of obj\n        | Mask of obj\n        | MaskBorder of obj\n        | MaskBorderRepeat of obj\n        | MaskBorderSlice of obj\n        | MaskBorderSource of obj\n        | MaskBorderWidth of obj\n        | MaskClip of obj\n        | MaskComposite of obj\n        | MaskImage of obj\n        | MaskMode of obj\n        | MaskOrigin of obj\n        | MaskPosition of obj\n        | MaskRepeat of obj\n        | MaskSize of obj\n        | MaskType of obj\n        | MaxFontSize of obj\n        | MaxHeight of obj\n        | MaxWidth of obj\n        | MinBlockSize of obj\n        | MinHeight of obj\n        | MinInlineSize of obj\n        | MinWidth of obj\n        | MixBlendMode of obj\n        | ObjectFit of obj\n        | ObjectPosition of obj\n        | OffsetBlockEnd of obj\n        | OffsetBlockStart of obj\n        | OffsetInlineEnd of obj\n        | OffsetInlineStart of obj\n        | Opacity of obj\n        | Order of obj\n        | Orphans of obj\n        | Outline of obj\n        | OutlineColor of obj\n        | OutlineOffset of obj\n        | OutlineStyle of obj\n        | OutlineWidth of obj\n        | Overflow of obj\n        | OverflowStyle of obj\n        | OverflowWrap of obj\n        | OverflowX of obj\n        | OverflowY of obj\n        | Padding of obj\n        | PaddingBlockEnd of obj\n        | PaddingBlockStart of obj\n        | PaddingBottom of obj\n        | PaddingInlineEnd of obj\n        | PaddingInlineStart of obj\n        | PaddingLeft of obj\n        | PaddingRight of obj\n        | PaddingTop of obj\n        | PageBreakAfter of obj\n        | PageBreakBefore of obj\n        | PageBreakInside of obj\n        | Pause of obj\n        | PauseAfter of obj\n        | PauseBefore of obj\n        | Perspective of obj\n        | PerspectiveOrigin of obj\n        | PointerEvents of obj\n        | Position of obj\n        | PunctuationTrim of obj\n        | Quotes of obj\n        | RegionFragment of obj\n        | Resize of obj\n        | RestAfter of obj\n        | RestBefore of obj\n        | Right of obj\n        | RubyAlign of obj\n        | RubyMerge of obj\n        | RubyPosition of obj\n        | ScrollBehavior of obj\n        | ScrollSnapCoordinate of obj\n        | ScrollSnapDestination of obj\n        | ScrollSnapType of obj\n        | ShapeImageThreshold of obj\n        | ShapeInside of obj\n        | ShapeMargin of obj\n        | ShapeOutside of obj\n        | ShapeRendering of obj\n        | Speak of obj\n        | SpeakAs of obj\n        | StopColor of obj\n        | StopOpacity of obj\n        | Stroke of obj\n        | StrokeDasharray of obj\n        | StrokeDashoffset of obj\n        | StrokeLinecap of obj\n        | StrokeLinejoin of obj\n        | StrokeMiterlimit of obj\n        | StrokeOpacity of obj\n        | StrokeWidth of obj\n        | TabSize of obj\n        | TableLayout of obj\n        | TextAlign of obj\n        | TextAlignLast of obj\n        | TextAnchor of obj\n        | TextCombineUpright of obj\n        | TextDecoration of obj\n        | TextDecorationColor of obj\n        | TextDecorationLine of obj\n        | TextDecorationLineThrough of obj\n        | TextDecorationNone of obj\n        | TextDecorationOverline of obj\n        | TextDecorationSkip of obj\n        | TextDecorationStyle of obj\n        | TextDecorationUnderline of obj\n        | TextEmphasis of obj\n        | TextEmphasisColor of obj\n        | TextEmphasisPosition of obj\n        | TextEmphasisStyle of obj\n        | TextHeight of obj\n        | TextIndent of obj\n        | TextJustify of obj\n        | TextJustifyTrim of obj\n        | TextKashidaSpace of obj\n        | TextLineThrough of obj\n        | TextLineThroughColor of obj\n        | TextLineThroughMode of obj\n        | TextLineThroughStyle of obj\n        | TextLineThroughWidth of obj\n        | TextOrientation of obj\n        | TextOverflow of obj\n        | TextOverline of obj\n        | TextOverlineColor of obj\n        | TextOverlineMode of obj\n        | TextOverlineStyle of obj\n        | TextOverlineWidth of obj\n        | TextRendering of obj\n        | TextScript of obj\n        | TextShadow of obj\n        | TextTransform of obj\n        | TextUnderlinePosition of obj\n        | TextUnderlineStyle of obj\n        | Top of obj\n        | TouchAction of obj\n        | Transform of obj\n        | TransformBox of obj\n        | TransformOrigin of obj\n        | TransformOriginZ of obj\n        | TransformStyle of obj\n        | Transition of obj\n        | TransitionDelay of obj\n        | TransitionDuration of obj\n        | TransitionProperty of obj\n        | TransitionTimingFunction of obj\n        | UnicodeBidi of obj\n        | UnicodeRange of obj\n        | UserFocus of obj\n        | UserInput of obj\n        | VerticalAlign of obj\n        | Visibility of obj\n        | VoiceBalance of obj\n        | VoiceDuration of obj\n        | VoiceFamily of obj\n        | VoicePitch of obj\n        | VoiceRange of obj\n        | VoiceRate of obj\n        | VoiceStress of obj\n        | VoiceVolume of obj\n        | WhiteSpace of obj\n        | WhiteSpaceTreatment of obj\n        | Widows of obj\n        | Width of obj\n        | WillChange of obj\n        | WordBreak of obj\n        | WordSpacing of obj\n        | WordWrap of obj\n        | WrapFlow of obj\n        | WrapMargin of obj\n        | WrapOption of obj\n        | WritingMode of obj\n        | ZIndex of obj\n        | Zoom of obj\n        /// If you are searching for a way to provide a value not supported by this DSL then use something like: CSSProp.Custom (\"align-content\", \"center\")\n        | [<Erase>] Custom of string * obj\n\n#if FABLE_COMPILER\n    let inline Style (css: CSSProp list): HTMLAttr =\n        !!(\"style\", keyValueList CaseRules.LowerFirst css)\n\n    let inline Data (key: string, value: obj): HTMLAttr =\n        !!(\"data-\" + key, value)\n#endif\n\nopen Props\nopen Fable.Import.React\n\n[<Erase>]\ntype HTMLNode =\n| Text of string\n| RawText of string\n| Node of string * IProp seq * ReactElement seq\n| List of ReactElement seq\n| Empty\nwith interface ReactElement\n\n[<Import(\"createElement\", from=\"react\")>]\nlet createElement(comp: obj, props: obj, [<ParamList>] children: obj) =\n    HTMLNode.Empty :> ReactElement\n\n[<StringEnum>]\ntype ServerElementType =\n| Tag\n| Fragment\n| Component\n\nlet [<Literal>] private ChildrenName = \"children\"\n\nmodule ServerRenderingInternal =\n\n#if FABLE_COMPILER\n    let inline createServerElement (tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\n        createElement(tag, props, children)\n    let inline createServerElementByFn (f, props, children) =\n        createElement(f, props, children)\n#else\n    let createServerElement (tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\n        match elementType with\n        | ServerElementType.Tag ->\n            HTMLNode.Node (string tag, props :?> IProp seq, children) :> ReactElement\n        | ServerElementType.Fragment ->\n            HTMLNode.List children :> ReactElement\n        | ServerElementType.Component ->\n            let tag = tag :?> System.Type\n            let comp = System.Activator.CreateInstance(tag, props)\n#if NETSTANDARD1_6\n            let tag = tag.GetTypeInfo()\n#endif\n            let childrenProp = tag.GetProperty(ChildrenName)\n            childrenProp.SetValue(comp, children |> Seq.toArray)\n            let render = tag.GetMethod(\"render\")\n            render.Invoke(comp, null) :?> ReactElement\n\n    let createServerElementByFn = fun (f, props, children) ->\n#if NETSTANDARD1_6\n        let propsType' = props.GetType()\n        let propsType = propsType'.GetTypeInfo()\n#else\n        let propsType = props.GetType()\n#endif\n        let props =\n            if propsType.GetProperty (ChildrenName) |> isNull then\n                props\n            else\n                let values = ResizeArray<obj> ()\n                let properties = propsType.GetProperties()\n                for p in properties do\n                    if p.Name = ChildrenName then\n                        values.Add (children |> Seq.toArray)\n                    else\n                        values.Add (FSharpValue.GetRecordField(props, p))\n#if NETSTANDARD1_6\n                let propsType = propsType'\n#endif\n                FSharpValue.MakeRecord(propsType, values.ToArray()) :?> 'P\n        f props\n\n#endif\n\nopen ServerRenderingInternal\n\n/// Instantiate an imported React component\nlet inline from<'P> (com: ComponentClass<'P>) (props: 'P) (children: ReactElement seq): ReactElement =\n    createElement(com, props, children)\n\n/// Instantiate a component from a type inheriting React.Component\n/// Example: `ofType<MyComponent,_,_> { myProps = 5 } []`\nlet inline ofType<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(jsConstructor<'T>, props, children)\n#else\n    createServerElement(typeof<'T>, props, children, ServerElementType.Component)\n#endif\n\n\n/// OBSOLETE: Use `ofType`\n[<System.Obsolete(\"Use ofType\")>]\nlet inline com<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\n    ofType<'T, 'P, 'S> props children\n\n/// Instantiate a stateless component from a function\n/// Example:\n/// ```\n/// let Hello (p: MyProps) = div [] [ofString (\"Hello \" + p.name)]\n/// ofFunction Hello { name = \"Maxime\" } []\n/// ```\nlet inline ofFunction<'P> (f: 'P -> ReactElement) (props: 'P) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(f, props, children)\n#else\n    createServerElementByFn(f, props, children)\n#endif\n\n/// OBSOLETE: Use `ofFunction`\n[<System.Obsolete(\"Use ofFunction\")>]\nlet inline fn<'P> (f: 'P -> ReactElement) (props: 'P) (children: ReactElement seq): ReactElement =\n    ofFunction f props children\n\n/// Instantiate an imported React component. The first two arguments must be string literals, \"default\" can be used for the first one.\n/// Example: `ofImport \"Map\" \"leaflet\" { x = 10; y = 50 } []`\nlet inline ofImport<'P> (importMember: string) (importPath: string) (props: 'P) (children: ReactElement seq): ReactElement =\n    createElement(import importMember importPath, props, children)\n\ntype ReactElementType<'props> = interface end\n\ntype ReactComponentType<'props> =\n    inherit ReactElementType<'props>\n    abstract displayName: string option with get, set\n\n#if FABLE_COMPILER\n/// Alias of `ofString`\nlet inline str (s: string): ReactElement = unbox s\n\n/// Cast a string to a React element (erased in runtime)\nlet inline ofString (s: string): ReactElement = unbox s\n\n/// Cast an option value to a React element (erased in runtime)\nlet inline ofOption (o: ReactElement option): ReactElement =\n    match o with Some o -> o | None -> null // Option.toObj(o)\n\n/// OBSOLETE: Use `ofOption`\n[<System.Obsolete(\"Use ofOption\")>]\nlet inline opt (o: ReactElement option): ReactElement = ofOption o\n\n/// Cast an int to a React element (erased in runtime)\nlet inline ofInt (i: int): ReactElement = unbox i\n\n/// Cast a float to a React element (erased in runtime)\nlet inline ofFloat (f: float): ReactElement = unbox f\n\n/// Returns a list **from .render() method**\nlet inline ofList (els: ReactElement list): ReactElement = unbox(List.toArray els)\n\n/// Returns an array **from .render() method**\nlet inline ofArray (els: ReactElement array): ReactElement = unbox els\n\n/// A ReactElement when you don't want to render anything (null in javascript)\n[<Emit(\"null\")>]\nlet nothing: ReactElement = jsNative\n\n[<RequireQualifiedAccess>]\nmodule ReactElementType =\n    let inline ofComponent<'comp, 'props, 'state when 'comp :> Component<'props, 'state>> : ReactComponentType<'props> =\n        unbox jsConstructor<'comp>\n\n    let inline ofFunction<'props> (f: 'props -> ReactElement) : ReactComponentType<'props> =\n        unbox f\n\n    let inline ofHtmlElement<'props> (name: string): ReactElementType<'props> =\n        unbox name\n\n    /// Create a ReactElement to be rendered from an element type, props and children\n    let inline create<'props> (comp: ReactElementType<'props>) (props: 'props) (children: ReactElement seq): ReactElement =\n        createElement(comp, props, children)\n\ntype PropsEqualityComparison<'props> = 'props -> 'props -> bool\n\n[<Import(\"memo\", from=\"react\")>]\nlet private reactMemo<'props> (render: 'props -> ReactElement) : ReactComponentType<'props> =\n    jsNative\n\n/// React.memo is a higher order component. It’s similar to React.PureComponent but for function components instead of\n/// classes.\n///\n/// If your function component renders the same result given the same props, you can wrap it in a call to React.memo\n/// for a performance boost in some cases by memoizing the result. This means that React will skip rendering the\n/// component, and reuse the last rendered result.\n///\n/// By default it will only shallowly compare complex objects in the props object. If you want control over the\n/// comparison, you can use `memoWith`.\nlet memo<'props> (name: string) (render: 'props -> ReactElement) : ReactComponentType<'props> =\n    render?displayName <- name\n    reactMemo(render)\n\n[<Import(\"memo\", from=\"react\")>]\nlet private reactMemoWith<'props> (render: 'props -> ReactElement, areEqual: PropsEqualityComparison<'props>) : ReactComponentType<'props> =\n    jsNative\n\n/// React.memo is a higher order component. It’s similar to React.PureComponent but for function components instead of\n/// classes.\n///\n/// If your function component renders the same result given the same props, you can wrap it in a call to React.memo\n/// for a performance boost in some cases by memoizing the result. This means that React will skip rendering the\n/// component, and reuse the last rendered result.\n///\n/// This version allow you to control the comparison used instead of the default shallow one by provide a custom\n/// comparison function.\nlet memoWith<'props> (name: string) (areEqual: PropsEqualityComparison<'props>) (render: 'props -> ReactElement) : ReactComponentType<'props> =\n    render?displayName <- name\n    reactMemoWith(render, areEqual)\n\n/// Create a ReactElement to be rendered from an element type, props and children\nlet inline ofElementType<'props> (comp: ReactElementType<'props>) (props: 'props) (children: ReactElement seq): ReactElement =\n    ReactElementType.create comp props children\n\n#else\n/// Alias of `ofString`\nlet inline str (s: string): ReactElement = HTMLNode.Text s :> ReactElement\n\n/// Cast a string to a React element (erased in runtime)\nlet inline ofString (s: string): ReactElement = str s\n\n/// Cast an option value to a React element (erased in runtime)\nlet inline ofOption (o: ReactElement option): ReactElement =\n    match o with Some o -> o | None -> null // Option.toObj(o)\n\n/// OBSOLETE: Use `ofOption`\n[<System.Obsolete(\"Use ofOption\")>]\nlet inline opt (o: ReactElement option): ReactElement = ofOption o\n\n/// Cast an int to a React element (erased in runtime)\nlet inline ofInt (i: int): ReactElement = HTMLNode.RawText (string i) :> ReactElement\n\n/// Cast a float to a React element (erased in runtime)\nlet inline ofFloat (f: float): ReactElement = HTMLNode.RawText (string f) :> ReactElement\n\n/// Returns a list **from .render() method**\nlet inline ofList (els: ReactElement list): ReactElement = HTMLNode.List els :> ReactElement\n\n/// Returns an array **from .render() method**\nlet inline ofArray (els: ReactElement array): ReactElement = HTMLNode.List els :> ReactElement\n\n/// A ReactElement when you don't want to render anything (null in javascript)\nlet nothing: ReactElement = HTMLNode.Empty :> ReactElement\n\n#endif\n\n\n/// Instantiate a DOM React element\nlet inline domEl (tag: string) (props: IHTMLProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(tag, keyValueList CaseRules.LowerFirst props, children)\n#else\n    createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\n#endif\n\n/// Instantiate a DOM React element (void)\nlet inline voidEl (tag: string) (props: IHTMLProp seq) : ReactElement =\n#if FABLE_COMPILER\n    createElement(tag, keyValueList CaseRules.LowerFirst props, [])\n#else\n    createServerElement(tag, (props |> Seq.cast<IProp>), [], ServerElementType.Tag)\n#endif\n\n/// Instantiate an SVG React element\nlet inline svgEl (tag: string) (props: IProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(tag, keyValueList CaseRules.LowerFirst props, children)\n#else\n    createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\n#endif\n\n/// Instantiate a React fragment\nlet inline fragment (props: IFragmentProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(jsConstructor<Fragment>, keyValueList CaseRules.LowerFirst props, children)\n#else\n    createServerElement(typeof<Fragment>, (props |> Seq.cast<IProp>), children, ServerElementType.Fragment)\n#endif\n\n// Standard elements\nlet inline a b c = domEl \"a\" b c\nlet inline abbr b c = domEl \"abbr\" b c\nlet inline address b c = domEl \"address\" b c\nlet inline article b c = domEl \"article\" b c\nlet inline aside b c = domEl \"aside\" b c\nlet inline audio b c = domEl \"audio\" b c\nlet inline b b' c = domEl \"b\" b' c\nlet inline bdi b c = domEl \"bdi\" b c\nlet inline bdo b c = domEl \"bdo\" b c\nlet inline big b c = domEl \"big\" b c\nlet inline blockquote b c = domEl \"blockquote\" b c\nlet inline body b c = domEl \"body\" b c\nlet inline button b c = domEl \"button\" b c\nlet inline canvas b c = domEl \"canvas\" b c\nlet inline caption b c = domEl \"caption\" b c\nlet inline cite b c = domEl \"cite\" b c\nlet inline code b c = domEl \"code\" b c\nlet inline colgroup b c = domEl \"colgroup\" b c\nlet inline data b c = domEl \"data\" b c\nlet inline datalist b c = domEl \"datalist\" b c\nlet inline dd b c = domEl \"dd\" b c\nlet inline del b c = domEl \"del\" b c\nlet inline details b c = domEl \"details\" b c\nlet inline dfn b c = domEl \"dfn\" b c\nlet inline dialog b c = domEl \"dialog\" b c\nlet inline div b c = domEl \"div\" b c\nlet inline dl b c = domEl \"dl\" b c\nlet inline dt b c = domEl \"dt\" b c\nlet inline em b c = domEl \"em\" b c\nlet inline fieldset b c = domEl \"fieldset\" b c\nlet inline figcaption b c = domEl \"figcaption\" b c\nlet inline figure b c = domEl \"figure\" b c\nlet inline footer b c = domEl \"footer\" b c\nlet inline form b c = domEl \"form\" b c\nlet inline h1 b c = domEl \"h1\" b c\nlet inline h2 b c = domEl \"h2\" b c\nlet inline h3 b c = domEl \"h3\" b c\nlet inline h4 b c = domEl \"h4\" b c\nlet inline h5 b c = domEl \"h5\" b c\nlet inline h6 b c = domEl \"h6\" b c\nlet inline head b c = domEl \"head\" b c\nlet inline header b c = domEl \"header\" b c\nlet inline hgroup b c = domEl \"hgroup\" b c\nlet inline html b c = domEl \"html\" b c\nlet inline i b c = domEl \"i\" b c\nlet inline iframe b c = domEl \"iframe\" b c\nlet inline ins b c = domEl \"ins\" b c\nlet inline kbd b c = domEl \"kbd\" b c\nlet inline label b c = domEl \"label\" b c\nlet inline legend b c = domEl \"legend\" b c\nlet inline li b c = domEl \"li\" b c\nlet inline main b c = domEl \"main\" b c\nlet inline map b c = domEl \"map\" b c\nlet inline mark b c = domEl \"mark\" b c\nlet inline menu b c = domEl \"menu\" b c\nlet inline meter b c = domEl \"meter\" b c\nlet inline nav b c = domEl \"nav\" b c\nlet inline noscript b c = domEl \"noscript\" b c\nlet inline ``object`` b c = domEl \"object\" b c\nlet inline ol b c = domEl \"ol\" b c\nlet inline optgroup b c = domEl \"optgroup\" b c\nlet inline option b c = domEl \"option\" b c\nlet inline output b c = domEl \"output\" b c\nlet inline p b c = domEl \"p\" b c\nlet inline picture b c = domEl \"picture\" b c\nlet inline pre b c = domEl \"pre\" b c\nlet inline progress b c = domEl \"progress\" b c\nlet inline q b c = domEl \"q\" b c\nlet inline rp b c = domEl \"rp\" b c\nlet inline rt b c = domEl \"rt\" b c\nlet inline ruby b c = domEl \"ruby\" b c\nlet inline s b c = domEl \"s\" b c\nlet inline samp b c = domEl \"samp\" b c\nlet inline script b c = domEl \"script\" b c\nlet inline section b c = domEl \"section\" b c\nlet inline select b c = domEl \"select\" b c\nlet inline small b c = domEl \"small\" b c\nlet inline span b c = domEl \"span\" b c\nlet inline strong b c = domEl \"strong\" b c\nlet inline style b c = domEl \"style\" b c\nlet inline sub b c = domEl \"sub\" b c\nlet inline summary b c = domEl \"summary\" b c\nlet inline sup b c = domEl \"sup\" b c\nlet inline table b c = domEl \"table\" b c\nlet inline tbody b c = domEl \"tbody\" b c\nlet inline td b c = domEl \"td\" b c\nlet inline textarea b c = domEl \"textarea\" b c\nlet inline tfoot b c = domEl \"tfoot\" b c\nlet inline th b c = domEl \"th\" b c\nlet inline thead b c = domEl \"thead\" b c\nlet inline time b c = domEl \"time\" b c\nlet inline title b c = domEl \"title\" b c\nlet inline tr b c = domEl \"tr\" b c\nlet inline u b c = domEl \"u\" b c\nlet inline ul b c = domEl \"ul\" b c\nlet inline var b c = domEl \"var\" b c\nlet inline video b c = domEl \"video\" b c\n\n// Void element\nlet inline area b = voidEl \"area\" b\nlet inline ``base`` b = voidEl \"base\" b\nlet inline br b = voidEl \"br\" b\nlet inline col b = voidEl \"col\" b\nlet inline embed b = voidEl \"embed\" b\nlet inline hr b = voidEl \"hr\" b\nlet inline img b = voidEl \"img\" b\nlet inline input b = voidEl \"input\" b\nlet inline keygen b = voidEl \"keygen\" b\nlet inline link b = voidEl \"link\" b\nlet inline menuitem b = voidEl \"menuitem\" b\nlet inline meta b = voidEl \"meta\" b\nlet inline param b = voidEl \"param\" b\nlet inline source b = voidEl \"source\" b\nlet inline track b = voidEl \"track\" b\nlet inline wbr b = voidEl \"wbr\" b\n\n// SVG elements\nlet inline svg b c = svgEl \"svg\" b c\nlet inline circle b c = svgEl \"circle\" b c\nlet inline clipPath b c = svgEl \"clipPath\" b c\nlet inline defs b c = svgEl \"defs\" b c\nlet inline ellipse b c = svgEl \"ellipse\" b c\nlet inline g b c = svgEl \"g\" b c\nlet inline image b c = svgEl \"image\" b c\nlet inline line b c = svgEl \"line\" b c\nlet inline linearGradient b c = svgEl \"linearGradient\" b c\nlet inline mask b c = svgEl \"mask\" b c\nlet inline path b c = svgEl \"path\" b c\nlet inline pattern b c = svgEl \"pattern\" b c\nlet inline polygon b c = svgEl \"polygon\" b c\nlet inline polyline b c = svgEl \"polyline\" b c\nlet inline radialGradient b c = svgEl \"radialGradient\" b c\nlet inline rect b c = svgEl \"rect\" b c\nlet inline stop b c = svgEl \"stop\" b c\nlet inline text b c = svgEl \"text\" b c\nlet inline tspan b c = svgEl \"tspan\" b c\n\n// Class list helpers\nlet classBaseList std classes =\n    classes\n    |> List.fold (fun complete -> function | (name,true) -> complete + \" \" + name | _ -> complete) std\n    |> ClassName\n\nlet classList classes = classBaseList \"\" classes\n\n/// Finds a DOM element by its ID and mounts the React element there\nlet inline mountById (domElId: string) (reactEl: ReactElement): unit =\n    ReactDom.render(reactEl, Browser.document.getElementById(domElId))\n\n/// Finds the first DOM element matching a CSS selector and mounts the React element there\nlet inline mountBySelector (domElSelector: string) (reactEl: ReactElement): unit =\n    ReactDom.render(reactEl, Browser.document.querySelector(domElSelector))\n\ntype Fable.Import.React.FormEvent with\n    /// Access the value from target\n    /// Equivalent to `(this.target :?> Browser.HTMLInputElement).value`\n    member this.Value =\n        (this.target :?> Browser.HTMLInputElement).value\n\n    /// Access the checked property from target\n    /// Equivalent to `(this.target :?> Browser.HTMLInputElement).checked`\n    member this.Checked =\n        (this.target :?> Browser.HTMLInputElement).``checked``\n\n// Helpers for ReactiveComponents (see #44)\nmodule ReactiveComponents =\n    type Props<'P, 'S, 'Msg> = {\n        key: string\n        props: 'P\n        update: 'Msg -> 'S -> 'S\n        view: Model<'P, 'S> -> ('Msg->unit) -> ReactElement\n        init: 'P -> 'S\n    }\n\n    and State<'T> = {\n        value: 'T\n    }\n\n    and Model<'P, 'S> = {\n        props: 'P\n        state: 'S\n        children: ReactElement[]\n    }\n\nopen ReactiveComponents\n\ntype ReactiveCom<'P, 'S, 'Msg>(initProps) =\n    inherit Component<Props<'P, 'S, 'Msg>, State<'S>>(initProps)\n    do base.setInitState { value = initProps.init(initProps.props) }\n\n    override this.render() =\n        let model =\n            { props = this.props.props\n              state = this.state.value\n              children = this.children }\n        this.props.view model (fun msg ->\n            let newState = this.props.update msg this.state.value\n            this.setState(fun _ _ -> { value = newState }))\n\n/// Renders a stateful React component from functions similar to Elmish\n///  * `init` - Initializes component state with given props\n///  * `update` - Updates the state when `dispatch` is triggered\n///  * `view` - Render function, receives a `ReactiveComponents.Model` object and a `dispatch` function\n///  * `key` - The key is necessary to identify React elements in a list, an empty string can be passed otherwise\n///  * `props` - External properties passed to the component each time it's rendered, usually from its parent\n///  * `children` - A list of children React elements\nlet reactiveCom<'P, 'S, 'Msg>\n        (init: 'P -> 'S)\n        (update: 'Msg -> 'S -> 'S)\n        (view: Model<'P, 'S> -> ('Msg->unit) -> ReactElement)\n        (key: string)\n        (props: 'P)\n        (children: ReactElement seq): ReactElement =\n    ofType<ReactiveCom<'P, 'S, 'Msg>, Props<'P, 'S, 'Msg>, State<'S>>\n        { key=key; props=props; update=update; view=view; init=init }\n        children\n","module App.State\n\nopen Elmish\nopen Elmish.Browser.Navigation\nopen Elmish.Browser.UrlParser\nopen Fable.Import.Browser\nopen Global\nopen Types\n\nlet pageParser: Parser<Page->Page,Page> =\n    oneOf [\n        map About (s \"about\")\n        map Home (s \"home\")\n    ]\n\nlet urlUpdate (result : Page option) model =\n    match result with\n    | None ->\n        console.error(\"Error parsing url\")\n        model, Navigation.modifyUrl (toHash model.CurrentPage)\n    | Some page ->\n        { model with CurrentPage = page }, []\n\nlet init result =\n    let (home, homeCmd) = Home.State.init()\n    let (model, cmd) =\n        urlUpdate result\n          { CurrentPage = Home\n            Home = home }\n\n\n    model, Cmd.batch [ cmd\n                       Cmd.map HomeMsg homeCmd ]\n\nlet update msg model =\n    match msg with\n    | HomeMsg msg ->\n        let (home, homeCmd) = Home.State.update msg model.Home\n        { model with Home = home }, Cmd.map HomeMsg homeCmd\n","module Common.Common\n\nlet setElement key newEl =\n    Array.mapi (fun i v -> if i = key then newEl else v)\n\nlet insertElement key newEl list =\n    let (before, after) = list |> List.splitAt key\n    before @ [newEl] @ after\n","module Home.View\n\nopen Fable.Helpers.React\nopen Fable.Helpers.React.Props\nopen Types\nopen Domain.Types\n\ntype SVG = SVGAttr\n\nlet fieldWidth = 20\nlet fieldHeight = 20\n\nlet plateMargin = 2 // TODO: remove this crap\n\nlet camelHeight = fieldHeight / 5\nlet camelWidth = fieldWidth\n\nlet coordsMapping = Map.ofList [\n    (0, (4,2));\n    (1, (4,3));\n    (2, (4,4));\n    (3, (3,4));\n    (4, (2,4));\n    (5, (1,4));\n    (6, (0,4));\n    (7, (0,3));\n    (8, (0,2));\n    (9, (0,1));\n    (10, (0,0));\n    (11, (1,0));\n    (12, (2,0));\n    (13, (3,0));\n    (14, (4,0));\n    (15, (4,1))]\n\nlet camelColor = function\n| Camel.Blue -> \"cyan\"\n| Camel.Orange -> \"orange\"\n| Camel.Green -> \"limegreen\"\n| Camel.White -> \"white\"\n| Camel.Yellow -> \"yellow\"\n\nlet tryParseCamelFromId =\n  function\n  | \"camel-blue\" -> Camel.Blue |> Some\n  | \"camel-orange\" -> Camel.Orange |> Some\n  | \"camel-green\" -> Camel.Green |> Some\n  | \"camel-white\" -> Camel.White |> Some\n  | \"camel-yellow\" -> Camel.Yellow |> Some\n  | _ -> None\n\n\nopen Fable.Import.React\nopen Fable.Import\n\nmodule Draggable =\n  let allowDrop(ev : DragEvent) =\n    ev.preventDefault()\n\n  let dragStart (ev : DragEvent) =\n    let id = (ev.target :?> Fable.Import.Browser.Element).id\n    ev.dataTransfer.setData(\"text\", id) |> ignore\n\nlet camelStackView dispatch (camels : Camel list) fieldIndex =\n    let (x, y) = coordsMapping |> Map.find fieldIndex\n\n    let drop(ev : DragEvent) =\n      ev.preventDefault()\n      let targetCamelElement = (ev.target :?> Fable.Import.Browser.Element)\n      let targetCamel = tryParseCamelFromId targetCamelElement.id\n      let camelId = ev.dataTransfer.getData(\"text\")\n      let camel = tryParseCamelFromId camelId\n      match targetCamel, camel with\n      | Some targetCamel, Some camel -> CamelDropped (camel, OnTopOfCamel (targetCamel)) |> dispatch\n      | _ -> ()\n\n    camels\n    |> List.rev\n    |> List.mapi (\n        fun camelIndex camel ->\n        [div\n              [\n                Id (sprintf \"camel-%s\" (camel.ToString().ToLower() ))\n                Style [\n                    Width (sprintf \"%d%%\"(camelWidth))\n                    Height (sprintf \"%d%%\"(camelHeight))\n                    Left (sprintf \"%d%%\"(x * fieldWidth))\n                    Top (sprintf \"%d%%\"((y+1) * fieldHeight - (camelIndex + 1) * camelHeight))\n                    BackgroundColor (camelColor camel)\n                    CSSProp.Position \"absolute\"\n                    Border \"1px solid black\"\n                    Cursor \"pointer\"\n                    ]\n                Draggable true\n                OnDragStart Draggable.dragStart\n                OnDragOver Draggable.allowDrop\n                OnDrop drop\n              ] []\n        ])\n    |> List.collect id\n\nlet plateView dispatch (plate : Plate) fieldIndex =\n  let (x, y) = coordsMapping |> Map.find fieldIndex\n  let text =\n    match plate with\n    | PlusOne -> \"+1\"\n    | MinusOne -> \"-1\"\n  div [\n       Id (sprintf \"plate-%d\" fieldIndex)\n       Class \"plate\"\n       Draggable true\n       OnDragStart Draggable.dragStart\n       OnDragOver Draggable.allowDrop\n       OnClick (fun _ -> FlipPlate fieldIndex |> dispatch)\n       Style [\n          Left (sprintf \"%d%%\" (x * fieldWidth + plateMargin))\n          Top (sprintf \"%d%%\" (y * fieldHeight + plateMargin))\n       ]\n    ]\n    [Fable.Helpers.React.HTMLNode.Text (text)]\n\nopen System.Text.RegularExpressions\nlet fieldView dispatch fieldIndex  =\n    let drop(ev : DragEvent) =\n      ev.preventDefault()\n      let target = (ev.target :?> Fable.Import.Browser.Element)\n      let fieldIndex = int (Regex.Match(target.id, @\"\\d+\").Value);\n      let draggedItemId = ev.dataTransfer.getData(\"text\")\n\n      let camelId = tryParseCamelFromId draggedItemId\n      match camelId with\n      | Some camelId -> CamelDropped (camelId, OnField (fieldIndex)) |> dispatch\n      | None ->\n        let isMinusPlate = Regex.IsMatch(draggedItemId, \"minus-one-stack\")\n        let isPlusPlate = Regex.IsMatch(draggedItemId, \"plus-one-stack\")\n\n        if isPlusPlate then\n          NewPlateDroppedOnBoard (PlusOne, fieldIndex) |> dispatch\n        else if isMinusPlate then\n          NewPlateDroppedOnBoard (MinusOne, fieldIndex) |> dispatch\n        else\n          let plateIndex = int (Regex.Match(draggedItemId, @\"\\d+\").Value)\n          ExistingPlateDropped (plateIndex, fieldIndex) |> dispatch\n\n    let field ((x,y),i) =\n        [div\n          [\n              Id (sprintf \"field-%d\" i)\n              Style [\n                  Width (sprintf \"%d%%\"(fieldWidth))\n                  Height (sprintf \"%d%%\"(fieldHeight))\n                  Left (sprintf \"%d%%\"(x*fieldWidth))\n                  Top (sprintf \"%d%%\"(y*fieldHeight))\n                  BackgroundColor \"#F0E68C\"\n                  CSSProp.StrokeWidth \"1\"\n                  CSSProp.Stroke \"#000000\"\n                  CSSProp.Position \"absolute\"\n                  Display \"flex\"\n                  AlignItems \"flex-end\"\n                  JustifyContent \"center\"\n                  Border \"2px solid black\"\n              ]\n              OnDrop drop\n              OnDragOver Draggable.allowDrop\n          ]\n          [Fable.Helpers.React.HTMLNode.Text (string (i+1))]\n        ]\n\n    let coord = coordsMapping |> Map.find fieldIndex\n    field (coord, fieldIndex)\n\n\nlet dicesView dispatch dice =\n  div [] (\n    [\n      \"X\", MarkDiceAsUsed dice;\n      \"1\", RollDice (dice, 1);\n      \"2\", RollDice (dice, 2);\n      \"3\", RollDice (dice, 3)\n    ]\n    |> List.map\n        (fun (label, command) ->\n        button [\n            OnClick (fun _ -> command |> dispatch)\n            Style [\n              BackgroundColor (camelColor dice)\n            ]\n          ] [\n            Fable.Helpers.React.HTMLNode.Text label\n          ])\n    )\n\n\nlet resetButtonView dispatch =\n    button [\n        OnClick (fun _ -> ResetDices |> dispatch)\n        Class \"reset-button\"\n    ] [\n      Fable.Helpers.React.HTMLNode.Text \"RESET\"\n    ]\n\nlet boardCenterView (dicesLeft : Camel list) dispatch =\n    div\n        [\n            Id \"pyramid\"\n            Style [\n                Top (sprintf \"%d%%\"(fieldHeight))\n                Left (sprintf \"%d%%\"(fieldWidth))\n                Width (sprintf \"%d%%\"(100 - 2 * fieldWidth))\n                Height (sprintf \"%d%%\"(100 - 2 * fieldHeight))\n                Background \"#FFFACD\"\n                Position \"absolute\"\n                Display \"flex\"\n                FlexDirection \"column\"\n            ]\n        ]\n        [\n            resetButtonView dispatch\n            div[ Class \"dices-grid\"]\n              (dicesLeft |> List.map (dicesView dispatch))\n        ]\n\nlet boardView model dispatch =\n  div [ Style [Width \"500px\"; Height \"500px\"; CSSProp.Position \"relative\"]  ]\n    (\n      let fieldContents =\n        model.Map\n        |> List.ofArray\n        |> List.take Domain.Types.Constants.fieldsCount\n        |> List.indexed\n        |> List.map (function\n          | (i, Some (CamelStack stack)) -> camelStackView dispatch stack i\n          | (i, Some (Plate p)) -> [plateView dispatch p i]\n          | (_, None) -> [])\n        |> List.collect id\n\n     ([0..15] |> List.collect (fieldView dispatch))\n     @ fieldContents\n     @ [boardCenterView model.DicesLeft dispatch]\n    )\n\nlet chancesView title (model : (Camel * float) list option) =\n  match model with\n  | Some chances ->\n    div [\n        Style[MarginLeft \"2em\"]\n    ]\n        [\n          div\n              [Style [FontSize \"1.5em\"]]\n              [Fable.Helpers.React.HTMLNode.Text title]\n          ul\n            []\n            (\n            chances\n              |> List.map (fun (c, f) ->\n                let text = sprintf \"%.5g\" (100. * f)\n                li [Style [Background (camelColor c); FontSize \"1.5em\"]; ] [ Fable.Helpers.React.HTMLNode.Text text])\n            )\n        ]\n  | None -> null\n\nlet chancesSummaryView (model : Model) =\n  div [Class \"chances-summary\"] [\n    chancesView \"STAGE(%)\" model.StageWinChances\n    chancesView \"RACE(%)\" model.RaceWinChances\n  ]\n\nlet platePanel dispatch =\n  div [Class \"plate-panel\"] [\n    div [\n       Id \"plus-one-stack\"\n       Class \"plate-stack\"\n       Draggable true\n       OnDragStart Draggable.dragStart]\n      [Fable.Helpers.React.HTMLNode.Text (\"+1\")]\n    div [\n      Id \"minus-one-stack\"\n      Class \"plate-stack\"\n      Draggable true\n      OnDragStart Draggable.dragStart]\n      [Fable.Helpers.React.HTMLNode.Text (\"-1\")]\n    button [\n      OnClick (fun _ -> dispatch RemovePlates)\n    ] [Fable.Helpers.React.HTMLNode.Text (\"Remove plates\")]\n  ]\n\nlet sidePanel model dispatch =\n  div [Class \"side-panel\"] [\n      chancesSummaryView model\n      platePanel dispatch\n  ]\n\nlet root (model : Model) (dispatch : Msg -> unit) =\n  div\n    [Style [Display \"flex\"] ]\n    [\n      boardView model dispatch\n      sidePanel model dispatch\n    ]\n","module Navbar.View\n\nopen Fable.Helpers.React\nopen Fable.Helpers.React.Props\n\nlet navButton classy href faClass txt =\n    p\n        [ ClassName \"control\" ]\n        [ a\n            [ ClassName (sprintf \"button %s\" classy)\n              Href href ]\n            [ span\n                [ ClassName \"icon\" ]\n                [ i\n                    [ ClassName (sprintf \"fab %s\" faClass) ]\n                    [ ] ]\n              span\n                [ ]\n                [ str txt ] ] ]\n\nlet navButtons =\n    span\n        [ ClassName \"navbar-item\" ]\n        [ div\n            [ ClassName \"field is-grouped\" ]\n            [ navButton \"github\" \"https://github.com/elmish/elmish\" \"fa-github\" \"GitHub\"] ]\n\nlet root =\n    nav\n        [ ClassName \"navbar is-dark\" ]\n        [ div\n            [ ClassName \"container\" ]\n            [ div\n                [ ClassName \"navbar-brand\" ]\n                [ h1\n                    [ ClassName \"navbar-item title is-4\" ]\n                    [ str \"Camel Up probability\" ] ]\n              div\n                [ ClassName \"navbar-end\" ]\n                [ navButtons ] ] ]\n","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str) {\n    try {\n        return [true, new Decimal(str.trim())];\n    }\n    catch (_a) {\n        return [false, get_Zero];\n    }\n}\nexport function parse(str) {\n    const [ok, value] = tryParse(str);\n    if (ok) {\n        return value;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n","namespace Elmish.Browser\n\n\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule Option =\n\n    let tuple a b =\n        match (a,b) with\n        | Some a, Some b -> Some (a,b)\n        | _ -> None\n\n    let ofFunc f arg =\n        try\n            Some (f arg)\n        with _ ->\n            None","import { List, declare, Record } from \"../Types.js\";\nimport { record, array, int32 } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, toInt, op_Modulus, op_Multiply, fromInteger, fromBits } from \"../Long.js\";\nimport { ofList, copy, initialize, map, fill } from \"../Array.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\nexport const BigNat = declare(function BigInt_BigNat(arg1, arg2) {\n  this.bound = arg1 | 0;\n  this.digits = arg2;\n}, Record);\nexport function BigNat$reflection() {\n  return record(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32], [\"digits\", array(int32)]]);\n}\nexport function BigNatModule$002EFFT$$$pow32(x, n) {\n  BigNatModule$002EFFT$$$pow32: while (true) {\n    if (n === 0) {\n      return 1;\n    } else if (n % 2 === 0) {\n      const $n$$2 = n;\n      const $x$$1 = x;\n      x = $x$$1 * $x$$1;\n      n = ~~($n$$2 / 2);\n      continue BigNatModule$002EFFT$$$pow32;\n    } else {\n      return x * BigNatModule$002EFFT$$$pow32(x * x, ~~(n / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$$$leastBounding2Power(b) {\n  const findBounding2Power = function findBounding2Power(b$$1, tp, i) {\n    findBounding2Power: while (true) {\n      if (b$$1 <= tp) {\n        return [tp, i];\n      } else {\n        const $b$$1$$3 = b$$1;\n        const $i$$5 = i;\n        const $tp$$4 = tp;\n        b$$1 = $b$$1$$3;\n        tp = $tp$$4 * 2;\n        i = $i$$5 + 1;\n        continue findBounding2Power;\n      }\n\n      break;\n    }\n  };\n\n  return findBounding2Power(b, 1, 0);\n}\nconst BigNatModule$002EFFT$$$patternInput$004074 = [fromBits(2013265921, 0, false), 27, 15, 31, 440564289];\nexport const BigNatModule$002EFFT$$$w = BigNatModule$002EFFT$$$patternInput$004074[4];\nexport const BigNatModule$002EFFT$$$p = BigNatModule$002EFFT$$$patternInput$004074[0];\nexport const BigNatModule$002EFFT$$$m = BigNatModule$002EFFT$$$patternInput$004074[2];\nexport const BigNatModule$002EFFT$$$k = BigNatModule$002EFFT$$$patternInput$004074[1];\nexport const BigNatModule$002EFFT$$$g = BigNatModule$002EFFT$$$patternInput$004074[3];\nexport const BigNatModule$002EFFT$$$primeP = BigNatModule$002EFFT$$$p;\nexport const BigNatModule$002EFFT$$$maxBitsInsideFp = 30;\nexport const BigNatModule$002EFFT$002EFp$$$p = 2013265921;\nexport const BigNatModule$002EFFT$002EFp$$$p64 = fromBits(2013265921, 0, true);\nexport function BigNatModule$002EFFT$002EFp$$$toInt(x$$1) {\n  return ~~x$$1;\n}\nexport function BigNatModule$002EFFT$002EFp$$$ofInt32(x$$2) {\n  return x$$2 >>> 0;\n}\nexport const BigNatModule$002EFFT$002EFp$$$mzero = 0;\nexport const BigNatModule$002EFFT$002EFp$$$mone = 1;\nexport const BigNatModule$002EFFT$002EFp$$$mtwo = 2;\nexport function BigNatModule$002EFFT$002EFp$$$mpow(x$$3, n$$1) {\n  BigNatModule$002EFFT$002EFp$$$mpow: while (true) {\n    if (n$$1 === 0) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (n$$1 % 2 === 0) {\n      const $n$$1$$7 = n$$1;\n      const $x$$3$$6 = x$$3;\n      x$$3 = toInt(op_Modulus(op_Multiply(fromInteger($x$$3$$6, true, 6), fromInteger($x$$3$$6, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      n$$1 = ~~($n$$1$$7 / 2);\n      continue BigNatModule$002EFFT$002EFp$$$mpow;\n    } else {\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(BigNatModule$002EFFT$002EFp$$$mpow(toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, ~~(n$$1 / 2)), true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$mpowL(x$$7, n$$2) {\n  BigNatModule$002EFFT$002EFp$$$mpowL: while (true) {\n    if (equals(n$$2, fromBits(0, 0, false))) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (equals(op_Modulus(n$$2, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n      const $n$$2$$9 = n$$2;\n      const $x$$7$$8 = x$$7;\n      x$$7 = toInt(op_Modulus(op_Multiply(fromInteger($x$$7$$8, true, 6), fromInteger($x$$7$$8, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      n$$2 = op_Division($n$$2$$9, fromBits(2, 0, false));\n      continue BigNatModule$002EFFT$002EFp$$$mpowL;\n    } else {\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(BigNatModule$002EFFT$002EFp$$$mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, op_Division(n$$2, fromBits(2, 0, false))), true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(n$$3) {\n  return BigNatModule$002EFFT$002EFp$$$mpow(BigNatModule$002EFFT$$$w >>> 0, BigNatModule$002EFFT$$$pow32(2, BigNatModule$002EFFT$$$k - n$$3));\n}\nexport function BigNatModule$002EFFT$002EFp$$$minv(x$$11) {\n  return BigNatModule$002EFFT$002EFp$$$mpowL(x$$11, op_Subtraction(BigNatModule$002EFFT$$$primeP, fromBits(2, 0, false)));\n}\nexport function BigNatModule$002EFFT$$$computeFFT(lambda, mu, n$$4, w, u, res, offset) {\n  if (n$$4 === 1) {\n    res[offset] = u[mu];\n  } else {\n    const halfN = ~~(n$$4 / 2) | 0;\n    const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    const offsetHalfN = offset + halfN | 0;\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n    let wj = BigNatModule$002EFFT$002EFp$$$mone;\n\n    for (let j = 0; j <= halfN - 1; j++) {\n      const even = res[offset + j];\n      const odd = res[offsetHalfN + j];\n      res[offset + j] = (even + (toInt(op_Modulus(op_Multiply(fromInteger(wj, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0)) % BigNatModule$002EFFT$002EFp$$$p;\n      res[offsetHalfN + j] = (even + BigNatModule$002EFFT$002EFp$$$p - (toInt(op_Modulus(op_Multiply(fromInteger(wj, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0)) % BigNatModule$002EFFT$002EFp$$$p;\n      wj = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(wj, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n  }\n}\nexport function BigNatModule$002EFFT$$$computFftInPlace(n$$5, w$$1, u$$1) {\n  const lambda$$1 = 1;\n  const mu$$1 = 0;\n  const res$$1 = fill(new Uint32Array(n$$5), 0, n$$5, BigNatModule$002EFFT$002EFp$$$mzero);\n  const offset$$1 = 0;\n  BigNatModule$002EFFT$$$computeFFT(lambda$$1, mu$$1, n$$5, w$$1, u$$1, res$$1, offset$$1);\n  return res$$1;\n}\nexport function BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$6, w$$2, uT) {\n  const bigKInv = BigNatModule$002EFFT$002EFp$$$minv(n$$6 >>> 0);\n  return map(function (y$$12) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y$$12, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, BigNatModule$002EFFT$$$computFftInPlace(n$$6, BigNatModule$002EFFT$002EFp$$$minv(w$$2), uT), Uint32Array);\n}\nexport const BigNatModule$002EFFT$$$maxTwoPower = 29;\nexport const BigNatModule$002EFFT$$$twoPowerTable = initialize(BigNatModule$002EFFT$$$maxTwoPower - 1, function (i$$1) {\n  return BigNatModule$002EFFT$$$pow32(2, i$$1);\n}, Int32Array);\nexport function BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(bigK, k, u$$2, v) {\n  const w$$3 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(k);\n  const n$$7 = bigK | 0;\n  const uT$$1 = BigNatModule$002EFFT$$$computFftInPlace(n$$7, w$$3, u$$2);\n  const vT = BigNatModule$002EFFT$$$computFftInPlace(n$$7, w$$3, v);\n  const rT = initialize(n$$7, function (i$$2) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(uT$$1[i$$2], true, 6), fromInteger(vT[i$$2], true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r = BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$7, w$$3, rT);\n  return r;\n}\nexport function BigNatModule$002EFFT$$$padTo(n$$8, u$$3) {\n  const uBound = u$$3.length | 0;\n  return initialize(n$$8, function (i$$3) {\n    return i$$3 < uBound ? BigNatModule$002EFFT$002EFp$$$ofInt32(u$$3[i$$3]) : BigNatModule$002EFFT$002EFp$$$mzero;\n  }, Uint32Array);\n}\nexport function BigNatModule$002EFFT$$$computeFftPolynomialProduct(degu, u$$4, degv, v$$1) {\n  const deguv = degu + degv | 0;\n  const bound = deguv + 1 | 0;\n  const patternInput = BigNatModule$002EFFT$$$leastBounding2Power(bound);\n  const w$$4 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(patternInput[1]);\n  const u$$5 = BigNatModule$002EFFT$$$padTo(patternInput[0], u$$4);\n  const v$$2 = BigNatModule$002EFFT$$$padTo(patternInput[0], v$$1);\n  const n$$9 = patternInput[0] | 0;\n  const uT$$2 = BigNatModule$002EFFT$$$computFftInPlace(n$$9, w$$4, u$$5);\n  const vT$$1 = BigNatModule$002EFFT$$$computFftInPlace(n$$9, w$$4, v$$2);\n  const rT$$1 = initialize(n$$9, function (i$$4) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(uT$$2[i$$4], true, 6), fromInteger(vT$$1[i$$4], true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r$$1 = BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$9, w$$4, rT$$1);\n  return map(BigNatModule$002EFFT$002EFp$$$toInt, r$$1, Int32Array);\n}\nexport const BigNatModule$002EFFT$$$mzero = BigNatModule$002EFFT$002EFp$$$mzero;\nexport const BigNatModule$002EFFT$$$mone = BigNatModule$002EFFT$002EFp$$$mone;\nexport const BigNatModule$002EFFT$$$maxFp = (BigNatModule$002EFFT$002EFp$$$p + BigNatModule$002EFFT$002EFp$$$p - BigNatModule$002EFFT$$$mone) % BigNatModule$002EFFT$002EFp$$$p;\nexport function BigNatModule$$$bound(n$$10) {\n  return n$$10.bound;\n}\nexport function BigNatModule$$$setBound(n$$11, v$$3) {\n  n$$11.bound = v$$3;\n}\nexport function BigNatModule$$$coeff(n$$12, i$$5) {\n  return n$$12.digits[i$$5];\n}\nexport function BigNatModule$$$coeff64(n$$13, i$$6) {\n  return fromInteger(BigNatModule$$$coeff(n$$13, i$$6), false, 2);\n}\nexport function BigNatModule$$$setCoeff(n$$14, i$$7, v$$4) {\n  n$$14.digits[i$$7] = v$$4;\n}\nexport function BigNatModule$$$pow64(x$$23, n$$15) {\n  BigNatModule$$$pow64: while (true) {\n    if (n$$15 === 0) {\n      return fromBits(1, 0, false);\n    } else if (n$$15 % 2 === 0) {\n      const $n$$15$$11 = n$$15;\n      const $x$$23$$10 = x$$23;\n      x$$23 = op_Multiply($x$$23$$10, $x$$23$$10);\n      n$$15 = ~~($n$$15$$11 / 2);\n      continue BigNatModule$$$pow64;\n    } else {\n      return op_Multiply(x$$23, BigNatModule$$$pow64(op_Multiply(x$$23, x$$23), ~~(n$$15 / 2)));\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$pow32(x$$24, n$$16) {\n  BigNatModule$$$pow32: while (true) {\n    if (n$$16 === 0) {\n      return 1;\n    } else if (n$$16 % 2 === 0) {\n      const $n$$16$$13 = n$$16;\n      const $x$$24$$12 = x$$24;\n      x$$24 = $x$$24$$12 * $x$$24$$12;\n      n$$16 = ~~($n$$16$$13 / 2);\n      continue BigNatModule$$$pow32;\n    } else {\n      return x$$24 * BigNatModule$$$pow32(x$$24 * x$$24, ~~(n$$16 / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$hash(n$$17) {\n  let res$$2 = 0;\n\n  for (let i$$8 = 0; i$$8 <= n$$17.bound - 1; i$$8++) {\n    res$$2 = n$$17.digits[i$$8] + (res$$2 << 3);\n  }\n\n  return res$$2 | 0;\n}\nexport function BigNatModule$$$maxInt(a, b$$2) {\n  if (a < b$$2) {\n    return b$$2 | 0;\n  } else {\n    return a | 0;\n  }\n}\nexport function BigNatModule$$$minInt(a$$1, b$$3) {\n  if (a$$1 < b$$3) {\n    return a$$1 | 0;\n  } else {\n    return b$$3 | 0;\n  }\n}\nexport const BigNatModule$$$baseBits = 24;\nexport const BigNatModule$$$baseN = 16777216;\nexport const BigNatModule$$$baseMask = 16777215;\nexport const BigNatModule$$$baseNi64 = fromBits(16777216, 0, false);\nexport const BigNatModule$$$baseMaski64 = fromBits(16777215, 0, false);\nexport const BigNatModule$$$baseMaskU = fromBits(16777215, 0, true);\nexport const BigNatModule$$$baseMask32A = 16777215;\nexport const BigNatModule$$$baseMask32B = 255;\nexport const BigNatModule$$$baseShift32B = 24;\nexport const BigNatModule$$$baseMask64A = 16777215;\nexport const BigNatModule$$$baseMask64B = 16777215;\nexport const BigNatModule$$$baseMask64C = 65535;\nexport const BigNatModule$$$baseShift64B = 24;\nexport const BigNatModule$$$baseShift64C = 48;\nexport function BigNatModule$$$divbase(x$$25) {\n  return ~~(x$$25 >>> 0 >>> BigNatModule$$$baseBits);\n}\nexport function BigNatModule$$$modbase(x$$26) {\n  return x$$26 & BigNatModule$$$baseMask;\n}\nexport function BigNatModule$$$createN(b$$4) {\n  return new BigNat(b$$4, new Int32Array(b$$4));\n}\nexport function BigNatModule$$$copyN(x$$27) {\n  return new BigNat(x$$27.bound, copy(x$$27.digits, Int32Array));\n}\nexport function BigNatModule$$$normN(n$$18) {\n  const findLeastBound = function findLeastBound(na, i$$9) {\n    findLeastBound: while (true) {\n      if (i$$9 === -1 ? true : na[i$$9] !== 0) {\n        return i$$9 + 1 | 0;\n      } else {\n        const $i$$9$$15 = i$$9;\n        const $na$$14 = na;\n        na = $na$$14;\n        i$$9 = $i$$9$$15 - 1;\n        continue findLeastBound;\n      }\n\n      break;\n    }\n  };\n\n  const bound$$1 = findLeastBound(n$$18.digits, n$$18.bound - 1) | 0;\n  n$$18.bound = bound$$1;\n  return n$$18;\n}\nexport const BigNatModule$$$boundInt = 2;\nexport const BigNatModule$$$boundInt64 = 3;\nexport const BigNatModule$$$boundBase = 1;\nexport function BigNatModule$$$embed(x$$28) {\n  const x$$29 = (x$$28 < 0 ? 0 : x$$28) | 0;\n\n  if (x$$29 < BigNatModule$$$baseN) {\n    const r$$2 = BigNatModule$$$createN(1);\n    r$$2.digits[0] = x$$29;\n    return BigNatModule$$$normN(r$$2);\n  } else {\n    const r$$3 = BigNatModule$$$createN(BigNatModule$$$boundInt);\n\n    for (let i$$10 = 0; i$$10 <= BigNatModule$$$boundInt - 1; i$$10++) {\n      r$$3.digits[i$$10] = ~~(x$$29 / BigNatModule$$$pow32(BigNatModule$$$baseN, i$$10)) % BigNatModule$$$baseN;\n    }\n\n    return BigNatModule$$$normN(r$$3);\n  }\n}\nexport function BigNatModule$$$embed64(x$$30) {\n  const x$$31 = compare(x$$30, fromBits(0, 0, false)) < 0 ? fromBits(0, 0, false) : x$$30;\n  const r$$4 = BigNatModule$$$createN(BigNatModule$$$boundInt64);\n\n  for (let i$$11 = 0; i$$11 <= BigNatModule$$$boundInt64 - 1; i$$11++) {\n    r$$4.digits[i$$11] = ~~toInt(op_Modulus(op_Division(x$$31, BigNatModule$$$pow64(BigNatModule$$$baseNi64, i$$11)), BigNatModule$$$baseNi64));\n  }\n\n  return BigNatModule$$$normN(r$$4);\n}\nexport function BigNatModule$$$eval32(n$$19) {\n  if (n$$19.bound === 1) {\n    return n$$19.digits[0] | 0;\n  } else {\n    let acc = 0;\n\n    for (let i$$12 = n$$19.bound - 1; i$$12 >= 0; i$$12--) {\n      acc = n$$19.digits[i$$12] + BigNatModule$$$baseN * acc;\n    }\n\n    return acc | 0;\n  }\n}\nexport function BigNatModule$$$eval64(n$$20) {\n  if (n$$20.bound === 1) {\n    return fromInteger(n$$20.digits[0], false, 2);\n  } else {\n    let acc$$1 = fromBits(0, 0, false);\n\n    for (let i$$13 = n$$20.bound - 1; i$$13 >= 0; i$$13--) {\n      acc$$1 = op_Addition(fromInteger(n$$20.digits[i$$13], false, 2), op_Multiply(BigNatModule$$$baseNi64, acc$$1));\n    }\n\n    return acc$$1;\n  }\n}\nexport const BigNatModule$$$one = BigNatModule$$$embed(1);\nexport const BigNatModule$$$zero = BigNatModule$$$embed(0);\nexport function BigNatModule$$$restrictTo(d, n$$21) {\n  return new BigNat(BigNatModule$$$minInt(d, n$$21.bound), n$$21.digits);\n}\nexport function BigNatModule$$$shiftUp(d$$1, n$$22) {\n  const m = BigNatModule$$$createN(n$$22.bound + d$$1);\n\n  for (let i$$14 = 0; i$$14 <= n$$22.bound - 1; i$$14++) {\n    m.digits[i$$14 + d$$1] = n$$22.digits[i$$14];\n  }\n\n  return m;\n}\nexport function BigNatModule$$$shiftDown(d$$2, n$$23) {\n  if (n$$23.bound - d$$2 <= 0) {\n    return BigNatModule$$$zero;\n  } else {\n    const m$$1 = BigNatModule$$$createN(n$$23.bound - d$$2);\n\n    for (let i$$15 = 0; i$$15 <= m$$1.bound - 1; i$$15++) {\n      m$$1.digits[i$$15] = n$$23.digits[i$$15 + d$$2];\n    }\n\n    return m$$1;\n  }\n}\nexport function BigNatModule$$$degree(n$$24) {\n  return n$$24.bound - 1;\n}\nexport function BigNatModule$$$addP(i$$16, n$$25, c, p, q, r$$5) {\n  BigNatModule$$$addP: while (true) {\n    if (i$$16 < n$$25) {\n      const x$$32 = (i$$16 < p.bound ? p.digits[i$$16] : 0) + (i$$16 < q.bound ? q.digits[i$$16] : 0) + c | 0;\n      r$$5.digits[i$$16] = BigNatModule$$$modbase(x$$32);\n      const c$$1 = BigNatModule$$$divbase(x$$32) | 0;\n      const $i$$16$$16 = i$$16;\n      const $n$$25$$17 = n$$25;\n      const $p$$18 = p;\n      const $q$$19 = q;\n      const $r$$5$$20 = r$$5;\n      i$$16 = $i$$16$$16 + 1;\n      n$$25 = $n$$25$$17;\n      c = c$$1;\n      p = $p$$18;\n      q = $q$$19;\n      r$$5 = $r$$5$$20;\n      continue BigNatModule$$$addP;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$add(p$$1, q$$1) {\n  const rbound = 1 + BigNatModule$$$maxInt(p$$1.bound, q$$1.bound) | 0;\n  const r$$6 = BigNatModule$$$createN(rbound);\n  const carry = 0;\n  BigNatModule$$$addP(0, rbound, carry, p$$1, q$$1, r$$6);\n  return BigNatModule$$$normN(r$$6);\n}\nexport function BigNatModule$$$subP(i$$19, n$$26, c$$2, p$$2, q$$2, r$$7) {\n  BigNatModule$$$subP: while (true) {\n    if (i$$19 < n$$26) {\n      const x$$33 = (i$$19 < p$$2.bound ? p$$2.digits[i$$19] : 0) - (i$$19 < q$$2.bound ? q$$2.digits[i$$19] : 0) + c$$2 | 0;\n\n      if (x$$33 > 0) {\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$33);\n        const c$$3 = BigNatModule$$$divbase(x$$33) | 0;\n        const $i$$19$$21 = i$$19;\n        const $n$$26$$22 = n$$26;\n        const $p$$2$$23 = p$$2;\n        const $q$$2$$24 = q$$2;\n        const $r$$7$$25 = r$$7;\n        i$$19 = $i$$19$$21 + 1;\n        n$$26 = $n$$26$$22;\n        c$$2 = c$$3;\n        p$$2 = $p$$2$$23;\n        q$$2 = $q$$2$$24;\n        r$$7 = $r$$7$$25;\n        continue BigNatModule$$$subP;\n      } else {\n        const x$$34 = x$$33 + BigNatModule$$$baseN | 0;\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$34);\n        const c$$4 = BigNatModule$$$divbase(x$$34) - 1 | 0;\n        const $i$$19$$26 = i$$19;\n        const $n$$26$$27 = n$$26;\n        const $p$$2$$28 = p$$2;\n        const $q$$2$$29 = q$$2;\n        const $r$$7$$30 = r$$7;\n        i$$19 = $i$$19$$26 + 1;\n        n$$26 = $n$$26$$27;\n        c$$2 = c$$4;\n        p$$2 = $p$$2$$28;\n        q$$2 = $q$$2$$29;\n        r$$7 = $r$$7$$30;\n        continue BigNatModule$$$subP;\n      }\n    } else {\n      const underflow = c$$2 !== 0;\n      return underflow;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$sub(p$$3, q$$3) {\n  const rbound$$1 = BigNatModule$$$maxInt(p$$3.bound, q$$3.bound) | 0;\n  const r$$8 = BigNatModule$$$createN(rbound$$1);\n  const carry$$1 = 0;\n  const underflow$$1 = BigNatModule$$$subP(0, rbound$$1, carry$$1, p$$3, q$$3, r$$8);\n\n  if (underflow$$1) {\n    return BigNatModule$$$embed(0);\n  } else {\n    return BigNatModule$$$normN(r$$8);\n  }\n}\nexport function BigNatModule$$$isZero(p$$4) {\n  return p$$4.bound === 0;\n}\nexport function BigNatModule$$$IsZero(p$$5) {\n  return BigNatModule$$$isZero(p$$5);\n}\nexport function BigNatModule$$$isOne(p$$6) {\n  if (p$$6.bound === 1) {\n    return p$$6.digits[0] === 1;\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$equal(p$$7, q$$4) {\n  if (p$$7.bound === q$$4.bound) {\n    const check = function check(pa, qa, i$$22) {\n      check: while (true) {\n        if (i$$22 === -1) {\n          return true;\n        } else if (pa[i$$22] === qa[i$$22]) {\n          const $i$$22$$33 = i$$22;\n          const $pa$$31 = pa;\n          const $qa$$32 = qa;\n          pa = $pa$$31;\n          qa = $qa$$32;\n          i$$22 = $i$$22$$33 - 1;\n          continue check;\n        } else {\n          return false;\n        }\n\n        break;\n      }\n    };\n\n    return check(p$$7.digits, q$$4.digits, p$$7.bound - 1);\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$shiftCompare(p$$8, pn, q$$5, qn) {\n  if (p$$8.bound + pn < q$$5.bound + qn) {\n    return -1 | 0;\n  } else if (p$$8.bound + pn > q$$5.bound + pn) {\n    return 1;\n  } else {\n    const check$$1 = function check$$1(pa$$1, qa$$1, i$$23) {\n      check$$1: while (true) {\n        if (i$$23 === -1) {\n          return 0;\n        } else {\n          const pai = (i$$23 < pn ? 0 : pa$$1[i$$23 - pn]) | 0;\n          const qai = (i$$23 < qn ? 0 : qa$$1[i$$23 - qn]) | 0;\n\n          if (pai === qai) {\n            const $i$$23$$36 = i$$23;\n            const $pa$$1$$34 = pa$$1;\n            const $qa$$1$$35 = qa$$1;\n            pa$$1 = $pa$$1$$34;\n            qa$$1 = $qa$$1$$35;\n            i$$23 = $i$$23$$36 - 1;\n            continue check$$1;\n          } else if (pai < qai) {\n            return -1 | 0;\n          } else {\n            return 1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return check$$1(p$$8.digits, q$$5.digits, p$$8.bound + pn - 1) | 0;\n  }\n}\nexport function BigNatModule$$$compare(p$$9, q$$6) {\n  if (p$$9.bound < q$$6.bound) {\n    return -1 | 0;\n  } else if (p$$9.bound > q$$6.bound) {\n    return 1;\n  } else {\n    const check$$2 = function check$$2(pa$$2, qa$$2, i$$24) {\n      check$$2: while (true) {\n        if (i$$24 === -1) {\n          return 0;\n        } else if (pa$$2[i$$24] === qa$$2[i$$24]) {\n          const $i$$24$$39 = i$$24;\n          const $pa$$2$$37 = pa$$2;\n          const $qa$$2$$38 = qa$$2;\n          pa$$2 = $pa$$2$$37;\n          qa$$2 = $qa$$2$$38;\n          i$$24 = $i$$24$$39 - 1;\n          continue check$$2;\n        } else if (pa$$2[i$$24] < qa$$2[i$$24]) {\n          return -1 | 0;\n        } else {\n          return 1;\n        }\n\n        break;\n      }\n    };\n\n    return check$$2(p$$9.digits, q$$6.digits, p$$9.bound - 1) | 0;\n  }\n}\nexport function BigNatModule$$$lt(p$$10, q$$7) {\n  return BigNatModule$$$compare(p$$10, q$$7) === -1;\n}\nexport function BigNatModule$$$gt(p$$11, q$$8) {\n  return BigNatModule$$$compare(p$$11, q$$8) === 1;\n}\nexport function BigNatModule$$$lte(p$$12, q$$9) {\n  return BigNatModule$$$compare(p$$12, q$$9) !== 1;\n}\nexport function BigNatModule$$$gte(p$$13, q$$10) {\n  return BigNatModule$$$compare(p$$13, q$$10) !== -1;\n}\nexport function BigNatModule$$$min(a$$2, b$$5) {\n  if (BigNatModule$$$lt(a$$2, b$$5)) {\n    return a$$2;\n  } else {\n    return b$$5;\n  }\n}\nexport function BigNatModule$$$max(a$$3, b$$6) {\n  if (BigNatModule$$$lt(a$$3, b$$6)) {\n    return b$$6;\n  } else {\n    return a$$3;\n  }\n}\nexport function BigNatModule$$$contributeArr(a$$4, i$$25, c$$5) {\n  BigNatModule$$$contributeArr: while (true) {\n    const x$$35 = op_Addition(fromInteger(a$$4[i$$25], false, 2), c$$5);\n    const c$$6 = op_Division(x$$35, BigNatModule$$$baseNi64);\n    const x$$38 = ~~toInt(op_BitwiseAnd(x$$35, BigNatModule$$$baseMaski64)) | 0;\n    a$$4[i$$25] = x$$38;\n\n    if (compare(c$$6, fromBits(0, 0, false)) > 0) {\n      const $a$$4$$40 = a$$4;\n      const $i$$25$$41 = i$$25;\n      a$$4 = $a$$4$$40;\n      i$$25 = $i$$25$$41 + 1;\n      c$$5 = c$$6;\n      continue BigNatModule$$$contributeArr;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$scale(k$$2, p$$14) {\n  const rbound$$2 = p$$14.bound + BigNatModule$$$boundInt | 0;\n  const r$$9 = BigNatModule$$$createN(rbound$$2);\n  const k$$3 = fromInteger(k$$2, false, 2);\n\n  for (let i$$26 = 0; i$$26 <= p$$14.bound - 1; i$$26++) {\n    const kpi = op_Multiply(k$$3, fromInteger(p$$14.digits[i$$26], false, 2));\n    BigNatModule$$$contributeArr(r$$9.digits, i$$26, kpi);\n  }\n\n  return BigNatModule$$$normN(r$$9);\n}\nexport function BigNatModule$$$mulSchoolBookBothSmall(p$$15, q$$11) {\n  const r$$11 = BigNatModule$$$createN(2);\n  const rak = op_Multiply(fromInteger(p$$15, false, 2), fromInteger(q$$11, false, 2));\n  BigNatModule$$$setCoeff(r$$11, 0, ~~toInt(op_BitwiseAnd(rak, BigNatModule$$$baseMaski64)));\n  BigNatModule$$$setCoeff(r$$11, 1, ~~toInt(op_Division(rak, BigNatModule$$$baseNi64)));\n  return BigNatModule$$$normN(r$$11);\n}\nexport function BigNatModule$$$mulSchoolBookCarry(r$$12, c$$8, k$$4) {\n  BigNatModule$$$mulSchoolBookCarry: while (true) {\n    if (compare(c$$8, fromBits(0, 0, false)) > 0) {\n      const rak$$1 = op_Addition(BigNatModule$$$coeff64(r$$12, k$$4), c$$8);\n      BigNatModule$$$setCoeff(r$$12, k$$4, ~~toInt(op_BitwiseAnd(rak$$1, BigNatModule$$$baseMaski64)));\n      const $k$$4$$43 = k$$4;\n      const $r$$12$$42 = r$$12;\n      r$$12 = $r$$12$$42;\n      c$$8 = op_Division(rak$$1, BigNatModule$$$baseNi64);\n      k$$4 = $k$$4$$43 + 1;\n      continue BigNatModule$$$mulSchoolBookCarry;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$mulSchoolBookOneSmall(p$$16, q$$12) {\n  const bp = BigNatModule$$$bound(p$$16) | 0;\n  const rbound$$3 = bp + 1 | 0;\n  const r$$13 = BigNatModule$$$createN(rbound$$3);\n  const q$$13 = fromInteger(q$$12, false, 2);\n  let c$$9 = fromBits(0, 0, false);\n\n  for (let i$$28 = 0; i$$28 <= bp - 1; i$$28++) {\n    const rak$$2 = op_Addition(op_Addition(c$$9, BigNatModule$$$coeff64(r$$13, i$$28)), op_Multiply(BigNatModule$$$coeff64(p$$16, i$$28), q$$13));\n    BigNatModule$$$setCoeff(r$$13, i$$28, ~~toInt(op_BitwiseAnd(rak$$2, BigNatModule$$$baseMaski64)));\n    c$$9 = op_Division(rak$$2, BigNatModule$$$baseNi64);\n  }\n\n  BigNatModule$$$mulSchoolBookCarry(r$$13, c$$9, bp);\n  return BigNatModule$$$normN(r$$13);\n}\nexport function BigNatModule$$$mulSchoolBookNeitherSmall(p$$17, q$$14) {\n  const rbound$$4 = p$$17.bound + q$$14.bound | 0;\n  const r$$14 = BigNatModule$$$createN(rbound$$4);\n  const ra = r$$14.digits;\n  const pa$$3 = p$$17.digits;\n  const qa$$3 = q$$14.digits;\n\n  for (let i$$29 = 0; i$$29 <= p$$17.bound - 1; i$$29++) {\n    const pai$$1 = fromInteger(pa$$3[i$$29], false, 2);\n    let c$$10 = fromBits(0, 0, false);\n    let k$$5 = i$$29 | 0;\n\n    for (let j$$1 = 0; j$$1 <= q$$14.bound - 1; j$$1++) {\n      const qaj = fromInteger(qa$$3[j$$1], false, 2);\n      const rak$$3 = op_Addition(op_Addition(fromInteger(ra[k$$5], false, 2), c$$10), op_Multiply(pai$$1, qaj));\n      ra[k$$5] = ~~toInt(op_BitwiseAnd(rak$$3, BigNatModule$$$baseMaski64));\n      c$$10 = op_Division(rak$$3, BigNatModule$$$baseNi64);\n      k$$5 = k$$5 + 1;\n    }\n\n    BigNatModule$$$mulSchoolBookCarry(r$$14, c$$10, k$$5);\n  }\n\n  return BigNatModule$$$normN(r$$14);\n}\nexport function BigNatModule$$$mulSchoolBook(p$$18, q$$15) {\n  const pSmall = BigNatModule$$$bound(p$$18) === 1;\n  const qSmall = BigNatModule$$$bound(q$$15) === 1;\n\n  if (pSmall ? qSmall : false) {\n    return BigNatModule$$$mulSchoolBookBothSmall(BigNatModule$$$coeff(p$$18, 0), BigNatModule$$$coeff(q$$15, 0));\n  } else if (pSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(q$$15, BigNatModule$$$coeff(p$$18, 0));\n  } else if (qSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(p$$18, BigNatModule$$$coeff(q$$15, 0));\n  } else {\n    return BigNatModule$$$mulSchoolBookNeitherSmall(p$$18, q$$15);\n  }\n}\nexport const BigNatModule$002Eencoding = declare(function BigInt_BigNatModule_encoding(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n  this.bigL = arg1 | 0;\n  this.twoToBigL = arg2 | 0;\n  this.k = arg3 | 0;\n  this.bigK = arg4 | 0;\n  this.bigN = arg5 | 0;\n  this.split = arg6 | 0;\n  this.splits = arg7;\n}, Record);\nexport function BigNatModule$002Eencoding$reflection() {\n  return record(\"BigInt.BigNatModule.encoding\", [], BigNatModule$002Eencoding, () => [[\"bigL\", int32], [\"twoToBigL\", int32], [\"k\", int32], [\"bigK\", int32], [\"bigN\", int32], [\"split\", int32], [\"splits\", array(int32)]]);\n}\nexport function BigNatModule$$$mkEncoding(bigL, k$$6, bigK$$2, bigN) {\n  return new BigNatModule$002Eencoding(bigL, BigNatModule$$$pow32(2, bigL), k$$6, bigK$$2, bigN, ~~(BigNatModule$$$baseBits / bigL), initialize(~~(BigNatModule$$$baseBits / bigL), function (i$$30) {\n    return BigNatModule$$$pow32(2, bigL * i$$30);\n  }, Int32Array));\n}\nexport const BigNatModule$$$table = [BigNatModule$$$mkEncoding(1, 28, 268435456, 268435456), BigNatModule$$$mkEncoding(2, 26, 67108864, 134217728), BigNatModule$$$mkEncoding(3, 24, 16777216, 50331648), BigNatModule$$$mkEncoding(4, 22, 4194304, 16777216), BigNatModule$$$mkEncoding(5, 20, 1048576, 5242880), BigNatModule$$$mkEncoding(6, 18, 262144, 1572864), BigNatModule$$$mkEncoding(7, 16, 65536, 458752), BigNatModule$$$mkEncoding(8, 14, 16384, 131072), BigNatModule$$$mkEncoding(9, 12, 4096, 36864), BigNatModule$$$mkEncoding(10, 10, 1024, 10240), BigNatModule$$$mkEncoding(11, 8, 256, 2816), BigNatModule$$$mkEncoding(12, 6, 64, 768), BigNatModule$$$mkEncoding(13, 4, 16, 208)];\nexport function BigNatModule$$$calculateTableTow(bigL$$1) {\n  const k$$7 = BigNatModule$002EFFT$$$maxBitsInsideFp - 2 * bigL$$1 | 0;\n  const bigK$$3 = BigNatModule$$$pow64(fromBits(2, 0, false), k$$7);\n  const N = op_Multiply(bigK$$3, fromInteger(bigL$$1, false, 2));\n  return [bigL$$1, k$$7, bigK$$3, N];\n}\nexport function BigNatModule$$$encodingGivenResultBits(bitsRes) {\n  const selectFrom = function selectFrom(i$$31) {\n    selectFrom: while (true) {\n      if (i$$31 + 1 < BigNatModule$$$table.length ? bitsRes < BigNatModule$$$table[i$$31 + 1].bigN : false) {\n        const $i$$31$$44 = i$$31;\n        i$$31 = $i$$31$$44 + 1;\n        continue selectFrom;\n      } else {\n        return BigNatModule$$$table[i$$31];\n      }\n\n      break;\n    }\n  };\n\n  if (bitsRes >= BigNatModule$$$table[0].bigN) {\n    throw new Error(\"Product is huge, around 268435456 bits, beyond quickmul\");\n  } else {\n    return selectFrom(0);\n  }\n}\nexport const BigNatModule$$$bitmask = initialize(BigNatModule$$$baseBits, function (i$$32) {\n  return BigNatModule$$$pow32(2, i$$32) - 1;\n}, Int32Array);\nexport const BigNatModule$$$twopowers = initialize(BigNatModule$$$baseBits, function (i$$33) {\n  return BigNatModule$$$pow32(2, i$$33);\n}, Int32Array);\nexport const BigNatModule$$$twopowersI64 = initialize(BigNatModule$$$baseBits, function (i$$34) {\n  return BigNatModule$$$pow64(fromBits(2, 0, false), i$$34);\n}, Array);\nexport function BigNatModule$$$wordBits(word) {\n  const hi = function hi(k$$8) {\n    hi: while (true) {\n      if (k$$8 === 0) {\n        return 0;\n      } else if ((word & BigNatModule$$$twopowers[k$$8 - 1]) !== 0) {\n        return k$$8 | 0;\n      } else {\n        const $k$$8$$45 = k$$8;\n        k$$8 = $k$$8$$45 - 1;\n        continue hi;\n      }\n\n      break;\n    }\n  };\n\n  return hi(BigNatModule$$$baseBits) | 0;\n}\nexport function BigNatModule$$$bits(u$$6) {\n  if (u$$6.bound === 0) {\n    return 0;\n  } else {\n    return BigNatModule$$$degree(u$$6) * BigNatModule$$$baseBits + BigNatModule$$$wordBits(u$$6.digits[BigNatModule$$$degree(u$$6)]) | 0;\n  }\n}\nexport function BigNatModule$$$extractBits(n$$27, enc, bi) {\n  const bj = bi + enc.bigL - 1 | 0;\n  const biw = ~~(bi / BigNatModule$$$baseBits) | 0;\n  const bjw = ~~(bj / BigNatModule$$$baseBits) | 0;\n\n  if (biw !== bjw) {\n    const x$$47 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const y$$17 = (bjw < n$$27.bound ? n$$27.digits[bjw] : 0) | 0;\n    const xbit = bi % BigNatModule$$$baseBits | 0;\n    const nxbits = BigNatModule$$$baseBits - xbit | 0;\n    const x$$48 = x$$47 >> xbit | 0;\n    const y$$18 = y$$17 << nxbits | 0;\n    const x$$49 = x$$48 | y$$18 | 0;\n    const x$$50 = x$$49 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$50 | 0;\n  } else {\n    const x$$51 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const xbit$$1 = bi % BigNatModule$$$baseBits | 0;\n    const x$$52 = x$$51 >> xbit$$1 | 0;\n    const x$$53 = x$$52 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$53 | 0;\n  }\n}\nexport function BigNatModule$$$encodePoly(enc$$1, n$$28) {\n  const poly = fill(new Uint32Array(enc$$1.bigK), 0, enc$$1.bigK, BigNatModule$002EFFT$002EFp$$$ofInt32(0));\n  const biMax = n$$28.bound * BigNatModule$$$baseBits | 0;\n\n  const encoder = function encoder(i$$38, bi$$1) {\n    encoder: while (true) {\n      if (i$$38 === enc$$1.bigK ? true : bi$$1 > biMax) {} else {\n        const pi = BigNatModule$$$extractBits(n$$28, enc$$1, bi$$1) | 0;\n        poly[i$$38] = BigNatModule$002EFFT$002EFp$$$ofInt32(pi);\n        const i$$39 = i$$38 + 1 | 0;\n        const bi$$2 = bi$$1 + enc$$1.bigL | 0;\n        i$$38 = i$$39;\n        bi$$1 = bi$$2;\n        continue encoder;\n      }\n\n      break;\n    }\n  };\n\n  encoder(0, 0);\n  return poly;\n}\nexport function BigNatModule$$$decodeResultBits(enc$$2, poly$$1) {\n  let n$$29 = 0;\n\n  for (let i$$40 = 0; i$$40 <= poly$$1.length - 1; i$$40++) {\n    if (poly$$1[i$$40] !== BigNatModule$002EFFT$$$mzero) {\n      n$$29 = i$$40;\n    }\n  }\n\n  const rbits = BigNatModule$002EFFT$$$maxBitsInsideFp + enc$$2.bigL * n$$29 + 1 | 0;\n  return rbits + 1 | 0;\n}\nexport function BigNatModule$$$decodePoly(enc$$3, poly$$2) {\n  const rbound$$5 = ~~(BigNatModule$$$decodeResultBits(enc$$3, poly$$2) / BigNatModule$$$baseBits) + 1 | 0;\n  const r$$15 = BigNatModule$$$createN(rbound$$5);\n\n  const evaluate = function evaluate(i$$41, j$$2, d$$3) {\n    evaluate: while (true) {\n      if (i$$41 === enc$$3.bigK) {} else {\n        if (j$$2 >= rbound$$5) {} else {\n          const x$$54 = op_Multiply(fromInteger(BigNatModule$002EFFT$002EFp$$$toInt(poly$$2[i$$41]), false, 2), BigNatModule$$$twopowersI64[d$$3]);\n          BigNatModule$$$contributeArr(r$$15.digits, j$$2, x$$54);\n        }\n\n        const i$$43 = i$$41 + 1 | 0;\n        const d$$4 = d$$3 + enc$$3.bigL | 0;\n        const patternInput$$1 = d$$4 >= BigNatModule$$$baseBits ? [j$$2 + 1, d$$4 - BigNatModule$$$baseBits] : [j$$2, d$$4];\n        i$$41 = i$$43;\n        j$$2 = patternInput$$1[0];\n        d$$3 = patternInput$$1[1];\n        continue evaluate;\n      }\n\n      break;\n    }\n  };\n\n  evaluate(0, 0, 0);\n  return BigNatModule$$$normN(r$$15);\n}\nexport function BigNatModule$$$quickMulUsingFft(u$$7, v$$5) {\n  const bitsRes$$1 = BigNatModule$$$bits(u$$7) + BigNatModule$$$bits(v$$5) | 0;\n  const enc$$4 = BigNatModule$$$encodingGivenResultBits(bitsRes$$1);\n  const upoly = BigNatModule$$$encodePoly(enc$$4, u$$7);\n  const vpoly = BigNatModule$$$encodePoly(enc$$4, v$$5);\n  const rpoly = BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(enc$$4.bigK, enc$$4.k, upoly, vpoly);\n  const r$$17 = BigNatModule$$$decodePoly(enc$$4, rpoly);\n  return BigNatModule$$$normN(r$$17);\n}\nexport const BigNatModule$$$minDigitsKaratsuba = 16;\nexport function BigNatModule$$$recMulKaratsuba(mul, p$$19, q$$16) {\n  const bp$$1 = p$$19.bound | 0;\n  const bq = q$$16.bound | 0;\n  const bmax = BigNatModule$$$maxInt(bp$$1, bq) | 0;\n\n  if (bmax > BigNatModule$$$minDigitsKaratsuba) {\n    const k$$9 = ~~(bmax / 2) | 0;\n    const a0 = BigNatModule$$$restrictTo(k$$9, p$$19);\n    const a1 = BigNatModule$$$shiftDown(k$$9, p$$19);\n    const b0 = BigNatModule$$$restrictTo(k$$9, q$$16);\n    const b1 = BigNatModule$$$shiftDown(k$$9, q$$16);\n    const q0 = mul(a0, b0);\n    const q1 = mul(BigNatModule$$$add(a0, a1), BigNatModule$$$add(b0, b1));\n    const q2 = mul(a1, b1);\n    const p0 = q0;\n    const p1 = BigNatModule$$$sub(q1, BigNatModule$$$add(q0, q2));\n    const p2 = q2;\n    const r$$18 = BigNatModule$$$add(p0, BigNatModule$$$shiftUp(k$$9, BigNatModule$$$add(p1, BigNatModule$$$shiftUp(k$$9, p2))));\n    return r$$18;\n  } else {\n    return BigNatModule$$$mulSchoolBook(p$$19, q$$16);\n  }\n}\nexport function BigNatModule$$$mulKaratsuba(x$$55, y$$19) {\n  return BigNatModule$$$recMulKaratsuba(BigNatModule$$$mulKaratsuba, x$$55, y$$19);\n}\nexport const BigNatModule$$$productDigitsUpperSchoolBook = ~~(64000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$singleDigitForceSchoolBook = ~~(32000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$productDigitsUpperFft = ~~(BigNatModule$$$table[0].bigN / BigNatModule$$$baseBits);\nexport function BigNatModule$$$mul(p$$20, q$$17) {\n  return BigNatModule$$$mulSchoolBook(p$$20, q$$17);\n}\nexport function BigNatModule$$$scaleSubInPlace(x$$57, f, a$$5, n$$30) {\n  const invariant = function invariant(tupledArg) {};\n\n  const xres = x$$57;\n  const patternInput$$2 = [x$$57.digits, BigNatModule$$$degree(x$$57)];\n  const patternInput$$3 = [a$$5.digits, BigNatModule$$$degree(a$$5)];\n  const f$$1 = fromInteger(f, false, 2);\n  let j$$4 = 0;\n  let z$$7 = op_Multiply(f$$1, fromInteger(patternInput$$3[0][0], false, 2));\n\n  while (compare(z$$7, fromBits(0, 0, false)) > 0 ? true : j$$4 < patternInput$$3[1]) {\n    if (j$$4 > patternInput$$2[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    }\n\n    invariant([z$$7, j$$4, n$$30]);\n    let zLo = ~~toInt(op_BitwiseAnd(z$$7, BigNatModule$$$baseMaski64)) | 0;\n    let zHi = op_Division(z$$7, BigNatModule$$$baseNi64);\n\n    if (zLo <= patternInput$$2[0][j$$4 + n$$30]) {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] - zLo;\n    } else {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] + (BigNatModule$$$baseN - zLo);\n      zHi = op_Addition(zHi, fromBits(1, 0, false));\n    }\n\n    if (j$$4 < patternInput$$3[1]) {\n      z$$7 = op_Addition(zHi, op_Multiply(f$$1, fromInteger(patternInput$$3[0][j$$4 + 1], false, 2)));\n    } else {\n      z$$7 = zHi;\n    }\n\n    j$$4 = j$$4 + 1;\n  }\n\n  BigNatModule$$$normN(xres), null;\n}\nexport function BigNatModule$$$scaleSub(x$$61, f$$2, a$$7, n$$31) {\n  const freshx = BigNatModule$$$add(x$$61, BigNatModule$$$zero);\n  BigNatModule$$$scaleSubInPlace(freshx, f$$2, a$$7, n$$31);\n  return BigNatModule$$$normN(freshx);\n}\nexport function BigNatModule$$$scaleAddInPlace(x$$62, f$$3, a$$8, n$$32) {\n  const invariant$$1 = function invariant$$1(tupledArg$$1) {};\n\n  const xres$$1 = x$$62;\n  const patternInput$$4 = [x$$62.digits, BigNatModule$$$degree(x$$62)];\n  const patternInput$$5 = [a$$8.digits, BigNatModule$$$degree(a$$8)];\n  const f$$4 = fromInteger(f$$3, false, 2);\n  let j$$5 = 0;\n  let z$$8 = op_Multiply(f$$4, fromInteger(patternInput$$5[0][0], false, 2));\n\n  while (compare(z$$8, fromBits(0, 0, false)) > 0 ? true : j$$5 < patternInput$$5[1]) {\n    if (j$$5 > patternInput$$4[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    }\n\n    invariant$$1([z$$8, j$$5, n$$32]);\n    let zLo$$1 = ~~toInt(op_BitwiseAnd(z$$8, BigNatModule$$$baseMaski64)) | 0;\n    let zHi$$1 = op_Division(z$$8, BigNatModule$$$baseNi64);\n\n    if (zLo$$1 < BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]) {\n      patternInput$$4[0][j$$5 + n$$32] = patternInput$$4[0][j$$5 + n$$32] + zLo$$1;\n    } else {\n      patternInput$$4[0][j$$5 + n$$32] = zLo$$1 - (BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]);\n      zHi$$1 = op_Addition(zHi$$1, fromBits(1, 0, false));\n    }\n\n    if (j$$5 < patternInput$$5[1]) {\n      z$$8 = op_Addition(zHi$$1, op_Multiply(f$$4, fromInteger(patternInput$$5[0][j$$5 + 1], false, 2)));\n    } else {\n      z$$8 = zHi$$1;\n    }\n\n    j$$5 = j$$5 + 1;\n  }\n\n  BigNatModule$$$normN(xres$$1), null;\n}\nexport function BigNatModule$$$scaleAdd(x$$66, f$$5, a$$10, n$$33) {\n  const freshx$$1 = BigNatModule$$$add(x$$66, BigNatModule$$$zero);\n  BigNatModule$$$scaleAddInPlace(freshx$$1, f$$5, a$$10, n$$33);\n  return BigNatModule$$$normN(freshx$$1);\n}\nexport function BigNatModule$$$removeFactor(x$$67, a$$11, n$$34) {\n  const patternInput$$6 = [BigNatModule$$$degree(a$$11), BigNatModule$$$degree(x$$67)];\n\n  if (patternInput$$6[1] < patternInput$$6[0] + n$$34) {\n    return 0;\n  } else {\n    const patternInput$$7 = [a$$11.digits, x$$67.digits];\n    let f$$6;\n\n    if (patternInput$$6[0] === 0) {\n      if (patternInput$$6[1] === n$$34) {\n        f$$6 = ~~(patternInput$$7[1][n$$34] / patternInput$$7[0][0]);\n      } else {\n        const f64 = op_Division(op_Addition(op_Multiply(fromInteger(patternInput$$7[1][patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(patternInput$$7[1][patternInput$$6[1] - 1], false, 2)), fromInteger(patternInput$$7[0][0], false, 2));\n        f$$6 = ~~toInt(f64);\n      }\n    } else if (patternInput$$6[1] === patternInput$$6[0] + n$$34) {\n      f$$6 = ~~(patternInput$$7[1][patternInput$$6[1]] / (patternInput$$7[0][patternInput$$6[0]] + 1));\n    } else {\n      const f64$$1 = op_Division(op_Addition(op_Multiply(fromInteger(patternInput$$7[1][patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(patternInput$$7[1][patternInput$$6[1] - 1], false, 2)), op_Addition(fromInteger(patternInput$$7[0][patternInput$$6[0]], false, 2), fromBits(1, 0, false)));\n      f$$6 = ~~toInt(f64$$1);\n    }\n\n    if (f$$6 === 0) {\n      const lte = BigNatModule$$$shiftCompare(a$$11, n$$34, x$$67, 0) !== 1;\n\n      if (lte) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else {\n      return f$$6 | 0;\n    }\n  }\n}\nexport function BigNatModule$$$divmod(b$$7, a$$12) {\n  if (BigNatModule$$$isZero(a$$12)) {\n    throw new Error();\n  } else if (BigNatModule$$$degree(b$$7) < BigNatModule$$$degree(a$$12)) {\n    return [BigNatModule$$$zero, b$$7];\n  } else {\n    const x$$68 = BigNatModule$$$copyN(b$$7);\n    const d$$6 = BigNatModule$$$createN(BigNatModule$$$degree(b$$7) - BigNatModule$$$degree(a$$12) + 1 + 1);\n    let p$$21 = BigNatModule$$$degree(b$$7) | 0;\n    const m$$2 = BigNatModule$$$degree(a$$12) | 0;\n    let n$$35 = p$$21 - m$$2 | 0;\n\n    const Invariant = function Invariant(tupledArg$$2) {};\n\n    let finished = false;\n\n    while (!finished) {\n      Invariant([d$$6, x$$68, n$$35, p$$21]);\n      const f$$7 = BigNatModule$$$removeFactor(x$$68, a$$12, n$$35) | 0;\n\n      if (f$$7 > 0) {\n        BigNatModule$$$scaleSubInPlace(x$$68, f$$7, a$$12, n$$35);\n        BigNatModule$$$scaleAddInPlace(d$$6, f$$7, BigNatModule$$$one, n$$35);\n        Invariant([d$$6, x$$68, n$$35, p$$21]);\n      } else {\n        finished = f$$7 === 0 ? n$$35 === 0 : false;\n\n        if (!finished) {\n          if (p$$21 === m$$2 + n$$35) {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21]);\n            n$$35 = n$$35 - 1;\n          } else {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21 - 1]);\n            n$$35 = n$$35 - 1;\n            p$$21 = p$$21 - 1;\n          }\n        }\n      }\n    }\n\n    return [BigNatModule$$$normN(d$$6), BigNatModule$$$normN(x$$68)];\n  }\n}\nexport function BigNatModule$$$div(b$$8, a$$13) {\n  return BigNatModule$$$divmod(b$$8, a$$13)[0];\n}\nexport function BigNatModule$$$rem(b$$9, a$$14) {\n  return BigNatModule$$$divmod(b$$9, a$$14)[1];\n}\nexport function BigNatModule$$$bitAnd(a$$15, b$$10) {\n  const rbound$$6 = BigNatModule$$$minInt(a$$15.bound, b$$10.bound) | 0;\n  const r$$19 = BigNatModule$$$createN(rbound$$6);\n\n  for (let i$$44 = 0; i$$44 <= r$$19.bound - 1; i$$44++) {\n    r$$19.digits[i$$44] = a$$15.digits[i$$44] & b$$10.digits[i$$44];\n  }\n\n  return BigNatModule$$$normN(r$$19);\n}\nexport function BigNatModule$$$bitOr(a$$16, b$$11) {\n  const rbound$$7 = BigNatModule$$$maxInt(a$$16.bound, b$$11.bound) | 0;\n  const r$$20 = BigNatModule$$$createN(rbound$$7);\n\n  for (let i$$45 = 0; i$$45 <= a$$16.bound - 1; i$$45++) {\n    r$$20.digits[i$$45] = r$$20.digits[i$$45] | a$$16.digits[i$$45];\n  }\n\n  for (let i$$46 = 0; i$$46 <= b$$11.bound - 1; i$$46++) {\n    r$$20.digits[i$$46] = r$$20.digits[i$$46] | b$$11.digits[i$$46];\n  }\n\n  return BigNatModule$$$normN(r$$20);\n}\nexport function BigNatModule$$$bitXor(a$$17, b$$12) {\n  const rbound$$8 = BigNatModule$$$maxInt(a$$17.bound, b$$12.bound) | 0;\n  const r$$21 = BigNatModule$$$createN(rbound$$8);\n\n  for (let i$$47 = 0; i$$47 <= a$$17.bound - 1; i$$47++) {\n    r$$21.digits[i$$47] = r$$21.digits[i$$47] ^ a$$17.digits[i$$47];\n  }\n\n  for (let i$$48 = 0; i$$48 <= b$$12.bound - 1; i$$48++) {\n    r$$21.digits[i$$48] = r$$21.digits[i$$48] ^ b$$12.digits[i$$48];\n  }\n\n  return BigNatModule$$$normN(r$$21);\n}\nexport function BigNatModule$$$hcf(a$$18, b$$13) {\n  const hcfloop = function hcfloop(a$$19, b$$14) {\n    hcfloop: while (true) {\n      if (BigNatModule$$$equal(BigNatModule$$$zero, a$$19)) {\n        return b$$14;\n      } else {\n        const patternInput$$8 = BigNatModule$$$divmod(b$$14, a$$19);\n        const $a$$19$$49 = a$$19;\n        a$$19 = patternInput$$8[1];\n        b$$14 = $a$$19$$49;\n        continue hcfloop;\n      }\n\n      break;\n    }\n  };\n\n  if (BigNatModule$$$lt(a$$18, b$$13)) {\n    return hcfloop(a$$18, b$$13);\n  } else {\n    return hcfloop(b$$13, a$$18);\n  }\n}\nexport const BigNatModule$$$two = BigNatModule$$$embed(2);\nexport function BigNatModule$$$powi(x$$69, n$$36) {\n  const power = function power(acc$$2, x$$70, n$$37) {\n    power: while (true) {\n      if (n$$37 === 0) {\n        return acc$$2;\n      } else if (n$$37 % 2 === 0) {\n        const $acc$$2$$50 = acc$$2;\n        const $n$$37$$52 = n$$37;\n        const $x$$70$$51 = x$$70;\n        acc$$2 = $acc$$2$$50;\n        x$$70 = BigNatModule$$$mul($x$$70$$51, $x$$70$$51);\n        n$$37 = ~~($n$$37$$52 / 2);\n        continue power;\n      } else {\n        const $acc$$2$$53 = acc$$2;\n        const $n$$37$$55 = n$$37;\n        const $x$$70$$54 = x$$70;\n        acc$$2 = BigNatModule$$$mul($x$$70$$54, $acc$$2$$53);\n        x$$70 = BigNatModule$$$mul($x$$70$$54, $x$$70$$54);\n        n$$37 = ~~($n$$37$$55 / 2);\n        continue power;\n      }\n\n      break;\n    }\n  };\n\n  return power(BigNatModule$$$one, x$$69, n$$36);\n}\nexport function BigNatModule$$$pow(x$$71, n$$38) {\n  const power$$1 = function power$$1(acc$$3, x$$72, n$$39) {\n    power$$1: while (true) {\n      if (BigNatModule$$$isZero(n$$39)) {\n        return acc$$3;\n      } else {\n        const patternInput$$9 = BigNatModule$$$divmod(n$$39, BigNatModule$$$two);\n\n        if (BigNatModule$$$isZero(patternInput$$9[1])) {\n          const $acc$$3$$56 = acc$$3;\n          const $x$$72$$57 = x$$72;\n          acc$$3 = $acc$$3$$56;\n          x$$72 = BigNatModule$$$mul($x$$72$$57, $x$$72$$57);\n          n$$39 = patternInput$$9[0];\n          continue power$$1;\n        } else {\n          const $acc$$3$$58 = acc$$3;\n          const $x$$72$$59 = x$$72;\n          acc$$3 = BigNatModule$$$mul($x$$72$$59, $acc$$3$$58);\n          x$$72 = BigNatModule$$$mul($x$$72$$59, $x$$72$$59);\n          n$$39 = patternInput$$9[0];\n          continue power$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return power$$1(BigNatModule$$$one, x$$71, n$$38);\n}\nexport function BigNatModule$$$toFloat(n$$40) {\n  const basef = BigNatModule$$$baseN;\n\n  const evalFloat = function evalFloat(acc$$4, k$$10, i$$49) {\n    evalFloat: while (true) {\n      if (i$$49 === n$$40.bound) {\n        return acc$$4;\n      } else {\n        const $acc$$4$$60 = acc$$4;\n        const $i$$49$$62 = i$$49;\n        const $k$$10$$61 = k$$10;\n        acc$$4 = $acc$$4$$60 + $k$$10$$61 * n$$40.digits[$i$$49$$62];\n        k$$10 = $k$$10$$61 * basef;\n        i$$49 = $i$$49$$62 + 1;\n        continue evalFloat;\n      }\n\n      break;\n    }\n  };\n\n  return evalFloat(0, 1, 0);\n}\nexport function BigNatModule$$$ofInt32(n$$41) {\n  return BigNatModule$$$embed(n$$41);\n}\nexport function BigNatModule$$$ofInt64(n$$42) {\n  return BigNatModule$$$embed64(n$$42);\n}\nexport function BigNatModule$$$toUInt32(n$$43) {\n  const matchValue = n$$43.bound | 0;\n\n  switch (matchValue) {\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        return n$$43.digits[0] >>> 0;\n      }\n\n    case 2:\n      {\n        const patternInput$$10 = [n$$43.digits[0], n$$43.digits[1]];\n\n        if (patternInput$$10[1] > BigNatModule$$$baseMask32B) {\n          throw new Error();\n        }\n\n        return ((patternInput$$10[0] & BigNatModule$$$baseMask32A) >>> 0) + ((patternInput$$10[1] & BigNatModule$$$baseMask32B) >>> 0 << BigNatModule$$$baseShift32B >>> 0);\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toUInt64(n$$44) {\n  const matchValue$$1 = n$$44.bound | 0;\n\n  switch (matchValue$$1) {\n    case 0:\n      {\n        return fromBits(0, 0, true);\n      }\n\n    case 1:\n      {\n        return fromInteger(n$$44.digits[0], true, 2);\n      }\n\n    case 2:\n      {\n        const patternInput$$11 = [n$$44.digits[0], n$$44.digits[1]];\n        return op_Addition(fromInteger(patternInput$$11[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$11[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B));\n      }\n\n    case 3:\n      {\n        const patternInput$$12 = [n$$44.digits[0], n$$44.digits[1], n$$44.digits[2]];\n\n        if (patternInput$$12[2] > BigNatModule$$$baseMask64C) {\n          throw new Error();\n        }\n\n        return op_Addition(op_Addition(fromInteger(patternInput$$12[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$12[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B)), op_LeftShift(fromInteger(patternInput$$12[2] & BigNatModule$$$baseMask64C, true, 2), BigNatModule$$$baseShift64C));\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toString(n$$45) {\n  const degn = BigNatModule$$$degree(n$$45) | 0;\n\n  const route = function route(prior, k$$11, ten2k) {\n    route: while (true) {\n      if (BigNatModule$$$degree(ten2k) > degn) {\n        return new List([k$$11, ten2k], prior);\n      } else {\n        const $k$$11$$64 = k$$11;\n        const $prior$$63 = prior;\n        const $ten2k$$65 = ten2k;\n        prior = new List([$k$$11$$64, $ten2k$$65], $prior$$63);\n        k$$11 = $k$$11$$64 + 1;\n        ten2k = BigNatModule$$$mul($ten2k$$65, $ten2k$$65);\n        continue route;\n      }\n\n      break;\n    }\n  };\n\n  const kten2ks = route(new List(), 0, BigNatModule$$$embed(10));\n\n  const collect = function collect(isLeading, digits, n$$46, _arg1$$3) {\n    if (_arg1$$3.tail != null) {\n      const ten2k$$1 = _arg1$$3.head[1];\n      const prior$$1 = _arg1$$3.tail;\n      const patternInput$$13 = BigNatModule$$$divmod(n$$46, ten2k$$1);\n\n      if (isLeading ? BigNatModule$$$isZero(patternInput$$13[0]) : false) {\n        const digits$$1 = collect(isLeading, digits, patternInput$$13[1], prior$$1);\n        return digits$$1;\n      } else {\n        const digits$$2 = collect(false, digits, patternInput$$13[1], prior$$1);\n        const digits$$3 = collect(isLeading, digits$$2, patternInput$$13[0], prior$$1);\n        return digits$$3;\n      }\n    } else {\n      const n$$47 = BigNatModule$$$eval32(n$$46) | 0;\n\n      if (isLeading ? n$$47 === 0 : false) {\n        return digits;\n      } else {\n        return new List(int32ToString(n$$47), digits);\n      }\n    }\n  };\n\n  const prior$$2 = kten2ks;\n  const digits$$4 = collect(true, new List(), n$$45, prior$$2);\n\n  if (digits$$4.tail == null) {\n    return \"0\";\n  } else {\n    return join(\"\", ...ofList(digits$$4, Array));\n  }\n}\nexport function BigNatModule$$$ofString(str) {\n  const len = str.length | 0;\n\n  if (isNullOrEmpty(str)) {\n    throw new Error(\"empty string\\\\nParameter name: str\");\n  }\n\n  const ten = BigNatModule$$$embed(10);\n\n  const build = function build(acc$$5, i$$50) {\n    build: while (true) {\n      if (i$$50 === len) {\n        return acc$$5;\n      } else {\n        const c$$12 = str[i$$50];\n        const d$$7 = c$$12.charCodeAt(0) - \"0\".charCodeAt(0) | 0;\n\n        if (0 <= d$$7 ? d$$7 <= 9 : false) {\n          const $acc$$5$$66 = acc$$5;\n          const $i$$50$$67 = i$$50;\n          acc$$5 = BigNatModule$$$add(BigNatModule$$$mul(ten, $acc$$5$$66), BigNatModule$$$embed(d$$7));\n          i$$50 = $i$$50$$67 + 1;\n          continue build;\n        } else {\n          throw new Error();\n        }\n      }\n\n      break;\n    }\n  };\n\n  return build(BigNatModule$$$embed(0), 0);\n}\nexport function BigNatModule$$$isSmall(n$$48) {\n  return n$$48.bound <= 1;\n}\nexport function BigNatModule$$$getSmall(n$$49) {\n  if (0 < n$$49.bound) {\n    return n$$49.digits[0] | 0;\n  } else {\n    return 0;\n  }\n}\nexport function BigNatModule$$$factorial(n$$50) {\n  const productR = function productR(a$$20, b$$15) {\n    if (BigNatModule$$$equal(a$$20, b$$15)) {\n      return a$$20;\n    } else {\n      const m$$3 = BigNatModule$$$div(BigNatModule$$$add(a$$20, b$$15), BigNatModule$$$ofInt32(2));\n      return BigNatModule$$$mul(productR(a$$20, m$$3), productR(BigNatModule$$$add(m$$3, BigNatModule$$$one), b$$15));\n    }\n  };\n\n  return productR(BigNatModule$$$one, n$$50);\n}","import { declare, Record } from \"../Types.js\";\nimport { type } from \"../Reflection.js\";\nimport { BigNatModule$$$factorial as BigNatModule$0024$0024$0024factorial, BigNatModule$$$ofString as BigNatModule$0024$0024$0024ofString, BigNatModule$$$toFloat as BigNatModule$0024$0024$0024toFloat, BigNatModule$$$toUInt64 as BigNatModule$0024$0024$0024toUInt64, BigNatModule$$$toUInt32 as BigNatModule$0024$0024$0024toUInt32, BigNatModule$$$pow as BigNatModule$0024$0024$0024pow, BigNatModule$$$rem as BigNatModule$0024$0024$0024rem, BigNatModule$$$two as BigNatModule$0024$0024$0024two, BigNatModule$$$lte as BigNatModule$0024$0024$0024lte, BigNatModule$$$hcf as BigNatModule$0024$0024$0024hcf, BigNatModule$$$bitXor as BigNatModule$0024$0024$0024bitXor, BigNatModule$$$bitOr as BigNatModule$0024$0024$0024bitOr, BigNatModule$$$bitAnd as BigNatModule$0024$0024$0024bitAnd, BigNatModule$$$divmod as BigNatModule$0024$0024$0024divmod, BigNatModule$$$mul as BigNatModule$0024$0024$0024mul, BigNatModule$$$isOne as BigNatModule$0024$0024$0024isOne, BigNatModule$$$sub as BigNatModule$0024$0024$0024sub, BigNatModule$$$gte as BigNatModule$0024$0024$0024gte, BigNatModule$$$scale as BigNatModule$0024$0024$0024scale, BigNatModule$$$add as BigNatModule$0024$0024$0024add, BigNatModule$$$one as BigNatModule$0024$0024$0024one, BigNatModule$$$ofInt64 as BigNatModule$0024$0024$0024ofInt64, BigNatModule$$$toString as BigNatModule$0024$0024$0024toString, BigNatModule$$$hash as BigNatModule$0024$0024$0024hash, BigNatModule$$$gt as BigNatModule$0024$0024$0024gt, BigNatModule$$$lt as BigNatModule$0024$0024$0024lt, BigNatModule$$$isZero as BigNatModule$0024$0024$0024isZero, BigNatModule$$$equal as BigNatModule$0024$0024$0024equal, BigNatModule$$$getSmall as BigNatModule$0024$0024$0024getSmall, BigNatModule$$$isSmall as BigNatModule$0024$0024$0024isSmall, BigNatModule$$$ofInt32 as BigNatModule$0024$0024$0024ofInt32 } from \"./n\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, compare, fromBits, op_UnaryNegation, fromInteger } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\nexport const BigInteger = declare(function BigInt_BigInteger(signInt, v) {\n  const $this$$1 = this;\n  $this$$1.signInt = signInt;\n  $this$$1.v = v;\n}, Record);\nexport function BigInteger$reflection() {\n  return type(\"BigInt.BigInteger\");\n}\nexport function BigInteger$$$$002Ector$$Z2BE94A1(signInt, v) {\n  return this instanceof BigInteger ? BigInteger.call(this, signInt, v) : new BigInteger(signInt, v);\n}\n\n(function BigInteger$$$$002Ecctor() {\n  BigInteger.smallLim = 4096;\n  BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule$0024$0024$0024ofInt32, Array);\n  BigInteger.one = BigInteger$$$$002Ector$$Z524259A4(1);\n  BigInteger.two = BigInteger$$$$002Ector$$Z524259A4(2);\n  BigInteger.zero = BigInteger$$$$002Ector$$Z524259A4(0);\n})();\n\nexport function BigInteger$$$nat$$Z67CCE57D(n$$1) {\n  if (BigNatModule$0024$0024$0024isSmall(n$$1) ? BigNatModule$0024$0024$0024getSmall(n$$1) < BigInteger.smallLim : false) {\n    return BigInteger.smallPosTab[BigNatModule$0024$0024$0024getSmall(n$$1)];\n  } else {\n    return n$$1;\n  }\n}\nexport function BigInteger$$$create$$Z2BE94A1(s, n$$2) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(s, BigInteger$$$nat$$Z67CCE57D(n$$2));\n}\nexport function BigInteger$$$posn$$Z67CCE57D(n$$3) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(1, BigInteger$$$nat$$Z67CCE57D(n$$3));\n}\nexport function BigInteger$$$negn$$Z67CCE57D(n$$4) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(n$$4));\n}\nexport function BigInteger$$get_Sign(x) {\n  if (BigInteger$$get_IsZero(x)) {\n    return 0;\n  } else {\n    return x.signInt | 0;\n  }\n}\nexport function BigInteger$$get_SignInt(x$$1) {\n  return x$$1.signInt;\n}\nexport function BigInteger$$get_V(x$$2) {\n  return x$$2.v;\n}\nexport function BigInteger$$$op_Equality$$56F059C0(x$$3, y) {\n  const matchValue = [BigInteger$$get_SignInt(x$$3), BigInteger$$get_SignInt(y)];\n  var $target$$2;\n\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      $target$$2 = 1;\n    } else if (matchValue[1] === 0) {\n      $target$$2 = 8;\n    } else if (matchValue[1] === 1) {\n      $target$$2 = 3;\n    } else {\n      $target$$2 = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      $target$$2 = 6;\n    } else if (matchValue[1] === 0) {\n      $target$$2 = 4;\n    } else if (matchValue[1] === 1) {\n      $target$$2 = 5;\n    } else {\n      $target$$2 = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      $target$$2 = 2;\n    } else if (matchValue[1] === 0) {\n      $target$$2 = 7;\n    } else if (matchValue[1] === 1) {\n      $target$$2 = 0;\n    } else {\n      $target$$2 = 9;\n    }\n  } else {\n    $target$$2 = 9;\n  }\n\n  switch ($target$$2) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_Inequality$$56F059C0(x$$4, y$$1) {\n  return !BigInteger$$$op_Equality$$56F059C0(x$$4, y$$1);\n}\nexport function BigInteger$$$op_LessThan$$56F059C0(x$$5, y$$2) {\n  const matchValue$$1 = [BigInteger$$get_SignInt(x$$5), BigInteger$$get_SignInt(y$$2)];\n  var $target$$3;\n\n  if (matchValue$$1[0] === -1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$3 = 1;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$3 = 8;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$3 = 3;\n    } else {\n      $target$$3 = 9;\n    }\n  } else if (matchValue$$1[0] === 0) {\n    if (matchValue$$1[1] === -1) {\n      $target$$3 = 6;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$3 = 4;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$3 = 5;\n    } else {\n      $target$$3 = 9;\n    }\n  } else if (matchValue$$1[0] === 1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$3 = 2;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$3 = 7;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$3 = 0;\n    } else {\n      $target$$3 = 9;\n    }\n  } else {\n    $target$$3 = 9;\n  }\n\n  switch ($target$$3) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(x$$5), BigInteger$$get_V(y$$2));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(y$$2), BigInteger$$get_V(x$$5));\n      }\n\n    case 2:\n      {\n        return false;\n      }\n\n    case 3:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n        }\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n      }\n\n    case 6:\n      {\n        return false;\n      }\n\n    case 7:\n      {\n        return false;\n      }\n\n    case 8:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThan$$56F059C0(x$$6, y$$3) {\n  const matchValue$$2 = [BigInteger$$get_SignInt(x$$6), BigInteger$$get_SignInt(y$$3)];\n  var $target$$4;\n\n  if (matchValue$$2[0] === -1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$4 = 1;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$4 = 8;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$4 = 3;\n    } else {\n      $target$$4 = 9;\n    }\n  } else if (matchValue$$2[0] === 0) {\n    if (matchValue$$2[1] === -1) {\n      $target$$4 = 6;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$4 = 4;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$4 = 5;\n    } else {\n      $target$$4 = 9;\n    }\n  } else if (matchValue$$2[0] === 1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$4 = 2;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$4 = 7;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$4 = 0;\n    } else {\n      $target$$4 = 9;\n    }\n  } else {\n    $target$$4 = 9;\n  }\n\n  switch ($target$$4) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(x$$6), BigInteger$$get_V(y$$3));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(y$$3), BigInteger$$get_V(x$$6));\n      }\n\n    case 2:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n        }\n      }\n\n    case 3:\n      {\n        return false;\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return false;\n      }\n\n    case 6:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n      }\n\n    case 7:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6));\n      }\n\n    case 8:\n      {\n        return false;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$compare$$56F059C0(n$$5, nn) {\n  if (BigInteger$$$op_LessThan$$56F059C0(n$$5, nn)) {\n    return -1 | 0;\n  } else if (BigInteger$$$op_Equality$$56F059C0(n$$5, nn)) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\nexport function BigInteger$$$hash$$Z665282C2(z) {\n  if (BigInteger$$get_SignInt(z) === 0) {\n    return 1;\n  } else {\n    return BigInteger$$get_SignInt(z) + BigNatModule$0024$0024$0024hash(BigInteger$$get_V(z)) | 0;\n  }\n}\n\nBigInteger.prototype.toString = function () {\n  const x$$7 = this;\n  const matchValue$$3 = BigInteger$$get_SignInt(x$$7) | 0;\n\n  switch (matchValue$$3) {\n    case -1:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$7)) ? \"0\" : \"-\" + BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    case 0:\n      {\n        return \"0\";\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\");\n      }\n  }\n};\n\nexport function BigInteger$$get_StructuredDisplayString(x$$8) {\n  return String(x$$8);\n}\n\nBigInteger.prototype.Equals = function (obj) {\n  const this$ = this;\n\n  if (obj instanceof BigInteger) {\n    const that = obj;\n    return BigInteger$$$op_Equality$$56F059C0(this$, that);\n  } else {\n    return false;\n  }\n};\n\nBigInteger.prototype.GetHashCode = function () {\n  const x$$9 = this;\n  return BigInteger$$$hash$$Z665282C2(x$$9) | 0;\n};\n\nexport function BigInteger$$$$002Ector$$Z524259A4(n$$6) {\n  if (n$$6 >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(n$$6)));\n  } else if (n$$6 === -2147483648) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(fromInteger(n$$6, false, 2)))));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(op_UnaryNegation_Int32(n$$6))));\n  }\n}\nexport function BigInteger$$$$002Ector$$Z524259C1(n$$7) {\n  if (compare(n$$7, fromBits(0, 0, false)) >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(n$$7)));\n  } else if (equals(n$$7, fromBits(0, 2147483648, false))) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024add(BigNatModule$0024$0024$0024ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule$0024$0024$0024one)));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(n$$7))));\n  }\n}\nexport function BigInteger$$$get_One() {\n  return BigInteger.one;\n}\nexport function BigInteger$$$get_Two() {\n  return BigInteger.two;\n}\nexport function BigInteger$$$get_Zero() {\n  return BigInteger.zero;\n}\nexport function BigInteger$$$op_UnaryNegation$$Z665282C2(z$$1) {\n  const matchValue$$4 = BigInteger$$get_SignInt(z$$1) | 0;\n\n  if (matchValue$$4 === 0) {\n    return BigInteger$$$get_Zero();\n  } else {\n    const i = matchValue$$4 | 0;\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(i), BigInteger$$get_V(z$$1));\n  }\n}\nexport function BigInteger$$$Scale$$Z320F31E(k, z$$2) {\n  if (BigInteger$$get_SignInt(z$$2) === 0) {\n    return BigInteger$$$get_Zero();\n  } else if (k < 0) {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(BigInteger$$get_SignInt(z$$2)), BigNatModule$0024$0024$0024scale(op_UnaryNegation_Int32(k), BigInteger$$get_V(z$$2)));\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(z$$2), BigNatModule$0024$0024$0024scale(k, BigInteger$$get_V(z$$2)));\n  }\n}\nexport function BigInteger$$$subnn$$6A57060(nx, ny) {\n  if (BigNatModule$0024$0024$0024gte(nx, ny)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(nx, ny));\n  } else {\n    return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(ny, nx));\n  }\n}\nexport function BigInteger$$$addnn$$6A57060(nx$$1, ny$$1) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024add(nx$$1, ny$$1));\n}\nexport function BigInteger$$get_IsZero(x$$10) {\n  if (BigInteger$$get_SignInt(x$$10) === 0) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$10));\n  }\n}\nexport function BigInteger$$get_IsOne(x$$11) {\n  if (BigInteger$$get_SignInt(x$$11) === 1) {\n    return BigNatModule$0024$0024$0024isOne(BigInteger$$get_V(x$$11));\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$op_Addition$$56F059C0(x$$12, y$$4) {\n  if (BigInteger$$get_IsZero(y$$4)) {\n    return x$$12;\n  } else if (BigInteger$$get_IsZero(x$$12)) {\n    return y$$4;\n  } else {\n    const matchValue$$5 = [BigInteger$$get_SignInt(x$$12), BigInteger$$get_SignInt(y$$4)];\n    var $target$$5;\n\n    if (matchValue$$5[0] === -1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$5 = 1;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$5 = 3;\n      } else {\n        $target$$5 = 4;\n      }\n    } else if (matchValue$$5[0] === 1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$5 = 2;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$5 = 0;\n      } else {\n        $target$$5 = 4;\n      }\n    } else {\n      $target$$5 = 4;\n    }\n\n    switch ($target$$5) {\n      case 0:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4)));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$4), BigInteger$$get_V(x$$12));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Subtraction$$56F059C0(x$$13, y$$5) {\n  if (BigInteger$$get_IsZero(y$$5)) {\n    return x$$13;\n  } else if (BigInteger$$get_IsZero(x$$13)) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(y$$5);\n  } else {\n    const matchValue$$6 = [BigInteger$$get_SignInt(x$$13), BigInteger$$get_SignInt(y$$5)];\n    var $target$$6;\n\n    if (matchValue$$6[0] === -1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$6 = 1;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$6 = 3;\n      } else {\n        $target$$6 = 4;\n      }\n    } else if (matchValue$$6[0] === 1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$6 = 2;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$6 = 0;\n      } else {\n        $target$$6 = 4;\n      }\n    } else {\n      $target$$6 = 4;\n    }\n\n    switch ($target$$6) {\n      case 0:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$5), BigInteger$$get_V(x$$13));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5)));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Multiply$$56F059C0(x$$14, y$$6) {\n  if (BigInteger$$get_IsZero(x$$14)) {\n    return x$$14;\n  } else if (BigInteger$$get_IsZero(y$$6)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(x$$14)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(y$$6)) {\n    return x$$14;\n  } else {\n    const m = BigNatModule$0024$0024$0024mul(BigInteger$$get_V(x$$14), BigInteger$$get_V(y$$6));\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(x$$14) * BigInteger$$get_SignInt(y$$6), m);\n  }\n}\nexport function BigInteger$$$DivRem$$56F059C0(x$$15, y$$7) {\n  if (BigInteger$$get_IsZero(y$$7)) {\n    throw new Error();\n  }\n\n  if (BigInteger$$get_IsZero(x$$15)) {\n    return [BigInteger$$$get_Zero(), BigInteger$$$get_Zero()];\n  } else {\n    const patternInput = BigNatModule$0024$0024$0024divmod(BigInteger$$get_V(x$$15), BigInteger$$get_V(y$$7));\n    const matchValue$$7 = [BigInteger$$get_SignInt(x$$15), BigInteger$$get_SignInt(y$$7)];\n    var $target$$7;\n\n    if (matchValue$$7[0] === -1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$7 = 1;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$7 = 3;\n      } else {\n        $target$$7 = 4;\n      }\n    } else if (matchValue$$7[0] === 1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$7 = 2;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$7 = 0;\n      } else {\n        $target$$7 = 4;\n      }\n    } else {\n      $target$$7 = 4;\n    }\n\n    switch ($target$$7) {\n      case 0:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 1:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 2:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 3:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Division$$56F059C0(x$$16, y$$8) {\n  return BigInteger$$$DivRem$$56F059C0(x$$16, y$$8)[0];\n}\nexport function BigInteger$$$op_Modulus$$56F059C0(x$$17, y$$9) {\n  return BigInteger$$$DivRem$$56F059C0(x$$17, y$$9)[1];\n}\nexport function BigInteger$$$op_RightShift$$62E082A2(x$$18, y$$10) {\n  return BigInteger$$$op_Division$$56F059C0(x$$18, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$10));\n}\nexport function BigInteger$$$op_LeftShift$$62E082A2(x$$19, y$$11) {\n  return BigInteger$$$op_Multiply$$56F059C0(x$$19, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$11));\n}\nexport function BigInteger$$$op_BitwiseAnd$$56F059C0(x$$20, y$$12) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitAnd(BigInteger$$get_V(x$$20), BigInteger$$get_V(y$$12)));\n}\nexport function BigInteger$$$op_BitwiseOr$$56F059C0(x$$21, y$$13) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitOr(BigInteger$$get_V(x$$21), BigInteger$$get_V(y$$13)));\n}\nexport function BigInteger$$$op_ExclusiveOr$$56F059C0(x$$22, y$$14) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitXor(BigInteger$$get_V(x$$22), BigInteger$$get_V(y$$14)));\n}\nexport function BigInteger$$$GreatestCommonDivisor$$56F059C0(x$$23, y$$15) {\n  const matchValue$$8 = [BigInteger$$get_SignInt(x$$23), BigInteger$$get_SignInt(y$$15)];\n\n  if (matchValue$$8[0] === 0) {\n    if (matchValue$$8[1] === 0) {\n      return BigInteger$$$get_Zero();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(y$$15));\n    }\n  } else if (matchValue$$8[1] === 0) {\n    return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(x$$23));\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024hcf(BigInteger$$get_V(x$$23), BigInteger$$get_V(y$$15)));\n  }\n}\nexport function BigInteger$$get_IsNegative(x$$24) {\n  if (BigInteger$$get_SignInt(x$$24) === -1) {\n    return !BigInteger$$get_IsZero(x$$24);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$get_IsPositive(x$$25) {\n  if (BigInteger$$get_SignInt(x$$25) === 1) {\n    return !BigInteger$$get_IsZero(x$$25);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$Abs$$Z665282C2(x$$26) {\n  if (BigInteger$$get_SignInt(x$$26) === -1) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(x$$26);\n  } else {\n    return x$$26;\n  }\n}\nexport function BigInteger$$$op_LessThanOrEqual$$56F059C0(x$$27, y$$16) {\n  const matchValue$$9 = [BigInteger$$get_SignInt(x$$27), BigInteger$$get_SignInt(y$$16)];\n  var $target$$8;\n\n  if (matchValue$$9[0] === -1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$8 = 1;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$8 = 6;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$8 = 3;\n    } else {\n      $target$$8 = 9;\n    }\n  } else if (matchValue$$9[0] === 0) {\n    if (matchValue$$9[1] === -1) {\n      $target$$8 = 8;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$8 = 4;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$8 = 7;\n    } else {\n      $target$$8 = 9;\n    }\n  } else if (matchValue$$9[0] === 1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$8 = 2;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$8 = 5;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$8 = 0;\n    } else {\n      $target$$8 = 9;\n    }\n  } else {\n    $target$$8 = 9;\n  }\n\n  switch ($target$$8) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(x$$27), BigInteger$$get_V(y$$16));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(y$$16), BigInteger$$get_V(x$$27));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        return true;\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27));\n      }\n\n    case 6:\n      {\n        return true;\n      }\n\n    case 7:\n      {\n        return true;\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThanOrEqual$$56F059C0(x$$28, y$$17) {\n  const matchValue$$10 = [BigInteger$$get_SignInt(x$$28), BigInteger$$get_SignInt(y$$17)];\n  var $target$$9;\n\n  if (matchValue$$10[0] === -1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$9 = 1;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$9 = 6;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$9 = 3;\n    } else {\n      $target$$9 = 9;\n    }\n  } else if (matchValue$$10[0] === 0) {\n    if (matchValue$$10[1] === -1) {\n      $target$$9 = 8;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$9 = 4;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$9 = 7;\n    } else {\n      $target$$9 = 9;\n    }\n  } else if (matchValue$$10[0] === 1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$9 = 2;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$9 = 5;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$9 = 0;\n    } else {\n      $target$$9 = 9;\n    }\n  } else {\n    $target$$9 = 9;\n  }\n\n  switch ($target$$9) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(x$$28), BigInteger$$get_V(y$$17));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(y$$17), BigInteger$$get_V(x$$28));\n      }\n\n    case 2:\n      {\n        return true;\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return true;\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n      }\n\n    case 8:\n      {\n        return true;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$Pow$$62E082A2(x$$29, y$$18) {\n  if (y$$18 < 0) {\n    throw new Error(\"y\");\n  }\n\n  const matchValue$$11 = [BigInteger$$get_IsZero(x$$29), y$$18];\n\n  if (matchValue$$11[0]) {\n    if (matchValue$$11[1] === 0) {\n      return BigInteger$$$get_One();\n    } else {\n      return BigInteger$$$get_Zero();\n    }\n  } else {\n    const yval = BigInteger$$$$002Ector$$Z524259A4(y$$18);\n    return BigInteger$$$create$$Z2BE94A1(BigNatModule$0024$0024$0024isZero(BigNatModule$0024$0024$0024rem(BigInteger$$get_V(yval), BigNatModule$0024$0024$0024two)) ? 1 : BigInteger$$get_SignInt(x$$29), BigNatModule$0024$0024$0024pow(BigInteger$$get_V(x$$29), BigInteger$$get_V(yval)));\n  }\n}\nexport function BigInteger$$get_ToInt32(x$$30) {\n  if (BigInteger$$get_IsZero(x$$30)) {\n    return 0;\n  } else {\n    const u = BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$30));\n\n    if (u <= 2147483647 >>> 0) {\n      return BigInteger$$get_SignInt(x$$30) * ~~u | 0;\n    } else if (BigInteger$$get_SignInt(x$$30) === -1 ? u === 2147483647 + 1 >>> 0 : false) {\n      return -2147483648 | 0;\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt32(x$$31) {\n  if (BigInteger$$get_IsZero(x$$31)) {\n    return 0;\n  } else {\n    return BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$31));\n  }\n}\nexport function BigInteger$$get_ToInt64(x$$32) {\n  if (BigInteger$$get_IsZero(x$$32)) {\n    return fromBits(0, 0, false);\n  } else {\n    const u$$1 = BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$32));\n\n    if (compare(u$$1, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n      return op_Multiply(fromInteger(BigInteger$$get_SignInt(x$$32), false, 2), fromValue(u$$1, false));\n    } else if (BigInteger$$get_SignInt(x$$32) === -1 ? equals(u$$1, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n      return fromBits(0, 2147483648, false);\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt64(x$$33) {\n  if (BigInteger$$get_IsZero(x$$33)) {\n    return fromBits(0, 0, true);\n  } else {\n    return BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$33));\n  }\n}\nexport function BigInteger$$get_ToDouble(x$$34) {\n  const matchValue$$12 = BigInteger$$get_SignInt(x$$34) | 0;\n\n  switch (matchValue$$12) {\n    case -1:\n      {\n        return -BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$get_ToSByte(x$$35) {\n  return (BigInteger$$get_ToInt32(x$$35) + 0x80 & 0xFF) - 0x80;\n}\nexport function BigInteger$$get_ToByte(x$$36) {\n  return BigInteger$$get_ToUInt32(x$$36) & 0xFF;\n}\nexport function BigInteger$$get_ToInt16(x$$37) {\n  return (BigInteger$$get_ToInt32(x$$37) + 0x8000 & 0xFFFF) - 0x8000;\n}\nexport function BigInteger$$get_ToUInt16(x$$38) {\n  return BigInteger$$get_ToUInt32(x$$38) & 0xFFFF;\n}\nexport function BigInteger$$get_ToSingle(x$$39) {\n  return BigInteger$$get_ToDouble(x$$39);\n}\nexport function BigInteger$$get_ToDecimal(x$$40) {\n  return new Decimal(BigInteger$$get_ToDouble(x$$40));\n}\nexport function BigInteger$$$Parse$$Z721C83C5(text) {\n  if (text == null) {\n    throw new Error(\"text\");\n  }\n\n  const text$$1 = text.trim();\n  const len = text$$1.length | 0;\n\n  if (len === 0) {\n    throw new Error();\n  }\n\n  const matchValue$$13 = [text$$1[0], len];\n\n  if (matchValue$$13[0] === \"+\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else if (matchValue$$13[0] === \"-\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1));\n  }\n}\nexport function BigInteger$$get_IsSmall(x$$41) {\n  if (BigInteger$$get_IsZero(x$$41)) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isSmall(BigInteger$$get_V(x$$41));\n  }\n}\nexport function BigInteger$$$Factorial$$Z665282C2(x$$42) {\n  if (BigInteger$$get_IsNegative(x$$42)) {\n    throw new Error(\"mustBeNonNegative\\\\nParameter name: x\");\n  }\n\n  if (BigInteger$$get_IsPositive(x$$42)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024factorial(BigInteger$$get_V(x$$42)));\n  } else {\n    return BigInteger$$$get_One();\n  }\n}\nexport function BigInteger$$$op_UnaryPlus$$Z665282C2(n1) {\n  return n1;\n}\nexport function BigInteger$$$FromInt64$$Z524259C1(x$$43) {\n  return BigInteger$$$$002Ector$$Z524259C1(x$$43);\n}\nexport function BigInteger$$$FromInt32$$Z524259A4(x$$44) {\n  return BigInteger$$$$002Ector$$Z524259A4(x$$44);\n}\n\nBigInteger.prototype.CompareTo = function (obj$$1) {\n  const this$$$1 = this;\n\n  if (obj$$1 instanceof BigInteger) {\n    const that$$1 = obj$$1;\n    return BigInteger$$$compare$$56F059C0(this$$$1, that$$1) | 0;\n  } else {\n    throw new Error(\"the objects are not comparable\\\\nParameter name: obj\");\n  }\n};","import { BigInteger$$$op_Inequality$$56F059C0 as BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0, BigInteger$$$op_Equality$$56F059C0 as BigInteger$0024$0024$0024op_Equality$0024$002456F059C0, BigInteger$$$op_GreaterThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0, BigInteger$$$op_GreaterThan$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0, BigInteger$$$op_LessThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0, BigInteger$$$op_LessThan$$56F059C0 as BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0, BigInteger$$$op_ExclusiveOr$$56F059C0 as BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0, BigInteger$$$op_BitwiseOr$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0, BigInteger$$$op_BitwiseAnd$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0, BigInteger$$$op_LeftShift$$62E082A2 as BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2, BigInteger$$$op_RightShift$$62E082A2 as BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2, BigInteger$$$op_UnaryPlus$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2, BigInteger$$$op_UnaryNegation$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2, BigInteger$$$op_Modulus$$56F059C0 as BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0, BigInteger$$$op_Division$$56F059C0 as BigInteger$0024$0024$0024op_Division$0024$002456F059C0, BigInteger$$$op_Multiply$$56F059C0 as BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0, BigInteger$$$op_Subtraction$$56F059C0 as BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0, BigInteger$$$op_Addition$$56F059C0 as BigInteger$0024$0024$0024op_Addition$0024$002456F059C0, BigInteger$$get_IsOne as BigInteger$0024$0024get_IsOne, BigInteger$$get_IsZero as BigInteger$0024$0024get_IsZero, BigInteger$$get_Sign as BigInteger$0024$0024get_Sign, BigInteger$$get_ToDecimal as BigInteger$0024$0024get_ToDecimal, BigInteger$$get_ToDouble as BigInteger$0024$0024get_ToDouble, BigInteger$$get_ToSingle as BigInteger$0024$0024get_ToSingle, BigInteger$$get_ToUInt64 as BigInteger$0024$0024get_ToUInt64, BigInteger$$get_ToInt64 as BigInteger$0024$0024get_ToInt64, BigInteger$$get_ToUInt32 as BigInteger$0024$0024get_ToUInt32, BigInteger$$get_ToInt32 as BigInteger$0024$0024get_ToInt32, BigInteger$$get_ToUInt16 as BigInteger$0024$0024get_ToUInt16, BigInteger$$get_ToInt16 as BigInteger$0024$0024get_ToInt16, BigInteger$$get_ToByte as BigInteger$0024$0024get_ToByte, BigInteger$$get_ToSByte as BigInteger$0024$0024get_ToSByte, BigInteger$$$$002Ector$$Z524259A4 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4, BigInteger$$$$002Ector$$Z524259C1 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1, BigInteger$$$get_Two as BigInteger$0024$0024$0024get_Two, BigInteger$$$get_One as BigInteger$0024$0024$0024get_One, BigInteger$$$Abs$$Z665282C2 as BigInteger$0024$0024$0024Abs$0024$0024Z665282C2, BigInteger$$$Pow$$62E082A2 as BigInteger$0024$0024$0024Pow$0024$002462E082A2, BigInteger$$$GreatestCommonDivisor$$56F059C0 as BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0, BigInteger$$$DivRem$$56F059C0 as BigInteger$0024$0024$0024DivRem$0024$002456F059C0, BigInteger$$$Parse$$Z721C83C5 as BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5, BigInteger$$$get_Zero as BigInteger$0024$0024$0024get_Zero, BigInteger } from \"./BigInt/z\";\nimport { fromInteger } from \"./Long.js\";\nimport { min, comparePrimitives, equals as equals$$1, structuralHash } from \"./Util.js\";\nimport { rangeNumber } from \"./Seq.js\";\nimport { fold, head, skipWhile, find, ofSeq } from \"./List.js\";\nimport { List } from \"./Types.js\";\nimport { fill, reverse, ofList } from \"./Array.js\";\nexport function isBigInt(x) {\n  return x instanceof BigInteger;\n}\nexport function tryParse(str) {\n  try {\n    const res = BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(str);\n    return [true, res];\n  } catch (matchValue) {\n    return [false, BigInteger$0024$0024$0024get_Zero()];\n  }\n}\nexport function parse(arg00) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(arg00);\n}\nexport function divRem(arg00$$1, arg01) {\n  return BigInteger$0024$0024$0024DivRem$0024$002456F059C0(arg00$$1, arg01);\n}\nexport function greatestCommonDivisor(arg00$$2, arg01$$1) {\n  return BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0(arg00$$2, arg01$$1);\n}\nexport function pow(arg00$$3, arg01$$2) {\n  return BigInteger$0024$0024$0024Pow$0024$002462E082A2(arg00$$3, arg01$$2);\n}\nexport function abs(arg00$$4) {\n  return BigInteger$0024$0024$0024Abs$0024$0024Z665282C2(arg00$$4);\n}\nexport const zero = BigInteger$0024$0024$0024get_Zero();\nexport const one = BigInteger$0024$0024$0024get_One();\nexport const two = BigInteger$0024$0024$0024get_Two();\nexport function fromString(s) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(s);\n}\nexport function fromZero() {\n  return BigInteger$0024$0024$0024get_Zero();\n}\nexport function fromOne() {\n  return BigInteger$0024$0024$0024get_One();\n}\nexport function fromInt64(i) {\n  return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1(i);\n}\nexport function fromInt32(i$$1) {\n  if (i$$1 > 2147483647) {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1(fromInteger(i$$1, false, 6));\n  } else {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(i$$1);\n  }\n}\nexport function toSByte(x$$1) {\n  return BigInteger$0024$0024get_ToSByte(x$$1);\n}\nexport function toByte(x$$2) {\n  return BigInteger$0024$0024get_ToByte(x$$2);\n}\nexport function toInt16(x$$3) {\n  return BigInteger$0024$0024get_ToInt16(x$$3);\n}\nexport function toUInt16(x$$4) {\n  return BigInteger$0024$0024get_ToUInt16(x$$4);\n}\nexport function toInt32(x$$5) {\n  return BigInteger$0024$0024get_ToInt32(x$$5);\n}\nexport function toUInt32(x$$6) {\n  return BigInteger$0024$0024get_ToUInt32(x$$6);\n}\nexport function toInt64(x$$7) {\n  return BigInteger$0024$0024get_ToInt64(x$$7);\n}\nexport function toUInt64(x$$8) {\n  return BigInteger$0024$0024get_ToUInt64(x$$8);\n}\nexport function toSingle(x$$9) {\n  return BigInteger$0024$0024get_ToSingle(x$$9);\n}\nexport function toDouble(x$$10) {\n  return BigInteger$0024$0024get_ToDouble(x$$10);\n}\nexport function toDecimal(x$$11) {\n  return BigInteger$0024$0024get_ToDecimal(x$$11);\n}\nexport function sign(x$$12) {\n  return BigInteger$0024$0024get_Sign(x$$12);\n}\nexport function isZero(x$$13) {\n  return BigInteger$0024$0024get_IsZero(x$$13);\n}\nexport function isOne(x$$14) {\n  return BigInteger$0024$0024get_IsOne(x$$14);\n}\nexport function hash(x$$15) {\n  return structuralHash(x$$15);\n}\nexport function compare(x$$16, y) {\n  return x$$16.CompareTo(y);\n}\nexport function equals(x$$17, y$$1) {\n  return equals$$1(x$$17, y$$1);\n}\nexport function toString(x$$18) {\n  return String(x$$18);\n}\nexport const get_Zero = BigInteger$0024$0024$0024get_Zero();\nexport const get_One = BigInteger$0024$0024$0024get_One();\nexport function op_Addition(arg00$$5, arg01$$3) {\n  return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(arg00$$5, arg01$$3);\n}\nexport function op_Subtraction(arg00$$6, arg01$$4) {\n  return BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0(arg00$$6, arg01$$4);\n}\nexport function op_Multiply(arg00$$7, arg01$$5) {\n  return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(arg00$$7, arg01$$5);\n}\nexport function op_Division(arg00$$8, arg01$$6) {\n  return BigInteger$0024$0024$0024op_Division$0024$002456F059C0(arg00$$8, arg01$$6);\n}\nexport function op_Modulus(arg00$$9, arg01$$7) {\n  return BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0(arg00$$9, arg01$$7);\n}\nexport function op_UnaryNegation(arg00$$10) {\n  return BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2(arg00$$10);\n}\nexport function op_UnaryPlus(arg00$$11) {\n  return BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2(arg00$$11);\n}\nexport function op_RightShift(arg00$$12, arg01$$8) {\n  return BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(arg00$$12, arg01$$8);\n}\nexport function op_LeftShift(arg00$$13, arg01$$9) {\n  return BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(arg00$$13, arg01$$9);\n}\nexport function op_BitwiseAnd(arg00$$14, arg01$$10) {\n  return BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(arg00$$14, arg01$$10);\n}\nexport function op_BitwiseOr(arg00$$15, arg01$$11) {\n  return BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0(arg00$$15, arg01$$11);\n}\nexport function op_ExclusiveOr(arg00$$16, arg01$$12) {\n  return BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0(arg00$$16, arg01$$12);\n}\nexport function op_LessThan(arg00$$17, arg01$$13) {\n  return BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0(arg00$$17, arg01$$13);\n}\nexport function op_LessThanOrEqual(arg00$$18, arg01$$14) {\n  return BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0(arg00$$18, arg01$$14);\n}\nexport function op_GreaterThan(arg00$$19, arg01$$15) {\n  return BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0(arg00$$19, arg01$$15);\n}\nexport function op_GreaterThanOrEqual(arg00$$20, arg01$$16) {\n  return BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0(arg00$$20, arg01$$16);\n}\nexport function op_Equality(arg00$$21, arg01$$17) {\n  return BigInteger$0024$0024$0024op_Equality$0024$002456F059C0(arg00$$21, arg01$$17);\n}\nexport function op_Inequality(arg00$$22, arg01$$18) {\n  return BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0(arg00$$22, arg01$$18);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n  const matchValue$$1 = [currByte, lowBitFound];\n\n  if (matchValue$$1[1]) {\n    return [(currByte ^ 255) & 255, true];\n  } else if (matchValue$$1[0] === 0) {\n    return [0, false];\n  } else {\n    const firstBitIndex = find(function predicate(i$$2) {\n      return (currByte & 1 << i$$2) > 0;\n    }, ofSeq(rangeNumber(0, 1, 7))) | 0;\n    return [(currByte ^ 254 << firstBitIndex) & 255, true];\n  }\n}\n\nexport function toByteArray(value$$1) {\n  if (equals$$1(value$$1, zero)) {\n    return new Uint8Array([0]);\n  } else {\n    const isPositive = value$$1.CompareTo(zero) > 0;\n    const value$$2 = isPositive ? value$$1 : BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$1);\n    const mask32 = fromInt64(fromInteger(4294967295, false, 6));\n\n    const loop = function loop(accumBytes, consumeValue, lowBitFound$$1) {\n      loop: while (true) {\n        if (consumeValue.CompareTo(zero) <= 0) {\n          const accumBytes$$1 = isPositive ? skipWhile(function predicate$$1(b) {\n            return b === 0;\n          }, accumBytes) : skipWhile(function predicate$$2(b$$1) {\n            return b$$1 === 255;\n          }, accumBytes);\n          const isHighBitOne = (head(accumBytes$$1) & 128) !== 0;\n          const accumBytes$$2 = (isPositive ? isHighBitOne : false) ? new List(0, accumBytes$$1) : (!isPositive ? !isHighBitOne : false) ? new List(255, accumBytes$$1) : accumBytes$$1;\n          return reverse(ofList(accumBytes$$2, Uint8Array), Uint8Array);\n        } else {\n          const currValue = toUInt32(BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(consumeValue, mask32));\n\n          if (isPositive) {\n            const b0 = currValue & 0xFF;\n            const b1 = currValue >>> 8 & 0xFF;\n            const b2 = currValue >>> 16 & 0xFF;\n            const b3 = currValue >>> 24 & 0xFF;\n            const $accumBytes$$3 = accumBytes;\n            const $consumeValue$$4 = consumeValue;\n            accumBytes = new List(b3, new List(b2, new List(b1, new List(b0, $accumBytes$$3))));\n            consumeValue = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2($consumeValue$$4, 32);\n            lowBitFound$$1 = false;\n            continue loop;\n          } else {\n            const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound$$1);\n            const patternInput$$1 = flipTwosComplement(currValue >>> 8 & 0xFF, patternInput[1]);\n            const patternInput$$2 = flipTwosComplement(currValue >>> 16 & 0xFF, patternInput$$1[1]);\n            const patternInput$$3 = flipTwosComplement(currValue >>> 24 & 0xFF, patternInput$$2[1]);\n            const $accumBytes$$5 = accumBytes;\n            const $consumeValue$$6 = consumeValue;\n            accumBytes = new List(patternInput$$3[0], new List(patternInput$$2[0], new List(patternInput$$1[0], new List(patternInput[0], $accumBytes$$5))));\n            consumeValue = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2($consumeValue$$6, 32);\n            lowBitFound$$1 = patternInput$$3[1];\n            continue loop;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop(new List(), value$$2, false);\n  }\n}\nexport function fromByteArray(bytes) {\n  if (bytes == null) {\n    throw new Error(\"bytes\");\n  }\n\n  if (bytes.length === 0) {\n    return zero;\n  } else {\n    const isPositive$$1 = (bytes[bytes.length - 1] & 128) === 0;\n    const buffer = fill(new Uint8Array(4), 0, 4, 0);\n\n    const loop$$1 = function loop$$1(accumUInt32, currIndex, bytesRemaining, lowBitFound$$6) {\n      loop$$1: while (true) {\n        if (bytesRemaining === 0) {\n          const value$$14 = fold(function folder(acc, value$$12) {\n            return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(acc, 32), fromInt64(fromInteger(value$$12, false, 6)));\n          }, zero, accumUInt32);\n\n          if (isPositive$$1) {\n            return value$$14;\n          } else {\n            return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$14);\n          }\n        } else {\n          const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\n\n          for (let i$$5 = 0; i$$5 <= bytesToProcess - 1; i$$5++) {\n            buffer[i$$5] = bytes[currIndex + i$$5];\n          }\n\n          if (isPositive$$1) {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n            const value$$15 = (((buffer[0] | buffer[1] << 8 >>> 0) >>> 0 | buffer[2] << 16 >>> 0) >>> 0 | buffer[3] << 24 >>> 0) >>> 0;\n            const $accumUInt32$$7 = accumUInt32;\n            const $bytesRemaining$$9 = bytesRemaining;\n            const $currIndex$$8 = currIndex;\n            accumUInt32 = new List(value$$15, $accumUInt32$$7);\n            currIndex = $currIndex$$8 + bytesToProcess;\n            bytesRemaining = $bytesRemaining$$9 - bytesToProcess;\n            lowBitFound$$6 = false;\n            continue loop$$1;\n          } else {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n            const patternInput$$4 = flipTwosComplement(buffer[0], lowBitFound$$6);\n            const patternInput$$5 = flipTwosComplement(buffer[1], patternInput$$4[1]);\n            const patternInput$$6 = flipTwosComplement(buffer[2], patternInput$$5[1]);\n            const patternInput$$7 = flipTwosComplement(buffer[3], patternInput$$6[1]);\n            const value$$16 = (((patternInput$$4[0] | patternInput$$5[0] << 8 >>> 0) >>> 0 | patternInput$$6[0] << 16 >>> 0) >>> 0 | patternInput$$7[0] << 24 >>> 0) >>> 0;\n            const $accumUInt32$$10 = accumUInt32;\n            const $bytesRemaining$$12 = bytesRemaining;\n            const $currIndex$$11 = currIndex;\n            accumUInt32 = new List(value$$16, $accumUInt32$$10);\n            currIndex = $currIndex$$11 + bytesToProcess;\n            bytesRemaining = $bytesRemaining$$12 - bytesToProcess;\n            lowBitFound$$6 = patternInput$$7[1];\n            continue loop$$1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop$$1(new List(), 0, bytes.length, false);\n  }\n}","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, padWithZeros } from \"./Util\";\nexport default function DateTimeOffset(value, offset) {\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nexport function fromDate(date, offset) {\n    const isUtc = date.kind === 1 /* UTC */;\n    const offset2 = isUtc ? 0 : date.getTimezoneOffset() * -60000;\n    if (offset != null && offset !== offset2) {\n        throw new Error(isUtc\n            ? \"The UTC Offset for Utc DateTime instances must be 0.\"\n            : \"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    if (offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes\");\n        }\n        if (~~(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hour\");\n        }\n    }\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    const d2 = new Date(d.getTime() + d.offset);\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    const d2 = new Date(d.getTime() + d.offset);\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    return new Date(d.getTime() + d.offset).getUTCDate();\n}\nexport function hour(d) {\n    return new Date(d.getTime() + d.offset).getUTCHours();\n}\nexport function millisecond(d) {\n    return new Date(d.getTime() + d.offset).getUTCMilliseconds();\n}\nexport function minute(d) {\n    return new Date(d.getTime() + d.offset).getUTCMinutes();\n}\nexport function month(d) {\n    return new Date(d.getTime() + d.offset).getUTCMonth() + 1;\n}\nexport function second(d) {\n    return new Date(d.getTime() + d.offset).getUTCSeconds();\n}\nexport function year(d) {\n    return new Date(d.getTime() + d.offset).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    return new Date(d.getTime() + d.offset).getUTCDay();\n}\nexport function dayOfYear(d) {\n    const d2 = new Date(d.getTime() + d.offset);\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    return DateTimeOffset(d.getTime() + ts, d.offset);\n}\nexport function addDays(d, v) {\n    return DateTimeOffset(d.getTime() + v * 86400000, d.offset);\n}\nexport function addHours(d, v) {\n    return DateTimeOffset(d.getTime() + v * 3600000, d.offset);\n}\nexport function addMinutes(d, v) {\n    return DateTimeOffset(d.getTime() + v * 60000, d.offset);\n}\nexport function addSeconds(d, v) {\n    return DateTimeOffset(d.getTime() + v * 1000, d.offset);\n}\nexport function addMilliseconds(d, v) {\n    return DateTimeOffset(d.getTime() + v, d.offset);\n}\nexport function addYears(d, v) {\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), d.offset);\n}\nexport function addMonths(d, v) {\n    const d2 = new Date(d.getTime() + d.offset);\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), d.offset);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, d.offset)\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n","(** UrlParser\n------\nThis port of the Elm library helps you turn URLs into nicely structured data.\nIt is designed to be used with `Navigation` module to help folks create\nsingle-page applications (SPAs) where you manage browser navigation yourself.\n*)\n\nmodule Elmish.Browser.UrlParser\n\n\n(** \n#### Types\n*)\n\ntype State<'v> =\n  { visited : string list\n    unvisited : string list\n    args : Map<string,string>\n    value : 'v }\n\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule internal State =\n  let mkState visited unvisited args value =\n        { visited = visited\n          unvisited = unvisited\n          args = args\n          value = value }\n          \n  let map f { visited = visited; unvisited = unvisited; args = args; value = value } =\n        { visited = visited\n          unvisited = unvisited\n          args = args\n          value = f value }\n\n\n/// Turn URLs like `/blog/42/cat-herding-techniques` into nice data.\ntype Parser<'a,'b> = State<'a> -> State<'b> list\n\n\n(** \n#### Parse segments\nCreate a custom path segment parser. You can use it to define something like “only CSS files” like this:\n```\n    let css =\n      custom \"CSS_FILE\" <| fun segment ->\n        if String.EndsWith \".css\" then\n          Ok segment\n        else\n          Error \"Does not end with .css\"\n```\n*)\nlet custom tipe stringToSomething : Parser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        match unvisited with\n        | [] -> []\n        | next :: rest ->\n            match stringToSomething next with\n            | Ok nextValue ->\n                [ State.mkState (next :: visited) rest args (value nextValue) ]\n\n            | Error msg ->\n                []\n    inner\n\n\n(** Parse a segment of the path as a `string`.\n```\n    parse str location\n```\n<pre>\n    /alice/  ==>  Some \"alice\"\n    /bob     ==>  Some \"bob\"\n    /42/     ==>  Some \"42\"\n</pre>\n*)\nlet str state =\n    custom \"string\" Ok state\n\n\n(** Parse a segment of the path as an `int`.\n```\n    parse i32 location\n```\n<pre>\n    /alice/  ==>  None\n    /bob     ==>  None\n    /42/     ==>  Some 42\n</pre>\n*)\nlet i32 state =\n    custom \"i32\" (System.Int32.TryParse >> function true, value -> Ok value | _ -> Error \"Can't parse int\" ) state\n\n\n(** Parse a segment of the path if it matches a given string.\n```\n    s \"blog\"  // can parse /blog/\n              // but not /glob/ or /42/ or anything else\n```\n*)\nlet s str : Parser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        match unvisited with\n        | [] -> []\n        | next :: rest ->\n            if next = str then\n                [ State.mkState (next :: visited) rest args value ]\n            else\n                []\n    inner\n\n\n\n(** \n#### Combining parsers\nParse a path with multiple segments.\n\n```\n    parse (s \"blog\" </> i32) location\n```\n<pre>\n    /blog/35/  ==>  Some 35\n    /blog/42   ==>  Some 42\n    /blog/     ==>  None\n    /42/       ==>  None\n</pre>\n```\n    parse (s \"search\" </> str) location\n```\n<pre>\n    /search/cats/  ==>  Some \"cats\"\n    /search/frog   ==>  Some \"frog\"\n    /search/       ==>  None\n    /cats/         ==>  None\n</pre>\n*)\nlet inline (</>) (parseBefore:Parser<_,_>) (parseAfter:Parser<_,_>) =\n  fun state ->\n    List.collect parseAfter (parseBefore state)\n\n\n(** Transform a path parser.\n```\n    type Comment = { author : string; id : int }\n    rawComment =\n      s \"user\" </> str </> s \"comments\" </> i32\n    comment =\n      map (fun a id -> { author = a; id = id }) rawComment\n    parse comment location\n```\n<pre>\n    /user/bob/comments/42  ==>  Some { author = \"bob\"; id = 42 }\n    /user/tom/comments/35  ==>  Some { author = \"tom\"; id = 35 }\n    /user/sam/             ==>  None\n</pre>\n*)\nlet map (subValue:'a) (parse:Parser<'a,'b>) : Parser<'b->'c,'c> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        List.map (State.map value) \n        <| parse { visited = visited\n                   unvisited = unvisited\n                   args = args\n                   value = subValue }\n    inner\n  \n\n\n(** Try a bunch of different path parsers.\n```\n    type Route\n      = Search of string\n      | Blog of int\n      | User of string\n      | Comment of string*int\n    route =\n      oneOf\n        [ map Search  (s \"search\" </> str)\n          map Blog    (s \"blog\" </> i32)\n          map User    (s \"user\" </> str)\n          map Comment (s \"user\" </> str </> \"comments\" </> i32) ]\n    parse route location\n```\n<pre>\n    /search/cats           ==>  Some (Search \"cats\")\n    /search/               ==>  None\n    /blog/42               ==>  Some (Blog 42)\n    /blog/cats             ==>  None\n    /user/sam/             ==>  Some (User \"sam\")\n    /user/bob/comments/42  ==>  Some (Comment \"bob\" 42)\n    /user/tom/comments/35  ==>  Some (Comment \"tom\" 35)\n    /user/                 ==>  None\n</pre>\n*)\nlet oneOf parsers state =\n    List.collect (fun parser -> parser state) parsers\n\n\n(** A parser that does not consume any path segments.\n```\n    type BlogRoute = Overview | Post of int\n    blogRoute =\n      oneOf\n        [ map Overview top\n          map Post  (s \"post\" </> i32) ]\n    parse (s \"blog\" </> blogRoute) location\n```\n<pre>\n    /blog/         ==>  Some Overview\n    /blog/post/42  ==>  Some (Post 42)\n</pre>\n*)\nlet top state=\n    [state]\n\n\n\n(** \n#### Query parameters\nTurn query parameters like `?name=tom&age=42` into nice data.\n\n*)\n\ntype QueryParser<'a,'b> = State<'a> -> State<'b> list\n\n\n(** Parse some query parameters.\n```\n    type Route = BlogList (Option string) | BlogPost Int\n    route =\n      oneOf\n        [ map BlogList (s \"blog\" <?> stringParam \"search\")\n          map BlogPost (s \"blog\" </> i32) ]\n    parse route location\n```\n<pre>\n    /blog/              ==>  Some (BlogList None)\n    /blog/?search=cats  ==>  Some (BlogList (Some \"cats\"))\n    /blog/42            ==>  Some (BlogPost 42)\n</pre>\n*)\nlet inline (<?>) (parser:Parser<_,_>) (queryParser:QueryParser<_,_>) : Parser<_,_> =\n    fun state ->\n        List.collect queryParser (parser state)\n\n(** Create a custom query parser. You could create parsers like these:\n```\n    val jsonParam : string -> Decoder a -> QueryParser (Option a -> b) b\n    val enumParam : string -> Map<string,a> -> QueryParser (Option a -> b) b\n```\n*)\nlet customParam (key: string) (func:string option -> _) : QueryParser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        [ State.mkState visited unvisited args (value (func (Map.tryFind key args))) ]\n    inner\n\n\n(** Parse a query parameter as a `string`.\n```\n    parse (s \"blog\" <?> stringParam \"search\") location\n```\n<pre>\n    /blog/              ==>  Some (Overview None)\n    /blog/?search=cats  ==>  Some (Overview (Some \"cats\"))\n</pre>\n*)\nlet stringParam name =\n    customParam name id\n\nlet internal intParamHelp =\n    Option.bind \n        (fun value ->\n            match System.Int32.TryParse value with\n            | (true,x) -> Some x\n            | _ -> None)\n\n(** Parse a query parameter as an `int`. Option you want to show paginated\nsearch results. You could have a `start` query parameter to say which result\nshould appear first.\n```\n    parse (s \"results\" <?> intParam \"start\") location\n```\n<pre>\n    /results           ==>  Some None\n    /results?start=10  ==>  Some (Some 10)\n</pre>\n*)\nlet intParam name =\n    customParam name intParamHelp\n\n\n// PARSER HELPERS\n\nlet rec internal parseHelp states =\n    match states with\n    | [] ->\n        None\n    | state :: rest ->\n        match state.unvisited with\n        | [] ->\n            Some state.value\n        | [\"\"] ->\n            Some state.value\n        | _ ->\n            parseHelp rest\n\nlet internal splitUrl (url:string) =\n    match List.ofArray <| url.Split([|'/'|]) with\n    | \"\" :: segments ->\n        segments\n    | segments ->\n        segments\n\n/// parse a given part of the location\nlet parse (parser:Parser<'a->'a,'a>) url args =\n    { visited = []\n      unvisited = splitUrl url\n      args = args\n      value = id }\n    |> parser\n    |> parseHelp\n\nopen Fable.Import\n\nlet internal toKeyValuePair (segment:string) =\n    match segment.Split('=') with\n    | [| key; value |] ->\n        Option.tuple (Option.ofFunc JS.decodeURI key) (Option.ofFunc JS.decodeURI value)\n    | _ -> None\n\n\nlet internal parseParams (querystring:string) =\n    querystring.Substring(1).Split('&')\n    |> Seq.map toKeyValuePair\n    |> Seq.choose id\n    |> Map.ofSeq\n\nopen Fable.Import.Browser\n\n(** \n#### Parsers\nParse based on `location.pathname` and `location.search`. This parser\nignores the hash entirely.\n*)\nlet parsePath (parser:Parser<_,_>) (location:Location) =\n    parse parser location.pathname (parseParams location.search)\n\n(** Parse based on `location.hash`. This parser ignores the normal\npath entirely.\n*)\nlet parseHash (parser:Parser<_,_>) (location:Location) =\n    let hash, search =\n        let hash = location.hash.Substring 1\n        if hash.Contains(\"?\") then\n            let h = hash.Substring(0, hash.IndexOf(\"?\"))\n            h, hash.Substring(h.Length)\n        else\n            hash, \"?\"\n\n    parse parser (hash) (parseParams search)\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    constructor() {\n        this.callCount = 0;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder\";\nimport { CancellationToken } from \"./AsyncBuilder\";\nimport { protectedCont } from \"./AsyncBuilder\";\nimport { protectedBind } from \"./AsyncBuilder\";\nimport { protectedReturn } from \"./AsyncBuilder\";\nimport { choice1, choice2 } from \"./Option\";\nimport { map } from \"./Seq\";\n// Implemented just for type references\nexport default class Async {\n}\nfunction emptyContinuation(x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(choice1(x)),\n            onError: (ex) => ctx.onSuccess(choice2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = null;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\n","(**\nCmd\n---------\nCore abstractions for dispatching messages in Elmish.\n\n*)\n\nnamespace Elmish\n\nopen System\n\n/// Dispatch - feed new message into the processing loop\ntype Dispatch<'msg> = 'msg -> unit\n\n/// Subscription - return immediately, but may schedule dispatch of a message at any time\ntype Sub<'msg> = Dispatch<'msg> -> unit\n\n/// Cmd - container for subscriptions that may produce messages\ntype Cmd<'msg> = Sub<'msg> list\n\n/// Cmd module for creating and manipulating commands\n[<RequireQualifiedAccess>]\nmodule Cmd =\n    /// Execute the commands using the supplied dispatcher\n    let internal exec (dispatch:Dispatch<'msg>) (cmd:Cmd<'msg>)=\n        cmd |> List.iter (fun sub -> sub dispatch)\n\n    /// None - no commands, also known as `[]`\n    let none : Cmd<'msg> =\n        []\n\n    /// Command to issue a specific message\n    let ofMsg (msg:'msg) : Cmd<'msg> =\n        [fun dispatch -> dispatch msg]\n\n    /// When emitting the message, map to another type\n    let map (f: 'a -> 'msg) (cmd: Cmd<'a>) : Cmd<'msg> =\n        cmd |> List.map (fun g -> (fun dispatch -> f >> dispatch) >> g)\n\n    /// Aggregate multiple commands\n    let batch (cmds: #seq<Cmd<'msg>>) : Cmd<'msg> =\n        cmds |> List.concat\n\n    /// Command that will evaluate an async block and map the result\n    /// into success or error (of exception)\n    let ofAsync (task: 'a -> Async<_>) \n                (arg: 'a) \n                (ofSuccess: _ -> 'msg) \n                (ofError: _ -> 'msg) : Cmd<'msg> =\n        let bind dispatch =\n            async {\n                let! r = task arg |> Async.Catch\n                dispatch (match r with\n                         | Choice1Of2 x -> ofSuccess x\n                         | Choice2Of2 x -> ofError x)\n            }\n        [bind >> Async.StartImmediate]\n\n    /// Command to evaluate a simple function and map the result\n    /// into success or error (of exception)\n    let ofFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n        let bind dispatch =\n            try\n                task arg\n                |> (ofSuccess >> dispatch)\n            with x ->\n                x |> (ofError >> dispatch)\n        [bind]\n\n    /// Command to evaluate a simple function and map the success to a message\n    /// discarding any possible error\n    let performFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n        let bind dispatch =\n            try\n                task arg\n                |> (ofSuccess >> dispatch)\n            with x ->\n                ()\n        [bind]\n\n    /// Command to evaluate a simple function and map the error (in case of exception)\n    let attemptFunc (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n        let bind dispatch =\n            try\n                task arg\n            with x ->\n                x |> (ofError >> dispatch)\n        [bind]\n\n    /// Command to call the subscriber\n    let ofSub (sub: Sub<'msg>) : Cmd<'msg> =\n        [sub]\n\n#if FABLE_COMPILER\n    open Fable.PowerPack\n\n    /// Command to call `promise` block and map the results\n    let ofPromise (task: 'a -> Fable.Import.JS.Promise<_>) \n                  (arg:'a) \n                  (ofSuccess: _ -> 'msg) \n                  (ofError: _ -> 'msg) : Cmd<'msg> =\n        let bind dispatch =\n            task arg\n            |> Promise.map (ofSuccess >> dispatch)\n            |> Promise.catch (ofError >> dispatch)\n            |> ignore\n        [bind]\n#else\n    open System.Threading.Tasks\n\n    /// Command to call a task and map the results\n    let inline ofTask (task: 'a -> Task<_>) \n                      (arg:'a) \n                      (ofSuccess: _ -> 'msg) \n                      (ofError: _ -> 'msg) : Cmd<'msg> =\n        ofAsync (task >> Async.AwaitTask) arg ofSuccess ofError\n\n#endif","namespace Elmish.React\n\nopen System\nopen Fable.Import.React\nopen Fable.Helpers.React\nopen Fable.Core\nopen Elmish\n\ntype LazyProps<'model> = {\n    model:'model\n    render:unit->ReactElement\n    equal:'model->'model->bool\n}\n\nmodule Components =\n    type LazyView<'model>(props) =\n        inherit Component<LazyProps<'model>,obj>(props)\n\n        override this.shouldComponentUpdate(nextProps, _nextState) =\n            not <| this.props.equal this.props.model nextProps.model\n\n        override this.render () =\n            this.props.render ()\n\n[<AutoOpen>]\nmodule Common =\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model\n    /// state: new state to render\n    let lazyViewWith (equal:'model->'model->bool)\n                     (view:'model->ReactElement)\n                     (state:'model) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model using the dispatch\n    /// state: new state to render\n    /// dispatch: dispatch function\n    let lazyView2With (equal:'model->'model->bool)\n                      (view:'model->'msg Dispatch->ReactElement)\n                      (state:'model)\n                      (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state dispatch\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new model (a tuple of two states)\n    /// view: function to render the model using the dispatch\n    /// state1: new state to render\n    /// state2: new state to render\n    /// dispatch: dispatch function\n    let lazyView3With (equal:_->_->bool) (view:_->_->_->ReactElement) state1 state2 (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state1 state2 dispatch\n              equal = equal\n              model = (state1,state2) }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of model to render the view\n    let lazyView (view:'model->ReactElement) =\n        lazyViewWith (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of two arguments to render the model using the dispatch\n    let lazyView2 (view:'model->'msg Dispatch->ReactElement) =\n        lazyView2With (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of three arguments to render the model using the dispatch\n    let lazyView3 (view:_->_->_->ReactElement) =\n        lazyView3With (=) view\n\n\n","import { defaultCancellationToken } from \"./Async\";\nimport { fromContinuations } from \"./Async\";\nimport { startImmediate } from \"./Async\";\nclass QueueCell {\n    constructor(message) {\n        this.value = message;\n    }\n}\nclass MailboxQueue {\n    add(message) {\n        const itCell = new QueueCell(message);\n        if (this.firstAndLast) {\n            this.firstAndLast[1].next = itCell;\n            this.firstAndLast = [this.firstAndLast[0], itCell];\n        }\n        else {\n            this.firstAndLast = [itCell, itCell];\n        }\n    }\n    tryGet() {\n        if (this.firstAndLast) {\n            const value = this.firstAndLast[0].value;\n            if (this.firstAndLast[0].next) {\n                this.firstAndLast = [this.firstAndLast[0].next, this.firstAndLast[1]];\n            }\n            else {\n                delete this.firstAndLast;\n            }\n            return value;\n        }\n        return void 0;\n    }\n}\nexport default class MailboxProcessor {\n    constructor(body, cancellationToken) {\n        this.body = body;\n        this.cancellationToken = cancellationToken || defaultCancellationToken;\n        this.messages = new MailboxQueue();\n    }\n}\nfunction __processEvents($this) {\n    if ($this.continuation) {\n        const value = $this.messages.tryGet();\n        if (value) {\n            const cont = $this.continuation;\n            delete $this.continuation;\n            cont(value);\n        }\n    }\n}\nexport function startInstance($this) {\n    startImmediate($this.body($this), $this.cancellationToken);\n}\nexport function receive($this) {\n    return fromContinuations((conts) => {\n        if ($this.continuation) {\n            throw new Error(\"Receive can only be called once!\");\n        }\n        $this.continuation = conts[0];\n        __processEvents($this);\n    });\n}\nexport function post($this, message) {\n    $this.messages.add(message);\n    __processEvents($this);\n}\nexport function postAndAsyncReply($this, buildMessage) {\n    let result;\n    let continuation;\n    function checkCompletion() {\n        if (result !== void 0 && continuation !== void 0) {\n            continuation(result);\n        }\n    }\n    const reply = {\n        reply: (res) => {\n            result = res;\n            checkCompletion();\n        },\n    };\n    $this.messages.add(buildMessage(reply));\n    __processEvents($this);\n    return fromContinuations((conts) => {\n        continuation = conts[0];\n        checkCompletion();\n    });\n}\nexport function start(body, cancellationToken) {\n    const mbox = new MailboxProcessor(body, cancellationToken);\n    startInstance(mbox);\n    return mbox;\n}\n","(**\nProgram\n---------\nCore abstractions for creating and running the dispatch loop.\n\n*)\n\nnamespace Elmish\n\nopen System\n\n/// Program type captures various aspects of program behavior\ntype Program<'arg, 'model, 'msg, 'view> = {\n    init : 'arg -> 'model * Cmd<'msg>\n    update : 'msg -> 'model -> 'model * Cmd<'msg>\n    subscribe : 'model -> Cmd<'msg>\n    view : 'model -> Dispatch<'msg> -> 'view\n    setState : 'model -> Dispatch<'msg> -> unit\n    onError : (string*exn) -> unit\n}\n\n/// Program module - functions to manipulate program instances\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule Program =\n    /// Typical program, new commands are produced by `init` and `update` along with the new state.\n    let mkProgram \n        (init : 'arg -> 'model * Cmd<'msg>) \n        (update : 'msg -> 'model -> 'model * Cmd<'msg>)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init\n          update = update\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError }\n\n    /// Simple program that produces only new state with `init` and `update`.\n    let mkSimple \n        (init : 'arg -> 'model) \n        (update : 'msg -> 'model -> 'model)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init >> fun state -> state,Cmd.none\n          update = fun msg -> update msg >> fun state -> state,Cmd.none\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError }\n\n    /// Subscribe to external source of events.\n    /// The subscription is called once - with the initial model, but can dispatch new messages at any time.\n    let withSubscription (subscribe : 'model -> Cmd<'msg>) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let sub model =\n            Cmd.batch [ program.subscribe model\n                        subscribe model ]\n        { program with subscribe = sub }\n\n    /// Trace all the updates to the console\n    let withConsoleTrace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let traceInit (arg:'arg) =\n            let initModel,cmd = program.init arg\n            Log.toConsole (\"Initial state:\", initModel)\n            initModel,cmd\n\n        let traceUpdate msg model =\n            Log.toConsole (\"New message:\", msg)\n            let newModel,cmd = program.update msg model\n            Log.toConsole (\"Updated state:\", newModel)\n            newModel,cmd\n\n        { program with\n            init = traceInit \n            update = traceUpdate }\n\n    /// Trace all the messages as they update the model\n    let withTrace trace (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with update = fun msg model -> trace msg model; program.update msg model}\n\n    /// Handle dispatch loop exceptions\n    let withErrorHandler onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = onError }\n\n    /// Start the program loop.\n    /// arg: argument to pass to the init() function.\n    /// program: program created with 'mkSimple' or 'mkProgram'.\n    let runWith (arg: 'arg) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let (model,cmd) = program.init arg\n        let inbox = MailboxProcessor.Start(fun (mb:MailboxProcessor<'msg>) ->\n            let rec loop (state:'model) =\n                async {\n                    let! msg = mb.Receive()\n                    let newState =\n                        try\n                            let (model',cmd') = program.update msg state\n                            program.setState model' mb.Post\n                            cmd' |> Cmd.exec mb.Post\n                            model'\n                        with ex ->\n                            program.onError (\"Unable to process a message:\", ex)\n                            state\n                    return! loop newState\n                }\n            loop model\n        )\n        program.setState model inbox.Post\n        let sub = \n            try \n                program.subscribe model \n            with ex ->\n                program.onError (\"Unable to subscribe:\", ex)\n                Cmd.none\n        sub @ cmd |> Cmd.exec inbox.Post\n\n    /// Start the dispatch loop with `unit` for the init() function.\n    let run (program: Program<unit, 'model, 'msg, 'view>) = runWith () program\n\n","(** Custom navigation\n------\nThis port of the Elm library is about treating the address bar as an input to your program.\nIt converts changes in the address bar into messages and provides functions for manipulation of the browser history.\n*)\nnamespace Elmish.Browser.Navigation\n\nopen Fable.Import.Browser\nopen Elmish\n\n(**\n#### Parser\nA function to turn the string in the address bar into data that is easier for your app to handle.\n*)\ntype Parser<'a> = Location -> 'a\n\ntype Navigable<'msg> =\n    | Change of Location\n    | UserMsg of 'msg\n\n(**\n#### Direct history manipulation\n*)\n[<RequireQualifiedAccess>]\nmodule Navigation =\n    let [<Literal>] internal NavigatedEvent = \"NavigatedEvent\"\n\n    /// Modify current location\n    let modifyUrl (newUrl:string):Cmd<_> =\n        [fun _ -> history.replaceState((), \"\", newUrl)]\n\n    /// Push new location into history and navigate there\n    let newUrl (newUrl:string):Cmd<_> =\n        [fun _ -> history.pushState((), \"\", newUrl)\n                  let ev = document.createEvent_CustomEvent()\n                  ev.initCustomEvent (NavigatedEvent, true, true, obj())\n                  window.dispatchEvent ev\n                  |> ignore ]\n\n    /// Jump to some point in history (positve=forward, nagative=backward)\n    let jump (n:int):Cmd<_> =\n        [fun _ -> history.go n]\n\n\n(**\n#### Program extensions\nTreat user's program as a child component, by wrapping it and handling navigation events.\n*)\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n        let mutable private onChangeRef : obj -> obj =\n            fun _ ->\n                failwith \"`onChangeRef` has not been itialized.\\nPlease make sure you used Elmish.Browser.Navigation.Program.Internal.subscribe\"\n\n        let subscribe (dispatch:Dispatch<_ Navigable>) =\n            let mutable lastLocation = None\n            let onChange _ =\n                match lastLocation with\n                | Some href when href = window.location.href -> ()\n                | _ ->\n                    lastLocation <- Some window.location.href\n                    Change window.location |> dispatch\n                |> box\n\n            onChangeRef <- onChange\n\n            window.addEventListener_popstate(unbox onChangeRef)\n            window.addEventListener_hashchange(unbox onChangeRef)\n            window.addEventListener(Navigation.NavigatedEvent, unbox onChangeRef)\n\n        let unsubscribe () =\n            window.removeEventListener(\"popstate\", unbox onChangeRef)\n            window.removeEventListener(\"hashchange\", unbox onChangeRef)\n            window.removeEventListener(Navigation.NavigatedEvent, unbox onChangeRef)\n\n        let toNavigableWith (parser : Parser<'a>)\n                            (urlUpdate : 'a->'model->('model * Cmd<'msg>))\n                            (program : Program<'a,'model,'msg,'view>)\n                            (onLocationChange : Dispatch<Navigable<'msg>> -> unit) =\n\n            let map (model, cmd) =\n                model, cmd |> Cmd.map UserMsg\n\n            let update msg model =\n                match msg with\n                | Change location ->\n                    urlUpdate (parser location) model\n                | UserMsg userMsg ->\n                    program.update userMsg model\n                |> map\n\n            let subs model =\n                Cmd.batch\n                  [ [ onLocationChange ]\n                    program.subscribe model |> Cmd.map UserMsg ]\n\n            let init () =\n                program.init (parser window.location) |> map\n\n            { init = init\n              update = update\n              subscribe = subs\n              onError = program.onError\n              setState = fun model dispatch -> program.setState model (UserMsg >> dispatch)\n              view = fun model dispatch -> program.view model (UserMsg >> dispatch) }\n\n    /// Add the navigation to a program made with `mkProgram` or `mkSimple`.\n    /// urlUpdate: similar to `update` function, but receives parsed url instead of message as an input.\n    let toNavigable (parser : Parser<'a>)\n                    (urlUpdate : 'a->'model->('model * Cmd<'msg>))\n                    (program : Program<'a,'model,'msg,'view>) =\n\n        Internal.toNavigableWith parser urlUpdate program Internal.subscribe\n","module Home.State\n\nopen Elmish\nopen Types\nopen Domain.Types\nopen Common.Common\n\nlet allCamels = [Yellow; Blue; Orange; Green; White]\n\n\nlet initialMap : Map =\n    Array.init (Constants.fieldsCount + Constants.maxRollDice)\n        (function\n        | 0 -> CamelStack allCamels |> Some\n        | 3 -> PlusOne |> Plate |> Some\n        | 6 -> MinusOne |> Plate |> Some\n        | _ -> None)\n\nlet initialState = {\n  Map = initialMap\n  DicesLeft = allCamels\n  StageWinChances = None\n  RaceWinChances = None\n}\n\nlet init () : Model * Cmd<Msg> =\n  initialState, []\n\nlet findCamelStack camel model =\n  model\n  |> Array.indexed\n  |> Array.choose (fun f ->\n                    match f with\n                    | (i, Some (CamelStack stack)) ->\n                      if stack |> List.contains camel then Some (i, stack) else None\n                    | _ -> None)\n  |> Array.head\n\nlet createCalculationCmd map dicesLeft =\n  let stageCommand = ServiceWorker.Api.CalculateStageWinChancesCommand {Map = map; DicesLeft = dicesLeft}\n  let raceCommand = ServiceWorker.Api.CalculateRaceWinChancesCommand {Map = map; DicesLeft = dicesLeft}\n\n  let stagePromiseCommand =\n    Cmd.ofPromise\n      ServiceWorkerClient.postMsg\n      stageCommand\n      (fun r -> StageWinChancesComputed r)\n      (fun _ -> ComputationError)\n\n  let racePromiseCommand =\n    Cmd.ofPromise\n      ServiceWorkerClient.postMsg\n      raceCommand\n      (fun r -> RaceWinChancesComputed r)\n      (fun _ -> ComputationError)\n  Cmd.batch [stagePromiseCommand; racePromiseCommand]\n\nlet handleCamelDropped msg model (droppedCamel, place) =\n    match place with\n    | OnTopOfCamel targetCamel ->\n      let newMap =\n        let map = model.Map\n        let (oldStackIndex, oldStack) = map |> findCamelStack droppedCamel\n        let (targetStackIndex, targetStack) = map |> findCamelStack targetCamel\n\n        let targetCamelPosition = targetStack |> List.findIndex (fun c -> c = targetCamel)\n        let newMap =\n            let updatedOldStack =\n                oldStack\n                |> List.where (fun c -> c <> droppedCamel)\n                |> CamelStack |> Some\n            let updatedTargetStack =\n              targetStack\n              |> List.where (fun c -> c <> droppedCamel)\n              |> insertElement targetCamelPosition droppedCamel\n              |> CamelStack |> Some\n            map\n            |> setElement oldStackIndex updatedOldStack\n            |> setElement targetStackIndex updatedTargetStack\n        newMap\n      {model with\n        Map = newMap\n        }, createCalculationCmd newMap model.DicesLeft\n    | OnField fieldIndex ->\n      let newMap =\n        let map = model.Map\n        let (oldStackIndex, oldStack) = map |> findCamelStack droppedCamel\n        let oldStackUpdated =\n          oldStack\n          |> List.where (fun c -> c <> droppedCamel)\n          |> CamelStack |> Some\n        let newField = map.[fieldIndex]\n        let newFieldUpdated =\n          match newField with\n          | Some (CamelStack s) -> CamelStack (droppedCamel :: (s |> List.where (fun c -> c <> droppedCamel)))\n          | None -> CamelStack [droppedCamel]\n          |> Some\n\n        let newMap =\n          map\n          |> setElement oldStackIndex oldStackUpdated\n          |> setElement fieldIndex newFieldUpdated\n        newMap\n\n      {model with\n          Map = newMap\n      }, createCalculationCmd newMap model.DicesLeft\n\n\nlet update msg model : Model * Cmd<Msg> =\n    match msg with\n    | CamelDropped (place, camel) ->\n        handleCamelDropped msg model (place, camel)\n\n    | ResetDices ->\n         {model with\n            DicesLeft = allCamels\n         }, createCalculationCmd model.Map allCamels\n    | MarkDiceAsUsed(dice) ->\n         let newDicesLeft = model.DicesLeft |> List.where (fun d -> d <> dice)\n         {model with\n            DicesLeft = newDicesLeft\n         }, createCalculationCmd model.Map newDicesLeft\n\n    | RaceWinChancesComputed(chances) -> {model with RaceWinChances = Some chances}, []\n    | StageWinChancesComputed(chances) ->  {model with StageWinChances = Some chances}, []\n\n    | ExistingPlateDropped(plateIndex, fieldIndex) ->\n        let plate = model.Map.[plateIndex]\n        let newMap =\n          model.Map\n          |> setElement fieldIndex plate\n          |> setElement plateIndex None\n        {model with Map = newMap}, createCalculationCmd newMap model.DicesLeft\n    | FlipPlate (plateIndex) ->\n      let plate = model.Map.[plateIndex]\n      let newMap =\n        match plate with\n        | Some (Plate PlusOne) ->\n          model.Map |> setElement plateIndex (Some (Plate MinusOne))\n        | Some (Plate MinusOne) ->\n          model.Map |> setElement plateIndex (Some (Plate PlusOne))\n        | _ -> failwith \"not a plate\"\n      {model with Map = newMap}, createCalculationCmd newMap model.DicesLeft\n    | NewPlateDroppedOnBoard(plate, fieldIndex) ->\n      let target = model.Map.[fieldIndex]\n      match target with\n      | (Some (CamelStack s)) -> model, []\n      | _ ->\n        let newMap =\n          match plate with\n          | PlusOne -> model.Map |> setElement fieldIndex (Some (Plate PlusOne))\n          | MinusOne -> model.Map |> setElement fieldIndex (Some (Plate MinusOne))\n        {model with Map = newMap}, createCalculationCmd newMap model.DicesLeft\n    | RemovePlates ->\n      let newMap =\n        model.Map\n        |> Array.map\n          (fun f ->\n            match f with\n            | Some (Plate _) -> None\n            | i -> i)\n      {model with Map = newMap}, createCalculationCmd newMap model.DicesLeft\n\n    | ComputationError -> failwith \"Not Implemented\"\n    | RollDice(dice, count) ->\n      let (newMap, newIndex) = model.Map |> Domain.MoveCamel.applyRoll  {Count = count; Camel = dice}\n\n      if newIndex < Domain.Types.Constants.fieldsCount then\n        let newDicesLeft = model.DicesLeft |> List.where (fun d -> d <> dice)\n        {model with\n            Map = newMap\n            DicesLeft = newDicesLeft\n        }, createCalculationCmd newMap newDicesLeft\n\n      else model, []\n","module Domain.MoveCamel\nopen Types\nopen Common.Common\n\nlet applyRoll (roll : DiceRoll) (map : Map) : (Map * int) =\n    let {Count = rollNumber; Camel = camel} = roll\n    // printfn \"map: %A\" map\n    // printfn \"roll: %A\" roll\n\n    let (camelMapIndex, Some (CamelStack camelStack)) =\n      map\n      |> Array.indexed\n      |> Array.find (\n          function\n          | (_, Some (CamelStack s)) -> s |> List.contains camel\n          | _ -> false\n      )\n\n    let camelStackIndex = camelStack |> List.findIndex ((=) camel)\n\n    // printfn \"camel stack: %A\" camelStack\n    // printfn \"index: %A\" camelStackIndex\n\n    let (camelsToMove, camelsToStay) =\n        camelStack\n        |> List.splitAt (camelStackIndex + 1)\n\n    // printfn \"move: %A\" camelsToMove\n    // printfn \"stay: %A\" camelsToStay\n\n    let newCamelMapIndex = camelMapIndex + rollNumber;\n    let fieldToLeave =\n        match camelsToStay with\n        | [] -> None\n        | camels -> (Some (CamelStack camels))\n\n    let mapWithRemovedCamels =\n               map\n               |> setElement camelMapIndex\n                    fieldToLeave\n\n    // printfn \"map: %A\" mapWithRemovedCamels\n\n    // printfn \"new field: %A\" newField\n\n    let map =\n      match map.[newCamelMapIndex] with\n      | Some (Plate p) ->\n        match p with\n        | PlusOne ->\n          match map.[newCamelMapIndex + 1] with\n          | Some (CamelStack camels) ->\n            let newCamelStack =  camelsToMove @ camels\n            mapWithRemovedCamels\n            |> setElement (newCamelMapIndex + 1) (Some (CamelStack newCamelStack))\n          | None ->\n            mapWithRemovedCamels\n            |> setElement (newCamelMapIndex + 1) (Some (CamelStack camelsToMove))\n          | _ -> failwith \"two plates next to each other\"\n        | MinusOne ->\n          match map.[newCamelMapIndex - 1] with\n          | Some (CamelStack camels) ->\n            let newCamelStack =  camels @ camelsToMove\n            mapWithRemovedCamels\n            |> setElement (newCamelMapIndex - 1) (Some (CamelStack newCamelStack))\n          | None ->\n            mapWithRemovedCamels\n            |> setElement (newCamelMapIndex - 1) (Some (CamelStack camelsToMove))\n          | _ -> failwith \"two plates next to each other\"\n\n      | Some (CamelStack camels) ->\n          let newCamelStack =  camelsToMove @ camels\n          mapWithRemovedCamels\n          |> setElement newCamelMapIndex (Some (CamelStack newCamelStack))\n      | None ->\n          mapWithRemovedCamels\n          |> setElement newCamelMapIndex (Some (CamelStack camelsToMove))\n    // printfn \"map at end: %A\" map\n    // printfn \"\"\n    (map, camelMapIndex)\n","module App.View\n\nopen Elmish\nopen Elmish.Browser.Navigation\nopen Elmish.Browser.UrlParser\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Fable.Import\nopen Fable.Import.Browser\nopen Types\nopen App.State\nopen Global\n\nimportAll \"../sass/main.sass\"\n\nopen Fable.Helpers.React\nopen Fable.Helpers.React.Props\n\nlet menuItem label page currentPage =\n    li\n      [ ]\n      [ a\n          [ classList [ \"is-active\", page = currentPage ]\n            Href (toHash page) ]\n          [ str label ] ]\n\nlet menu currentPage =\n  aside\n    [ ClassName \"menu\" ]\n    [ p\n        [ ClassName \"menu-label\" ]\n        [ str \"General\" ]\n      ul\n        [ ClassName \"menu-list\" ]\n        [ menuItem \"Calculator\" Home currentPage\n          menuItem \"About\" Page.About currentPage ] ]\n\nlet root model dispatch =\n\n  let pageHtml page =\n    match page with\n    | Page.About -> Info.View.root\n    | Home -> Home.View.root model.Home (HomeMsg >> dispatch)\n\n  div\n    []\n    [ Navbar.View.root\n      div\n        [ ClassName \"section\" ]\n        [ div\n            [ ClassName \"container\" ]\n            [ div\n                [ ClassName \"columns\" ]\n                [ div\n                    [ ClassName \"column is-3\" ]\n                    [ menu model.CurrentPage ]\n                  div\n                    [ ClassName \"column\" ]\n                    [ pageHtml model.CurrentPage ] ] ] ] ]\n\nopen Elmish.React\nopen Elmish.Debug\nopen Elmish.HMR\n\nServiceWorkerClient.install ()\n\n// App\nProgram.mkProgram init update root\n|> Program.toNavigable (parseHash pageParser) urlUpdate\n#if DEBUG\n|> Program.withDebugger\n#endif\n|> Program.withReact \"elmish-app\"\n|> Program.run\n","namespace Elmish.React\n\nopen System\nopen Fable.Import.React\nopen Fable.Core\nopen Fable.Helpers.React\n\n[<AutoOpen>]\nmodule Helpers =\n    open Fable.Helpers.React.Props\n    open Fable.Core.JsInterop\n\n    /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n    /// Can be used override input box value.\n    let inline valueOrDefault value =\n        Ref <| (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\n\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n\n        open Fable.Import.Browser\n\n        let withReactUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let mutable lastRequest = None\n            let setState model dispatch =\n                match lastRequest with\n                | Some r -> window.cancelAnimationFrame r\n                | _ -> ()\n\n                lastRequest <- Some (window.requestAnimationFrame (fun _ ->\n                    Fable.Import.ReactDom.render(\n                        lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) program.view model dispatch,\n                        document.getElementById(placeholderId)\n                    )))\n\n            { program with setState = setState }\n\n        let withReactUnoptimizedUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                Fable.Import.ReactDom.render(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) program.view model dispatch,\n                    document.getElementById(placeholderId)\n                )\n\n            { program with setState = setState }\n\n        let withReactHydrateUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                Fable.Import.ReactDom.hydrate(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) program.view model dispatch,\n                    document.getElementById(placeholderId)\n                )\n\n            { program with setState = setState }\n\n    /// Setup rendering of root React component inside html element identified by placeholderId\n    let withReact placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactUsing lazyView2With placeholderId program\n\n    /// `withReact` uses `requestAnimationFrame` to optimize rendering in scenarios with updates at a higher rate than 60FPS, but this makes the cursor jump to the end in `input` elements.\n    /// This function works around the glitch if you don't need the optimization (see https://github.com/elmish/react/issues/12).\n    let withReactUnoptimized placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactUnoptimizedUsing lazyView2With placeholderId program\n\n    /// Setup rendering of root React component inside html element identified by placeholderId using React.hydrate\n    let withReactHydrate placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactHydrateUsing lazyView2With placeholderId program\n"],"sourceRoot":""}